

// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//

&Вместо("ОбработкаПроведения")
Процедура pcru_ex_ОбработкаПроведения(Отказ, РежимПроведения)
	Если не ЭтотОбъект.ОбязательстваОтраженыВБухучете Тогда
		Возврат;
	КонецЕсли; 
	
	НомерстрокиЗП = 0;
	НаборЗаписей = РегистрыБухгалтерии.БНФОБанковский.СоздатьНаборЗаписей(); 
	НаборЗаписей.Отбор.Регистратор.Установить(ЭтотОбъект.Ссылка);
	НаборЗаписей.Прочитать();                                                                                         
	НаборЗаписей.Очистить();
	ОписаниеПроводок = Новый Массив;
	#Область ЗП 
	Для каждого СтрокаЗП Из ЭтотОбъект.ОценочныеОбязательства Цикл		
		НеПриоритетно = Истина;
			
		Запрос8 = Новый Запрос;
		Запрос8.Текст = "ВЫБРАТЬ
		|	СпособыОтраженияЗарплатыВБухУчетеДополнительныеРеквизиты.Значение КАК Значение
		|ИЗ
		|	Справочник.СпособыОтраженияЗарплатыВБухУчете.ДополнительныеРеквизиты КАК СпособыОтраженияЗарплатыВБухУчетеДополнительныеРеквизиты
		|ГДЕ
		|	СпособыОтраженияЗарплатыВБухУчетеДополнительныеРеквизиты.Ссылка = &Ссылка
		|	И СпособыОтраженияЗарплатыВБухУчетеДополнительныеРеквизиты.Свойство.Заголовок = &Наименование";
		Запрос8.УстановитьПараметр("Ссылка",СтрокаЗП.СпособОтраженияЗарплатыВБухучете );
		Запрос8.УстановитьПараметр("Наименование", "ПриоритетПроцесскодаИзСпособаОтражения");
		Выборка8 = Запрос8.Выполнить().Выбрать();
		Пока Выборка8.Следующий() Цикл
			НеПриоритетно = не Выборка8.Значение;	
		КонецЦикла;	
	
		НоваяЗапись = НаборЗаписей.Добавить(); 
		НоваяЗапись.Активность = Истина;
		НоваяЗапись.Организация = ЭтотОбъект.Организация;
		НоваяЗапись.Период = Конецмесяца(ЭтотОбъект.ПериодРегистрации);
		НоваяЗапись.Регистратор = ЭтотОбъект.Ссылка;
		НоваяЗапись.Сумма = СтрокаЗП.СуммаРезерва;
		
		НоваяЗапись.СчетАналитическогоУчетаДт  =  СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СчДТ_ОСН;
		НоваяЗапись.СчетДт = НоваяЗапись.СчетАналитическогоУчетаДт.Владелец;
		
		Если ЗначениеЗаполнено(СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СубконтоДТ1_ОСН) Тогда
			БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 1, СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СубконтоДТ1_ОСН); // статья доходов расходов
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СубконтоДТ2_ОСН) Тогда
			БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 2, СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СубконтоДТ2_ОСН); // статья доходов расходов
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СубконтоДТ2_ОСН) Тогда
			БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 3, СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СубконтоДТ2_ОСН); // статья доходов расходов
		КонецЕсли; 
		
		
		Если ЗначениеЗаполнено(СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СубконтоДТ2_ОСН) Тогда
			БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 3, СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СубконтоДТ2_ОСН); // статья доходов расходов
		КонецЕсли;
		
		Для каждого СубконтоСчета Из НоваяЗапись.СчетАналитическогоУчетаДт.Владелец.ВидыСубконто Цикл
			
			Если НеПриоритетно  Тогда
				Если СубконтоСчета.ВидСубконто.Идентификатор = "ProcessCode" Тогда
					
					//Запрос9 = Новый Запрос;
					//Запрос9.Текст = "ВЫБРАТЬ
					//|	ПодразделенияОрганизацийДополнительныеРеквизиты.Значение КАК Значение
					//|ИЗ
					//|	Справочник.ПодразделенияОрганизаций.ДополнительныеРеквизиты КАК ПодразделенияОрганизацийДополнительныеРеквизиты
					//|ГДЕ
					//|	ПодразделенияОрганизацийДополнительныеРеквизиты.Ссылка = &Ссылка
					//|	И ПодразделенияОрганизацийДополнительныеРеквизиты.Свойство.Заголовок = ""ПК ЗУП""";
					//Запрос9.УстановитьПараметр("Ссылка",СтрокаЗП.Подразделение);
					//Выборка9 = Запрос9.Выполнить().Выбрать();
					//Пока Выборка9.Следующий() Цикл
					//	БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, pcru_УМФО.ПолучитьПК(Выборка9.Значение)); // статья доходов расходов
					//КонецЦикла;
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, СтрокаЗП.Подразделение.pcru_ProcessCode); 	// статья доходов расходов
					
					Попытка
						Если СтрокаЗП.ProcessCode <> "" Тогда
							БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, pcru_УМФО.ПолучитьПК(СтрокаЗП.ProcessCode)); // статья доходов расходов
						КонецЕсли;
					Исключение
					КонецПопытки;
					
					Попытка
						Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СубконтоДТ1_ОСН.Наименование = "01431 Резерв на отпуск НЕ НБ" Тогда
							БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, Справочники.БНФОСубконто.НайтиПоНаименованию("9905-Support processes")); // статья доходов расходов
						КонецЕсли;
					Исключение
					КонецПопытки;
					
					Попытка
						Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СубконтоДТ1_ОСН.Наименование = "01113 Ежемесячное базовое вознаграждение членам Совета Директоров НЕ НБ" Тогда
							БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, Справочники.БНФОСубконто.НайтиПоНаименованию("9906-Company management")); // статья доходов расходов
						КонецЕсли;
					Исключение
					КонецПопытки;
				КонецЕсли;  
			КонецЕсли; 
			
			Если СубконтоСчета.ВидСубконто.Идентификатор = "ТипЗатрат" Тогда
				
				Если СокрЛП(СтрокаЗП.pcru_ex_ТипЗатрат) = "1" Тогда
					
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, Справочники.БНФОСубконто.НайтиПоНаименованию("Тип затрат 1"));
					
				КонецЕсли; 
				
				
				Если СокрЛП(СтрокаЗП.pcru_ex_ТипЗатрат) = "2" Тогда
					
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, Справочники.БНФОСубконто.НайтиПоНаименованию("Тип затрат 2"));
					
				КонецЕсли; 
				
				Если СокрЛП(СтрокаЗП.pcru_ex_ТипЗатрат) = "" Тогда
					
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, Справочники.БНФОСубконто.ПустаяСсылка());
					
				КонецЕсли;			
			КонецЕсли; 		
		КонецЦикла;
				
		НоваяЗапись.СчетАналитическогоУчетаКт  =  СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СчКТ_ОСН;
		НоваяЗапись.СчетКт = НоваяЗапись.СчетАналитическогоУчетаКт.Владелец;
		
		Если ЗначениеЗаполнено(СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СубконтоКТ1_ОСН) Тогда
			БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 1, СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СубконтоКТ1_ОСН); // статья доходов расходов
		КонецЕсли; 
		Если ЗначениеЗаполнено(СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СубконтоКТ2_ОСН) Тогда
			БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 2, СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СубконтоКТ2_ОСН); // process code			
		КонецЕсли; 
		Если ЗначениеЗаполнено(СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СубконтоКТ3_ОСН)Тогда
			БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 3, СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СубконтоКТ3_ОСН); // process code			
		КонецЕсли; 
		
		Подразделение = СтрокаЗП.Подразделение;
		
		Если НоваяЗапись.СчетДт.УчетПоПодразделениям Тогда
			НоваяЗапись.ПодразделениеДт  =  Подразделение;//СтрокаЗП.Подразделение;
		КонецЕсли; 
		
		Если НоваяЗапись.СчетКт.УчетПоПодразделениям Тогда
			НоваяЗапись.ПодразделениеКт  =  Подразделение;//СтрокаЗП.Подразделение;
		КонецЕсли; 
		
		//ВР
		Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_Сумму_В_ВР_ОСН_Дт Тогда
			НоваяЗапись.СуммаВРДт = СтрокаЗП.СуммаРезерва;
		КонецЕсли;
		Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_Сумму_В_ВР_ОСН_Кт Тогда
			НоваяЗапись.СуммаВРКт = СтрокаЗП.СуммаРезерва;
		КонецЕсли;
		
		//ПР
		Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_Сумму_В_ПР_ОСН_Дт Тогда
			НоваяЗапись.СуммаПРДт = СтрокаЗП.СуммаРезерва;
		КонецЕсли;
		Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_Сумму_В_ПР_ОСН_Кт Тогда
			НоваяЗапись.СуммаПРКт = СтрокаЗП.СуммаРезерва;
		КонецЕсли;
		
		//НУ
		Если НЕ СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_Сумму_В_ВР_ОСН_Дт И НЕ СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_Сумму_В_ПР_ОСН_Дт Тогда
			Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_Сумму_В_НУ_ОСН_Дт Тогда
				Если НоваяЗапись.СчетДт.НалоговыйУчет Тогда
					НоваяЗапись.СуммаНУДт = СтрокаЗП.СуммаРезерва;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		Если НЕ СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_Сумму_В_ВР_ОСН_Кт И НЕ СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_Сумму_В_ПР_ОСН_Кт Тогда
			Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_Сумму_В_НУ_ОСН_Кт Тогда
				Если НоваяЗапись.СчетКт.НалоговыйУчет Тогда
					НоваяЗапись.СуммаНУКт = СтрокаЗП.СуммаРезерва;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		ОписаниеПроводок.Добавить("Начисления строка "+НомерстрокиЗП+ "Основная часть. Сумма " + СтрокаЗП.СуммаРезерва); 
		
		//*
		#Область ФСС  
		Если СтрокаЗП.СуммаРезерваСтраховыхВзносов  <> 0 Тогда
			НоваяЗапись = НаборЗаписей.Добавить(); 
			НоваяЗапись.Активность = Истина;
			НоваяЗапись.Организация = ЭтотОбъект.Организация;
			НоваяЗапись.Период = Конецмесяца(ЭтотОбъект.ПериодРегистрации);
			НоваяЗапись.Регистратор = ЭтотОбъект.Ссылка;
			НоваяЗапись.Сумма = СтрокаЗП.СуммаРезерваСтраховыхВзносов;
			
			
			НоваяЗапись.СчетАналитическогоУчетаДт  =  СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СчДТ_ФСС;
			НоваяЗапись.СчетДт = НоваяЗапись.СчетАналитическогоУчетаДт.Владелец;
			
			Если ЗначениеЗаполнено(СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СубконтоДТ1_ФСС) Тогда
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 1, СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СубконтоДТ1_ФСС); // статья доходов расходов
			КонецЕсли; 
			
			Если ЗначениеЗаполнено(СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СубконтоДТ2_ФСС) Тогда
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 2, СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СубконтоДТ2_ФСС); // статья доходов расходов
			КонецЕсли; 
			
			Если ЗначениеЗаполнено(СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СубконтоДТ2_ФСС) Тогда
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 3, СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СубконтоДТ2_ФСС); // статья доходов расходов
			КонецЕсли; 
			
			Для каждого СубконтоСчета Из НоваяЗапись.СчетАналитическогоУчетаДт.Владелец.ВидыСубконто Цикл
			
				Если НеПриоритетно  Тогда
					Если СубконтоСчета.ВидСубконто.Идентификатор = "ProcessCode" Тогда
						БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, СтрокаЗП.Подразделение.pcru_ProcessCode); // статья доходов расходов
						
						Попытка
							Если СтрокаЗП.ProcessCode <> "" Тогда
								БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, pcru_УМФО.ПолучитьПК(СтрокаЗП.ProcessCode)); // статья доходов расходов
							КонецЕсли;
						Исключение
						КонецПопытки;
						
						Попытка
							Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СубконтоДТ1_ОСН.Наименование = "01431 Резерв на отпуск НЕ НБ" Тогда
								БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, Справочники.БНФОСубконто.НайтиПоНаименованию("9905-Support processes")); // статья доходов расходов
							КонецЕсли;
						Исключение
						КонецПопытки;
						
						Попытка
							Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СубконтоДТ1_ОСН.Наименование = "01113 Ежемесячное базовое вознаграждение членам Совета Директоров НЕ НБ" Тогда
								БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, Справочники.БНФОСубконто.НайтиПоНаименованию("9906-Company management")); // статья доходов расходов
							КонецЕсли;
						Исключение
						КонецПопытки;
					КонецЕсли;  
				КонецЕсли; 
				
				Если СубконтоСчета.ВидСубконто.Идентификатор = "ТипЗатрат" Тогда
					
					Если СокрЛП(СтрокаЗП.pcru_ex_ТипЗатрат) = "1" Тогда
						
						БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, Справочники.БНФОСубконто.НайтиПоНаименованию("Тип затрат 1"));
						
					КонецЕсли; 
					
					
					Если СокрЛП(СтрокаЗП.pcru_ex_ТипЗатрат) = "2" Тогда
						
						БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, Справочники.БНФОСубконто.НайтиПоНаименованию("Тип затрат 2"));
						
					КонецЕсли; 
					
					Если СокрЛП(СтрокаЗП.pcru_ex_ТипЗатрат) = "" Тогда
						
						БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, Справочники.БНФОСубконто.ПустаяСсылка());
						
					КонецЕсли; 
					
					
				КонецЕсли;  
				
				
			КонецЦикла;
			
			НоваяЗапись.СчетАналитическогоУчетаКт  =  СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СчКТ_ФСС;
			НоваяЗапись.СчетКт = НоваяЗапись.СчетАналитическогоУчетаКт.Владелец;
			
			Если ЗначениеЗаполнено(СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СубконтоКТ1_ФСС) Тогда
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 1, СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СубконтоКТ1_ФСС); // статья доходов расходов
			КонецЕсли; 
			Если ЗначениеЗаполнено(СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СубконтоКТ2_ФСС) Тогда
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 2, СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СубконтоКТ2_ФСС); // process code			
			КонецЕсли; 
			Если ЗначениеЗаполнено(СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СубконтоКТ3_ФСС)Тогда
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 3, СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СубконтоКТ3_ФСС); // process code			
			КонецЕсли;			
			
			Подразделение = СтрокаЗП.Подразделение;
			
			Если НоваяЗапись.СчетДт.УчетПоПодразделениям Тогда
				НоваяЗапись.ПодразделениеДт  =  Подразделение;//СтрокаЗП.Подразделение;
			КонецЕсли; 
			
			Если НоваяЗапись.СчетКт.УчетПоПодразделениям Тогда
				НоваяЗапись.ПодразделениеКт  =  Подразделение;//СтрокаЗП.Подразделение;
			КонецЕсли; 				
			
			//ВР
			Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_Сумму_В_ВР_ФСС_Дт Тогда
				НоваяЗапись.СуммаВРДт = СтрокаЗП.СуммаРезерваСтраховыхВзносов;
			КонецЕсли;
			Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_Сумму_В_ВР_ФСС_Кт Тогда
				НоваяЗапись.СуммаВРКт = СтрокаЗП.СуммаРезерваСтраховыхВзносов;
			КонецЕсли;
			
			//ПР
			Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_Сумму_В_ПР_ФСС_Дт Тогда
				НоваяЗапись.СуммаПРДт = СтрокаЗП.СуммаРезерваСтраховыхВзносов;
			КонецЕсли;
			Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_Сумму_В_ПР_ФСС_Кт Тогда
				НоваяЗапись.СуммаПРКт = СтрокаЗП.СуммаРезерваСтраховыхВзносов;
			КонецЕсли;

			//НУ
			Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_Сумму_В_НУ_ФСС_Дт Тогда
				Если НоваяЗапись.СчетДт.НалоговыйУчет Тогда
					НоваяЗапись.СуммаНУДт = СтрокаЗП.СуммаРезерваСтраховыхВзносов;
				КонецЕсли;
			КонецЕсли;
			Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_Сумму_В_НУ_ФСС_Кт Тогда
				Если НоваяЗапись.СчетКт.НалоговыйУчет Тогда
					НоваяЗапись.СуммаНУКт = СтрокаЗП.СуммаРезерваСтраховыхВзносов;
				КонецЕсли;
			КонецЕсли;
			
			ОписаниеПроводок.Добавить("Начисления строка "+НомерстрокиЗП+ "ФСС. Сумма " + СтрокаЗП.СуммаРезерваСтраховыхВзносов); 
			
		КонецЕсли;
		#КонецОбласти		
		
		#Область СуммаРезерваФССНесчастныеСлучаи  
		Если СтрокаЗП.СуммаРезерваФССНесчастныеСлучаи  <> 0 Тогда
			НоваяЗапись = НаборЗаписей.Добавить(); 
			НоваяЗапись.Активность = Истина;
			НоваяЗапись.Организация = ЭтотОбъект.Организация;
			НоваяЗапись.Период = Конецмесяца(ЭтотОбъект.ПериодРегистрации);
			НоваяЗапись.Регистратор = ЭтотОбъект.Ссылка;
			НоваяЗапись.Сумма = СтрокаЗП.СуммаРезерваФССНесчастныеСлучаи;
			                                          
			НоваяЗапись.СчетАналитическогоУчетаДт  =  СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СчДТ_ФССНесчастныеСлучаи;
			НоваяЗапись.СчетДт = НоваяЗапись.СчетАналитическогоУчетаДт.Владелец;
			
			Если ЗначениеЗаполнено(СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СубконтоДТ1_ФССНесчастныеСлучаи) Тогда
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 1, СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СубконтоДТ1_ФССНесчастныеСлучаи); // статья доходов расходов
			КонецЕсли; 
			
			Если ЗначениеЗаполнено(СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СубконтоДТ2_ФССНесчастныеСлучаи) Тогда
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 2, СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СубконтоДТ2_ФССНесчастныеСлучаи); // статья доходов расходов
			КонецЕсли; 
			
			Если ЗначениеЗаполнено(СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СубконтоДТ2_ФССНесчастныеСлучаи) Тогда
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 3, СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СубконтоДТ2_ФССНесчастныеСлучаи); // статья доходов расходов
			КонецЕсли; 
						
			Для Каждого СубконтоСчета Из НоваяЗапись.СчетАналитическогоУчетаДт.Владелец.ВидыСубконто Цикл
			
				Если НеПриоритетно  Тогда
					Если СубконтоСчета.ВидСубконто.Идентификатор = "ProcessCode" Тогда
						БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, СтрокаЗП.Подразделение.pcru_ProcessCode); // статья доходов расходов
						
						Попытка
							Если СтрокаЗП.ProcessCode <> "" Тогда
								БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, pcru_УМФО.ПолучитьПК(СтрокаЗП.ProcessCode)); // статья доходов расходов
							КонецЕсли;
						Исключение
						КонецПопытки;
						
						Попытка
							Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СубконтоДТ1_ОСН.Наименование = "01431 Резерв на отпуск НЕ НБ" Тогда
								БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, Справочники.БНФОСубконто.НайтиПоНаименованию("9905-Support processes")); // статья доходов расходов
							КонецЕсли;
						Исключение
						КонецПопытки;
						
						Попытка
							Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СубконтоДТ1_ОСН.Наименование = "01113 Ежемесячное базовое вознаграждение членам Совета Директоров НЕ НБ" Тогда
								БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, Справочники.БНФОСубконто.НайтиПоНаименованию("9906-Company management")); // статья доходов расходов
							КонецЕсли;
						Исключение
						КонецПопытки;
					КонецЕсли;  
				КонецЕсли; 
				
				Если СубконтоСчета.ВидСубконто.Идентификатор = "ТипЗатрат" Тогда
					
					Если СокрЛП(СтрокаЗП.pcru_ex_ТипЗатрат) = "1" Тогда
						
						БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, Справочники.БНФОСубконто.НайтиПоНаименованию("Тип затрат 1"));
						
					КонецЕсли; 
					
					
					Если СокрЛП(СтрокаЗП.pcru_ex_ТипЗатрат) = "2" Тогда
						
						БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, Справочники.БНФОСубконто.НайтиПоНаименованию("Тип затрат 2"));
						
					КонецЕсли; 
					
					Если СокрЛП(СтрокаЗП.pcru_ex_ТипЗатрат) = "" Тогда
						
						БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, Справочники.БНФОСубконто.ПустаяСсылка());
						
					КонецЕсли;					
				КонецЕсли;		
			КонецЦикла;
			
			НоваяЗапись.СчетАналитическогоУчетаКт  =  СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СчКТ_ФССНесчастныеСлучаи;
			НоваяЗапись.СчетКт = НоваяЗапись.СчетАналитическогоУчетаКт.Владелец;
			
			Если ЗначениеЗаполнено(СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СубконтоКТ1_ФССНесчастныеСлучаи) Тогда
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 1, СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СубконтоКТ1_ФССНесчастныеСлучаи); // статья доходов расходов
			КонецЕсли; 
			Если ЗначениеЗаполнено(СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СубконтоКТ2_ФССНесчастныеСлучаи) Тогда
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 2, СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СубконтоКТ2_ФССНесчастныеСлучаи); // process code			
			КонецЕсли; 
			Если ЗначениеЗаполнено(СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СубконтоКТ3_ФССНесчастныеСлучаи)Тогда
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 3, СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СубконтоКТ3_ФССНесчастныеСлучаи); // process code			
			КонецЕсли; 
						
			Подразделение = СтрокаЗП.Подразделение;
			
			Если НоваяЗапись.СчетДт.УчетПоПодразделениям Тогда
				НоваяЗапись.ПодразделениеДт  =  Подразделение;//СтрокаЗП.Подразделение;
			КонецЕсли; 
			
			Если НоваяЗапись.СчетКт.УчетПоПодразделениям Тогда
				НоваяЗапись.ПодразделениеКт  =  Подразделение;//СтрокаЗП.Подразделение;
			КонецЕсли; 
			
			//ВР
			Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_Сумму_В_ВР_ФССНесчастныеСлучаи_Дт Тогда
				НоваяЗапись.СуммаВРДт = СтрокаЗП.СуммаРезерваФССНесчастныеСлучаи;
			КонецЕсли;
			Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_Сумму_В_ВР_ФССНесчастныеСлучаи_Кт Тогда
				НоваяЗапись.СуммаВРКт = СтрокаЗП.СуммаРезерваФССНесчастныеСлучаи;
			КонецЕсли;
			
			//ПР
			Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_Сумму_В_ПР_ФССНесчастныеСлучаи_Дт Тогда
				НоваяЗапись.СуммаПРДт = СтрокаЗП.СуммаРезерваФССНесчастныеСлучаи;
			КонецЕсли;
			Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_Сумму_В_ПР_ФССНесчастныеСлучаи_Кт Тогда
				НоваяЗапись.СуммаПРКт = СтрокаЗП.СуммаРезерваФССНесчастныеСлучаи;
			КонецЕсли;

			//НУ
			Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_Сумму_В_НУ_ФССНесчастныеСлучаи_Дт Тогда
				Если НоваяЗапись.СчетДт.НалоговыйУчет Тогда
					НоваяЗапись.СуммаНУДт = СтрокаЗП.СуммаРезерваФССНесчастныеСлучаи;
				КонецЕсли; 
			КонецЕсли;				
			Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_Сумму_В_НУ_ФССНесчастныеСлучаи_Кт Тогда
				Если НоваяЗапись.СчетКт.НалоговыйУчет Тогда
					НоваяЗапись.СуммаНУКт = СтрокаЗП.СуммаРезерваФССНесчастныеСлучаи;
				КонецЕсли;
			КонецЕсли;				
			
			ОписаниеПроводок.Добавить("Начисления строка "+НомерстрокиЗП+ "СуммаРезерваФССНесчастныеСлучаи. Сумма " + СтрокаЗП.СуммаРезерваФССНесчастныеСлучаи); 
			
		КонецЕсли;
		#КонецОбласти
					
	КонецЦикла;
	#КонецОбласти
		
	НаборЗаписей.Записать(Истина);
	
	
КонецПроцедуры

Процедура pcru_ex_ОбработкаПроведенияСтарая(Отказ, РежимПроведения)
	Если не ЭтотОбъект.ОбязательстваОтраженыВБухучете Тогда
		Возврат;
	КонецЕсли; 
	
	
	НаборЗаписей = РегистрыБухгалтерии.БНФОБанковский.СоздатьНаборЗаписей(); 
	НаборЗаписей.Отбор.Регистратор.Установить(ЭтотОбъект.Ссылка);
	НаборЗаписей.Прочитать();                                                                                         
	НаборЗаписей.Очистить();
	
	#Область ЗП 
	Для каждого СтрокаЗП Из ЭтотОбъект.ОценочныеОбязательства Цикл
		НоваяЗапись = НаборЗаписей.Добавить(); 
		НоваяЗапись.Активность = Истина;
		НоваяЗапись.Организация = ЭтотОбъект.Организация;
		НоваяЗапись.Период = Конецмесяца(ЭтотОбъект.ПериодРегистрации);
		НоваяЗапись.Регистратор = ЭтотОбъект.Ссылка;
		НоваяЗапись.Сумма = СтрокаЗП.СуммаРезерва	;
		// получаем структуру проводок		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	СпособыОтраженияЗарплатыВБухУчетеДополнительныеРеквизиты.Значение КАК Значение,
		|	СпособыОтраженияЗарплатыВБухУчетеДополнительныеРеквизиты.Свойство.Заголовок КАК СвойствоЗаголовок
		|ИЗ
		|	Справочник.СпособыОтраженияЗарплатыВБухУчете.ДополнительныеРеквизиты КАК СпособыОтраженияЗарплатыВБухУчетеДополнительныеРеквизиты
		|ГДЕ
		|	СпособыОтраженияЗарплатыВБухУчетеДополнительныеРеквизиты.Ссылка = &Ссылка";
		Запрос.УстановитьПараметр("Ссылка", СтрокаЗП.СпособОтраженияЗарплатыВБухучете );
		Выборка = Запрос.Выполнить().Выбрать();
		СтруктураПроводки = Новый Структура;
		Пока Выборка.Следующий() Цикл
			СтруктураПроводки.Вставить(СтрЗаменить(Выборка.СвойствоЗаголовок," ",""),Выборка.Значение);
		КонецЦикла;
		//*****
		СтруктураПроводкиФСС = Новый Структура;
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ДополнительныеСведения.Свойство.Заголовок КАК СвойствоЗаголовок,
		|	ДополнительныеСведения.Значение КАК Значение
		|ИЗ
		|	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
		|ГДЕ
		|	ДополнительныеСведения.Объект = &Объект";
		Запрос.УстановитьПараметр("Объект",СтрокаЗП.СпособОтраженияЗарплатыВБухучете );
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			СтруктураПроводкиФСС.Вставить(СтрЗаменить(Выборка.СвойствоЗаголовок," ",""),Выборка.Значение);
		КонецЦикла;
		
		// Дополняем структуру проводок		  
		//		СтруктураПроводки.Вставить("Контрагент",Справочники.Контрагенты.НайтиПоНаименованию(Строка(СтрокаЗП.ФизическоеЛицо)));
		//		СтруктураПроводки.Вставить("ФизическоеЛицо",СтрокаЗП.ФизическоеЛицо);
		//		СтруктураПроводки.Вставить("ВидНачисленияОплатыТрудаДляНУ",СтрокаЗП.ВидНачисленияОплатыТрудаДляНУ);
		//*********************************************************************** 
		Если ЗначениеЗаполнено(СтрокаЗП.ProcessCode)Тогда
			СтруктураПроводки.Вставить("ProcessCode",СтрокаЗП.ProcessCode);
			СтруктураПроводкиФСС.Вставить("ProcessCode",СтрокаЗП.ProcessCode);
		Иначе	
			//Запрос = Новый Запрос;
			//Запрос.Текст = "ВЫБРАТЬ
			//|	ПодразделенияОрганизацийДополнительныеРеквизиты.Значение КАК Значение
			//|ИЗ
			//|	Справочник.ПодразделенияОрганизаций.ДополнительныеРеквизиты КАК ПодразделенияОрганизацийДополнительныеРеквизиты
			//|ГДЕ
			//|	ПодразделенияОрганизацийДополнительныеРеквизиты.Ссылка = &Ссылка
			//|	И ПодразделенияОрганизацийДополнительныеРеквизиты.Свойство.Заголовок = ""ПК ЗУП""";
			//Запрос.УстановитьПараметр("Ссылка",СтрокаЗП.Подразделение);
			//Выборка = Запрос.Выполнить().Выбрать();
			//Пока Выборка.Следующий() Цикл
			//	СтруктураПроводки.Вставить("ProcessCode",Выборка.Значение);
			//	СтруктураПроводкиФСС.Вставить("ProcessCode",Выборка.Значение);
			//КонецЦикла;		
			СтруктураПроводки.Вставить("ProcessCode", СтрокаЗП.Подразделение.pcru_ProcessCode);
			СтруктураПроводкиФСС.Вставить("ProcessCode", СтрокаЗП.Подразделение.pcru_ProcessCode);
		КонецЕсли; 
		
		Значение = Неопределено;
		
		Если СтруктураПроводки.Свойство("ДтСч",Значение) Тогда
			СтруктураПроводки.Вставить("СчетАналитическогоУчетаДт",Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду(Значение));
		Иначе
			сообщить("Строка зарплаты"+Строка(СтрокаЗП.НомерСтроки)+"не обработана - для способа отражения" +СТрока(СтрокаЗП.СпособОтраженияЗарплатыВБухучете)+ "не задан счет ДТ!"); 
			Продолжить;
		КонецЕсли; 
		
		Если СтруктураПроводки.Свойство("КтСч",Значение) Тогда
			СтруктураПроводки.Вставить("СчетАналитическогоУчетаКт",Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду(Значение));
		Иначе
			сообщить("Строка зарплаты"+Строка(СтрокаЗП.НомерСтроки)+"не обработана - для способа отражения" +СТрока(СтрокаЗП.СпособОтраженияЗарплатыВБухучете)+ "не задан счет КТ!"); 
			Продолжить;
		КонецЕсли; 
		
		
		Если СтруктураПроводкиФСС.Свойство("ДтСч",Значение) Тогда
			СтруктураПроводкиФСС.Вставить("СчетАналитическогоУчетаДт",Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду(Значение));
		Иначе
			сообщить("Строка зарплаты"+Строка(СтрокаЗП.НомерСтроки)+"не обработана - для способа отражения" +СТрока(СтрокаЗП.СпособОтраженияЗарплатыВБухучете)+ "не задан счет ДТ фсс!"); 
			Продолжить;
		КонецЕсли; 
		
		Если СтруктураПроводкиФСС.Свойство("КтСч",Значение) Тогда
			СтруктураПроводкиФСС.Вставить("СчетАналитическогоУчетаКт",Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду(Значение));
		Иначе
			сообщить("Строка зарплаты"+Строка(СтрокаЗП.НомерСтроки)+"не обработана - для способа отражения" +СТрока(СтрокаЗП.СпособОтраженияЗарплатыВБухучете)+ "не задан счет КТ фсс!"); 
			Продолжить;
		КонецЕсли; 
		
		
		СтруктураПроводки = pcru_УМФО.ЗАполнитьСубконто_начислениеОценочныхОбязательств(СтруктураПроводки);
		СтруктураПроводкиФСС = pcru_УМФО.ЗАполнитьСубконто_начислениеОценочныхОбязательств(СтруктураПроводкиФСС);
		
		
		//Перезаполнить = Не ЗначениеЗаполнено(СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СубконтоДТ1_ОСН);
		////
		//Если Перезаполнить Тогда
		//	
		//	СпособОтраженияЗарплатыВБухучетеОбъект = СтрокаЗП.СпособОтраженияЗарплатыВБухучете.ПолучитьОбъект();
		//	
		//	СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СчДТ_ОСН  =  СтруктураПроводки.СчетАналитическогоУчетаДт;
		//	СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоДТ1_ОСН = СтруктураПроводки.СубконтоДТ1;
		//	
		//	СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СчКТ_ОСН  =  СтруктураПроводки.СчетАналитическогоУчетаКТ;
		//	СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоКТ1_ОСН = СтруктураПроводки.СубконтоКТ1;
		//	
		//КонецЕсли; 
		
		
		
		//
		
		НоваяЗапись.СчетАналитическогоУчетаДт  =  СтруктураПроводки.СчетАналитическогоУчетаДт;
		НоваяЗапись.СчетДт = НоваяЗапись.СчетАналитическогоУчетаДт.Владелец;
		БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 1, СтруктураПроводки.СубконтоДТ1); // статья доходов расходов
		
		
		
		Если СтруктураПроводки.Свойство("СубконтоДт2") Тогда
			БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 2, СтруктураПроводки.СубконтоДТ2); // process code			
			//Если Перезаполнить Тогда
			//	СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоДТ2_ОСН  = СтруктураПроводки.СубконтоДТ2;
			//КонецЕсли; 
		КонецЕсли; 
		Если СтруктураПроводки.Свойство("СубконтоДт3") Тогда
			
			//Если Перезаполнить Тогда
			//	СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоДТ3_ОСН  = СтруктураПроводки.СубконтоДТ3;
			//КонецЕсли; 
			
			БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 3, СтруктураПроводки.СубконтоДТ3); // process code			
		КонецЕсли; 
		
		
		НоваяЗапись.СчетАналитическогоУчетаКт  =  СтруктураПроводки.СчетАналитическогоУчетаКт;
		НоваяЗапись.СчетКт = НоваяЗапись.СчетАналитическогоУчетаКт.Владелец;
		БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 1, СтруктураПроводки.СубконтоКт1); // статья доходов расходов
		Если СтруктураПроводки.Свойство("СубконтоКт2") Тогда
			БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 2, СтруктураПроводки.СубконтоКт2); // process code			
		КонецЕсли; 
		Если СтруктураПроводки.Свойство("СубконтоКт3") Тогда
			БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 3, СтруктураПроводки.СубконтоКт3); // process code			
		КонецЕсли; 
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ПодразделенияОрганизаций.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
		|ГДЕ
		|	ПОДСТРОКА(ПодразделенияОрганизаций.Наименование, 1, 8) = ПОДСТРОКА(&Наименование, 1, 7) + "" """;
		Запрос.УстановитьПараметр("Наименование",СтрокаЗП.Подразделение.Наименование );
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Подразделение = Выборка.Ссылка;
		Иначе
			Подразделение = СтрокаЗП.Подразделение
		Конецесли;	
		
		Если НоваяЗапись.СчетДт.УчетПоПодразделениям Тогда
			НоваяЗапись.ПодразделениеДт  =  Подразделение;//СтрокаЗП.Подразделение;
		КонецЕсли; 
		
		Если НоваяЗапись.СчетКт.УчетПоПодразделениям Тогда
			НоваяЗапись.ПодразделениеКт  =  Подразделение;//СтрокаЗП.Подразделение;
		КонецЕсли; 
		
			Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_Сумму_В_ВР_ОСН_Дт Тогда
				НоваяЗапись.СуммаВРДт = СтрокаЗП.СуммаРезерва;
			КонецЕсли;
			Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_Сумму_В_ВР_ОСН_Кт Тогда
				НоваяЗапись.СуммаВРКт = СтрокаЗП.СуммаРезерва;
			КонецЕсли;
			       

			Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_Сумму_В_ПР_ОСН_Дт  Тогда
				НоваяЗапись.СуммаПРДт = СтрокаЗП.СуммаРезерва;
			КонецЕсли;
			Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_Сумму_В_ПР_ОСН_Кт  Тогда
				НоваяЗапись.СуммаПРКт = СтрокаЗП.СуммаРезерва;
			КонецЕсли;
			
			Если НЕ СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_Сумму_В_ВР_ОСН_Дт И НЕ СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_Сумму_В_ПР_ОСН_Дт Тогда
			//	Если Выборка.pcru_ex_Сумму_В_НУ_ОСН_Дт Тогда
					Если НоваяЗапись.СчетДт.НалоговыйУчет Тогда
						НоваяЗапись.СуммаНУДт = СтрокаЗП.СуммаРезерва;
					КонецЕсли; 
			//	КонецЕсли;
			КонецЕсли; 
			Если НЕ СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_Сумму_В_ВР_ОСН_Кт И НЕ СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_Сумму_В_ПР_ОСН_Кт Тогда
			//	Если Выборка.pcru_ex_Сумму_В_НУ_ОСН_Кт Тогда
					Если НоваяЗапись.СчетКт.НалоговыйУчет Тогда
						НоваяЗапись.СуммаНУКт = СтрокаЗП.СуммаРезерва;
					КонецЕсли;
			//	КонецЕсли;
			КонецЕсли; 

		//
		//Если НоваяЗапись.СчетДт.НалоговыйУчет Тогда
		//	НоваяЗапись.СуммаНУДт = СтрокаЗП.СуммаРезерва	;
		//КонецЕсли; 
		//
		//Если НоваяЗапись.СчетКт.НалоговыйУчет Тогда
		//	НоваяЗапись.СуммаНУКт = СтрокаЗП.СуммаРезерва	;
		//КонецЕсли; 
		//******************************************************************************************************
			
		//
		Если СтрокаЗП.СуммаРезерваСтраховыхВзносов  <> 0 Тогда
			НоваяЗапись = НаборЗаписей.Добавить(); 
			НоваяЗапись.Активность = Истина;
			НоваяЗапись.Организация = ЭтотОбъект.Организация;
			НоваяЗапись.Период = Конецмесяца(ЭтотОбъект.ПериодРегистрации);
			НоваяЗапись.Регистратор = ЭтотОбъект.Ссылка;
			НоваяЗапись.Сумма = СтрокаЗП.СуммаРезерваСтраховыхВзносов;
			
			//Если Перезаполнить Тогда
			//	СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СчДТ_ФСС  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("7180281000551030000101115");
			//	СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоДТ1_ФСС = СтруктураПроводкиФСС.СубконтоДТ1;
			//	
			//	СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СчКТ_ФСС  =  СтруктураПроводкиФСС.СчетАналитическогоУчетаКт;
			//	СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоКТ1_ФСС = СтруктураПроводкиФСС.СубконтоКт1;
			//	
			//	
			//	Если СтруктураПроводкиФСС.Свойство("СубконтоДт2") Тогда
			//		СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоДТ2_ФСС = СтруктураПроводкиФСС.СубконтоДТ2; // process code			
			//	КонецЕсли; 
			//	Если СтруктураПроводкиФСС.Свойство("СубконтоДт3") Тогда
			//		СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоДТ3_ФСС = СтруктураПроводкиФСС.СубконтоДТ3; // process code			
			//	КонецЕсли;
			//	
			//	
			//	Если СтруктураПроводкиФСС.Свойство("СубконтоКт2") Тогда
			//		СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоКТ1_ФСС = СтруктураПроводкиФСС.СубконтоКт2; // process code			
			//	КонецЕсли; 
			//	Если СтруктураПроводкиФСС.Свойство("СубконтоКт3") Тогда
			//		СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоКТ3_ФСС = СтруктураПроводкиФСС.СубконтоКт3; // process code			
			//	КонецЕсли; 
			//	
			//КонецЕсли; 
			
			
			
			НоваяЗапись.СчетАналитическогоУчетаДт  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("7180281000551030000101115");
			НоваяЗапись.СчетДт = НоваяЗапись.СчетАналитическогоУчетаДт.Владелец;
			
			Значение = Неопределено;
			НоваяЗапись.СчетАналитическогоУчетаДт  =  СтруктураПроводкиФСС.СчетАналитическогоУчетаДт;
			НоваяЗапись.СчетДт = НоваяЗапись.СчетАналитическогоУчетаДт.Владелец;
			БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 1, СтруктураПроводкиФСС.СубконтоДТ1); // статья доходов расходов
			Если СтруктураПроводкиФСС.Свойство("СубконтоДт2") Тогда
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 2, СтруктураПроводкиФСС.СубконтоДТ2); // process code			
			КонецЕсли; 
			Если СтруктураПроводкиФСС.Свойство("СубконтоДт3") Тогда
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 3, СтруктураПроводкиФСС.СубконтоДТ3); // process code			
			КонецЕсли; 
			
			
			НоваяЗапись.СчетАналитическогоУчетаКт  =  СтруктураПроводкиФСС.СчетАналитическогоУчетаКт;
			НоваяЗапись.СчетКт = НоваяЗапись.СчетАналитическогоУчетаКт.Владелец;
			БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 1, СтруктураПроводкиФСС.СубконтоКт1); // статья доходов расходов
			Если СтруктураПроводкиФСС.Свойство("СубконтоКт2") Тогда
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 2, СтруктураПроводкиФСС.СубконтоКт2); // process code			
			КонецЕсли; 
			Если СтруктураПроводкиФСС.Свойство("СубконтоКт3") Тогда
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 3, СтруктураПроводкиФСС.СубконтоКт3); // process code			
			КонецЕсли; 
			
			
			Если НоваяЗапись.СчетДт.УчетПоПодразделениям Тогда
				НоваяЗапись.ПодразделениеДт  =  Подразделение;//СтрокаЗП.Подразделение;
			КонецЕсли; 
			
			Если НоваяЗапись.СчетКт.УчетПоПодразделениям Тогда
				НоваяЗапись.ПодразделениеКт  =  Подразделение;//СтрокаЗП.Подразделение;
			КонецЕсли; 
			
			Если НоваяЗапись.СчетДт.НалоговыйУчет Тогда
				НоваяЗапись.СуммаНУДт = СтрокаЗП.СуммаРезерваСтраховыхВзносов;
			КонецЕсли; 
			
			Если НоваяЗапись.СчетКт.НалоговыйУчет Тогда
				НоваяЗапись.СуммаНУКт = СтрокаЗП.СуммаРезерваСтраховыхВзносов;
			КонецЕсли; 
		КонецЕсли;
		////************
		Если  СтрокаЗП.СуммаРезерваСуммаРезерваФССНесчастныеСлучаи <> 0 Тогда
			НоваяЗапись = НаборЗаписей.Добавить(); 
			НоваяЗапись.Активность = Истина;
			НоваяЗапись.Организация = ЭтотОбъект.Организация;
			НоваяЗапись.Период = Конецмесяца(ЭтотОбъект.ПериодРегистрации);
			НоваяЗапись.Регистратор = ЭтотОбъект.Ссылка;
			НоваяЗапись.Сумма = СтрокаЗП.СуммаРезерваСуммаРезерваФССНесчастныеСлучаи;
			
			
			//Если Перезаполнить Тогда
			//	СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СчДТ_ФССНесчастныеСлучаи  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("7180281000551030000101115");
			//	СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоДТ1_ФССНесчастныеСлучаи = СтруктураПроводкиФСС.СубконтоДТ1;
			//	
			//	СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СчКТ_ФССНесчастныеСлучаи  =  СтруктураПроводкиФСС.СчетАналитическогоУчетаКт;
			//	СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоКТ1_ФССНесчастныеСлучаи = СтруктураПроводкиФСС.СубконтоКт1;
			//	
			//	
			//	Если СтруктураПроводкиФСС.Свойство("СубконтоДт2") Тогда
			//		СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоДТ2_ФССНесчастныеСлучаи = СтруктураПроводкиФСС.СубконтоДТ2; // process code			
			//	КонецЕсли; 
			//	Если СтруктураПроводкиФСС.Свойство("СубконтоДт3") Тогда
			//		СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоДТ3_ФССНесчастныеСлучаи = СтруктураПроводкиФСС.СубконтоДТ3; // process code			
			//	КонецЕсли;
			//	
			//	
			//	Если СтруктураПроводкиФСС.Свойство("СубконтоКт2") Тогда
			//		СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоКТ1_ФССНесчастныеСлучаи = СтруктураПроводкиФСС.СубконтоКт2; // process code			
			//	КонецЕсли; 
			//	Если СтруктураПроводкиФСС.Свойство("СубконтоКт3") Тогда
			//		СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоКТ3_ФССНесчастныеСлучаи = СтруктураПроводкиФСС.СубконтоКт3; // process code			
			//	КонецЕсли; 
			//	
			//КонецЕсли; 
			//
			
			
			
			НоваяЗапись.СчетАналитическогоУчетаДт  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("7180281000551030000101115");
			НоваяЗапись.СчетДт = НоваяЗапись.СчетАналитическогоУчетаДт.Владелец;
			
			Значение = Неопределено;
			НоваяЗапись.СчетАналитическогоУчетаДт  =  СтруктураПроводкиФСС.СчетАналитическогоУчетаДт;
			НоваяЗапись.СчетДт = НоваяЗапись.СчетАналитическогоУчетаДт.Владелец;
			БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 1, СтруктураПроводкиФСС.СубконтоДТ1); // статья доходов расходов
			Если СтруктураПроводкиФСС.Свойство("СубконтоДт2") Тогда
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 2, СтруктураПроводкиФСС.СубконтоДТ2); // process code			
			КонецЕсли; 
			Если СтруктураПроводкиФСС.Свойство("СубконтоДт3") Тогда
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 3, СтруктураПроводкиФСС.СубконтоДТ2); // process code			
			КонецЕсли; 
			
			
			НоваяЗапись.СчетАналитическогоУчетаКт  =  СтруктураПроводкиФСС.СчетАналитическогоУчетаКт;
			НоваяЗапись.СчетКт = НоваяЗапись.СчетАналитическогоУчетаКт.Владелец;
			БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 1, СтруктураПроводкиФСС.СубконтоКт1); // статья доходов расходов
			Если СтруктураПроводкиФСС.Свойство("СубконтоКт2") Тогда
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 2, СтруктураПроводкиФСС.СубконтоКт1); // process code			
			КонецЕсли; 
			Если СтруктураПроводкиФСС.Свойство("СубконтоКт3") Тогда
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 3, СтруктураПроводкиФСС.СубконтоКт1); // process code			
			КонецЕсли; 
			
			
			Если НоваяЗапись.СчетДт.УчетПоПодразделениям Тогда
				НоваяЗапись.ПодразделениеДт  =  Подразделение;//СтрокаЗП.Подразделение;
			КонецЕсли; 
			
			Если НоваяЗапись.СчетКт.УчетПоПодразделениям Тогда
				НоваяЗапись.ПодразделениеКт  =  Подразделение;//СтрокаЗП.Подразделение;
			КонецЕсли; 
			
			Если НоваяЗапись.СчетДт.НалоговыйУчет Тогда
				НоваяЗапись.СуммаНУДт = СтрокаЗП.СуммаРезерваСуммаРезерваФССНесчастныеСлучаи;
			КонецЕсли; 
			
			Если НоваяЗапись.СчетКт.НалоговыйУчет Тогда
				НоваяЗапись.СуммаНУКт = СтрокаЗП.СуммаРезерваСуммаРезерваФССНесчастныеСлучаи;
			КонецЕсли; 
			
		КонецЕсли;
		
		
		//Если Перезаполнить Тогда
		//	СпособОтраженияЗарплатыВБухучетеОбъект.Записать();
		//КонецЕсли; 
		
		
		//Если НоваяЗапись.СчетАналитическогоУчетаДт.Код = "7180281001551130000001431" или НоваяЗапись.СчетАналитическогоУчетаДт.Код = "7180281001551010000101113" Тогда
		//	НоваяЗапись.СуммаПРДт = СтрокаИзДокумента.Сумма;
		//Иначе
		//КонецЕсли;		
		//
		
		
	КонецЦикла;
	#КонецОбласти
	
	
	
	НаборЗаписей.Записать(Истина);
	
	
КонецПроцедуры



			
