
&После("БНФОПодготовитьПроведениеПоДаннымИБСформироватьДвиженияПоРегистрам")
Процедура pcru_ex_БНФОПодготовитьПроведениеПоДаннымИБСформироватьДвиженияПоРегистрам(РежимПроведения, Отказ)
	Запрос = Новый Запрос;
	
	//~ВыходИзДвойногоЦикла: 
	Индекс = 0;	
	Для каждого Движение Из Движения.БНФОБанковский Цикл
		Если Не ЗначениеЗаполнено(Движение.СчетДт) Тогда
			Движения.БНФОБанковский[Индекс+1].СчетКт = Движения.БНФОБанковский[Индекс].СчетКт;
			Движения.БНФОБанковский[Индекс+1].СчетАналитическогоУчетаКт = Движения.БНФОБанковский[Индекс].СчетАналитическогоУчетаКт;
			Движения.БНФОБанковский[Индекс+1].НеКорректироватьСтоимостьАвтоматически = Движения.БНФОБанковский[Индекс].НеКорректироватьСтоимостьАвтоматически;
			//	ЗаполнитьЗначенияСвойств(Движения.БНФОБанковский[Индекс+1].СубконтоКТ ,Движения.БНФОБанковский[Индекс].СубконтоКТ);
			Движения.БНФОБанковский.Удалить(Движение);
		КонецЕсли; 
		Если Движение.СчетДт.код = "60906" Тогда
			БНФОБухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, 2, Справочники.Склады.НайтиПоКоду("000000001")); 
			Запрос.Текст = "ВЫБРАТЬ
			|	ПоступлениеТоваровУслугУслуги.Ссылка КАК Ссылка
			|ИЗ
			|	 Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслугУслуги
			|ГДЕ
			|	ПоступлениеТоваровУслугУслуги.СчетЗатрат = &СчетЗатрат";
			Запрос.УстановитьПараметр("СчетЗатрат",Движение.СчетАналитическогоУчетаДт );
			Выборка = Запрос.Выполнить().Выбрать();
			Пока Выборка.Следующий() Цикл
				БНФОБухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, 3, Выборка.Ссылка); 			
			КонецЦикла;
			//	Движения.БНФОБанковский[Индекс+1].СчетКт = Движения.БНФОБанковский[Индекс].СчетКт;
			//	Движения.БНФОБанковский[Индекс+1].СчетАналитическогоУчетаКт = Движения.БНФОБанковский[Индекс].СчетАналитическогоУчетаКт;
			//	Движения.БНФОБанковский[Индекс+1].НеКорректироватьСтоимостьАвтоматически = Движения.БНФОБанковский[Индекс].НеКорректироватьСтоимостьАвтоматически;
			//
			//	ЗаполнитьЗначенияСвойств(Движения.БНФОБанковский[Индекс+1].СубконтоКТ ,Движения.БНФОБанковский[Индекс].СубконтоКТ);
			//	Движения.БНФОБанковский.Удалить(Движение);
		КонецЕсли; 
		
		Если Движение.СчетКт.код = "60906" Тогда
			БНФОБухгалтерскийУчет.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, 2, Справочники.Склады.НайтиПоКоду("000000001")); 
			Запрос.Текст = "ВЫБРАТЬ
			|	ПоступлениеТоваровУслугУслуги.Ссылка КАК Ссылка
			|ИЗ
			|	 Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслугУслуги
			|ГДЕ
			|	ПоступлениеТоваровУслугУслуги.СчетЗатрат = &СчетЗатрат";
			Запрос.УстановитьПараметр("СчетЗатрат",Движение.СчетАналитическогоУчетаКт );
			Выборка = Запрос.Выполнить().Выбрать();
			Пока Выборка.Следующий() Цикл
				БНФОБухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, 3, Выборка.Ссылка); 			
			КонецЦикла;
		КонецЕсли; 		
		
		Если Движение.СчетДт.код = "60415" Тогда
			БНФОБухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, 2, Справочники.Склады.НайтиПоКоду("000000001")); 
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	ПоступлениеТоваровУслугТовары.Ссылка КАК Ссылка
			|ИЗ
			|	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
			|ГДЕ
			|	ПоступлениеТоваровУслугТовары.СчетУчета = &СчетУчета";
			Запрос.УстановитьПараметр("СчетУчета",Движение.СчетАналитическогоУчетаДт);
			Выборка = Запрос.Выполнить().Выбрать();
			Пока Выборка.Следующий() Цикл
				БНФОБухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, 3, Выборка.Ссылка); 			
			КонецЦикла;
		КонецЕсли; 
		
		Если Движение.СчетКт.код = "60415" Тогда
			БНФОБухгалтерскийУчет.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, 2, Справочники.Склады.НайтиПоКоду("000000001")); 
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	ПоступлениеТоваровУслугТовары.Ссылка КАК Ссылка
			|ИЗ
			|	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
			|ГДЕ
			|	ПоступлениеТоваровУслугТовары.СчетУчета = &СчетУчета";
			Запрос.УстановитьПараметр("СчетУчета",Движение.СчетАналитическогоУчетаКт);
			Выборка = Запрос.Выполнить().Выбрать();
			Пока Выборка.Следующий() Цикл
				БНФОБухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, 3, Выборка.Ссылка); 			
			КонецЦикла;
		КонецЕсли; 		
		
		//
		Если Движение.СчетДт.код = "60415" и Движение.СчетКт.код = "60310" Тогда
			
			Если	Движения.БНФОБанковский[Индекс+1].СчетДт.код <>	"60401"	и Движения.БНФОБанковский[Индекс+1].СчетКт.код <> "60415" Тогда
				//
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ
				|	БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета.СчетУчета КАК СчетУчета,
				|	БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета.СчетАналитическогоУчета КАК СчетАналитическогоУчета,
				|	БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик.ЗначениеАналитики КАК ЗначениеАналитики
				|ИЗ
				|	Документ.БНФООткрытиеСчетовАналитическогоУчета.СчетаУчета КАК БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета
				|		ПОЛНОЕ СОЕДИНЕНИЕ Документ.БНФООткрытиеСчетовАналитическогоУчета.СчетаУчета КАК БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета1
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.БНФООткрытиеСчетовАналитическогоУчета.ВидыАналитик КАК БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик
				|			ПО (БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета1.Ссылка = БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик.Ссылка)
				|				И (БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик.КлючСтроки = БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета1.КлючСтроки)
				|		ПО (БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета.Ссылка = БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета1.Ссылка)
				|ГДЕ
				|	БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета1.СчетАналитическогоУчета = &СчетАналитическогоУчета
				|	И БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета.СчетУчета.Код = ""60401""
				|	И БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик.НомерСтроки = 1";
				Запрос.УстановитьПараметр("СчетАналитическогоУчета", Движение.СчетАналитическогоУчетаДт );
				Выборка = Запрос.Выполнить().Выбрать();
				Пока Выборка.Следующий() Цикл
					НоваяЗапись = Движения.БНФОБанковский.Вставить(Индекс+1);
					НоваяЗапись.Активность = Истина;
					НоваяЗапись.Организация = Движение.Организация;
					НоваяЗапись.Период = Движение.Период;
					НоваяЗапись.Регистратор = Движение.Регистратор;
					НоваяЗапись.Сумма = Движение.Сумма;
					НоваяЗапись.Содержание = Движение.Содержание;
					//
					НоваяЗапись.СчетАналитическогоУчетаКт  =  Движение.СчетАналитическогоУчетаДт;
					НоваяЗапись.СчетКт = Движение.СчетДт;
					
					//Движение.СубконтоДт.ОбъектыСтроительства
					//Движение.СубконтоДт.Партии
					//Движение.СубконтоДт.Склады
					ЗаполнитьЗначенияСвойств(НоваяЗапись.СубконтоКт,Движение.СубконтоДт,"ОбъектыСтроительства,Партии,Склады");
					
					////
					///
					НоваяЗапись.СчетАналитическогоУчетаДт  =  Выборка.СчетАналитическогоУчета;
					НоваяЗапись.СчетДт = Выборка.СчетУчета;
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 1, Выборка.ЗначениеАналитики); 			
					////
					///
					///
					Если НоваяЗапись.СчетДт.УчетПоПодразделениям Тогда
						НоваяЗапись.ПодразделениеДт  =  Движение.ПодразделениеДт;//СтрокаЗП.Подразделение;
					КонецЕсли; 
					
					Если НоваяЗапись.СчетКт.УчетПоПодразделениям Тогда
						НоваяЗапись.ПодразделениеКт  =   Движение.ПодразделениеДт;//СтрокаЗП.Подразделение;
					КонецЕсли; 
					
					Если НоваяЗапись.СчетДт.НалоговыйУчет Тогда
						НоваяЗапись.СуммаНУДт = Движение.Сумма;
					КонецЕсли; 
					
					Если НоваяЗапись.СчетКт.НалоговыйУчет Тогда
						НоваяЗапись.СуммаНУКт = Движение.Сумма;
					КонецЕсли;
				КонецЦикла;
				//				Перейти ~ВыходИзДвойногоЦикла;
			КонецЕсли;
		КонецЕсли;

		Если Движение.СчетДт.код = "60401" и Движение.СчетКт.код = "60415" Тогда
			ОсновноеСредство = Движение.СубконтоДт.ОсновныеСредства;
			//Проверка остатка по НУ для ОС
			СписокСпособОтраженияБУ = ПолучитьАналитикуСпособаОтражениярасходовПоАмортизацииБУ(Движение.Период, ОсновноеСредство);
			СписокСпособОтраженияНУ = ПолучитьАналитикуСпособаОтражениярасходовПоАмортизацииНУ(Движение.Период, ОсновноеСредство);
			Если СписокСпособОтраженияБУ.Количество() <> 0 И СписокСпособОтраженияНУ.Количество() <> 0 Тогда
				СпособОтраженияБУ = СписокСпособОтраженияБУ[0];
				СпособОтраженияНУ = СписокСпособОтраженияНУ[0];
			
				НоваяЗапись = Движения.БНФОБанковский.Вставить(Индекс+1);
				НоваяЗапись.Активность = Истина;
				НоваяЗапись.Организация = Движение.Организация;
				НоваяЗапись.Период = Движение.Период;
				НоваяЗапись.Регистратор = Движение.Регистратор;
				НоваяЗапись.Сумма = 0;
				НоваяЗапись.Содержание = Движение.Содержание;

				НоваяЗапись.СчетДт = ПланыСчетов.БНФОБанковский.НайтиПоКоду("71802");
				НоваяЗапись.СчетАналитическогоУчетаДт  =  СпособОтраженияНУ.СчетЗатрат;
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 1, СпособОтраженияНУ.Субконто1);
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 2, СпособОтраженияБУ.Субконто2);

				НоваяЗапись.СчетКт = Движение.СчетДт;
				НоваяЗапись.СчетАналитическогоУчетаКт  =  Движение.СчетАналитическогоУчетаДт;
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 1, ОсновноеСредство);
				
				Если НоваяЗапись.СчетДт.УчетПоПодразделениям Тогда
					НоваяЗапись.ПодразделениеДт = Движение.ПодразделениеДт;//СтрокаЗП.Подразделение;
				КонецЕсли; 
				
				Если НоваяЗапись.СчетКт.УчетПоПодразделениям Тогда
					НоваяЗапись.ПодразделениеКт = Движение.ПодразделениеКт;//СтрокаЗП.Подразделение;
				КонецЕсли; 
				
				Если НоваяЗапись.СчетДт.НалоговыйУчет Тогда
					НоваяЗапись.СуммаНУДт = Движение.Сумма;
				КонецЕсли; 				
				Если НоваяЗапись.СчетКт.НалоговыйУчет Тогда
					НоваяЗапись.СуммаНУКт = Движение.Сумма;
				КонецЕсли;
				
				НоваяЗапись.СуммаВРДт = - Движение.Сумма;
				НоваяЗапись.СуммаВРКт = - Движение.Сумма;
			КонецЕсли;
		КонецЕсли;
		
		Индекс=Индекс+1;
	КонецЦикла; 	
		
КонецПроцедуры

Функция ПолучитьАналитикуСпособаОтражениярасходовПоАмортизацииБУ(Период, ОсновноеСредство)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("ОсновноеСредство", ОсновноеСредство);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СпособыОтраженияРасходовПоАмортизацииБНФОСпособы.СтатьяЗатрат КАК СтатьяЗатрат,
	|	СпособыОтраженияРасходовПоАмортизацииБНФОСпособы.СчетЗатрат КАК СчетЗатрат,
	|	СпособыОтраженияРасходовПоАмортизацииБНФОСпособы.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	СпособыОтраженияРасходовПоАмортизацииБНФОСпособы.Субконто1 КАК Субконто1,
	|	СпособыОтраженияРасходовПоАмортизацииБНФОСпособы.Субконто2 КАК Субконто2,
	|	СпособыОтраженияРасходовПоАмортизацииБНФОСпособы.Субконто3 КАК Субконто3
	|ИЗ
	|	РегистрСведений.СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет КАК СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпособыОтраженияРасходовПоАмортизации.БНФОСпособы КАК СпособыОтраженияРасходовПоАмортизацииБНФОСпособы
	|		ПО (СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет.СпособыОтраженияРасходовПоАмортизации = СпособыОтраженияРасходовПоАмортизацииБНФОСпособы.Ссылка)
	|ГДЕ
	|	СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет.ОсновноеСредство = &ОсновноеСредство
	|	И СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет.Активность
	|	И СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет.Период <= &Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет.Период УБЫВ";
	
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

Функция ПолучитьАналитикуСпособаОтражениярасходовПоАмортизацииНУ(Период, ОсновноеСредство)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("ОсновноеСредство", ОсновноеСредство);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПервоначальныеСведенияОСНалоговыйУчет.СпособОтраженияРасходовПриВключенииВСтоимость КАК СпособОтраженияРасходовПриВключенииВСтоимость,
	|	СпособыОтраженияРасходовПоАмортизацииБНФОСпособы.СтатьяЗатрат КАК СтатьяЗатрат,
	|	СпособыОтраженияРасходовПоАмортизацииБНФОСпособы.СчетЗатрат КАК СчетЗатрат,
	|	СпособыОтраженияРасходовПоАмортизацииБНФОСпособы.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	СпособыОтраженияРасходовПоАмортизацииБНФОСпособы.Субконто1 КАК Субконто1,
	|	СпособыОтраженияРасходовПоАмортизацииБНФОСпособы.Субконто2 КАК Субконто2,
	|	СпособыОтраженияРасходовПоАмортизацииБНФОСпособы.Субконто3 КАК Субконто3
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСНалоговыйУчет КАК ПервоначальныеСведенияОСНалоговыйУчет
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпособыОтраженияРасходовПоАмортизации.БНФОСпособы КАК СпособыОтраженияРасходовПоАмортизацииБНФОСпособы
	|		ПО (ПервоначальныеСведенияОСНалоговыйУчет.СпособОтраженияРасходовПриВключенииВСтоимость = СпособыОтраженияРасходовПоАмортизацииБНФОСпособы.Ссылка)
	|ГДЕ
	|	ПервоначальныеСведенияОСНалоговыйУчет.ОсновноеСредство = &ОсновноеСредство
	|	И ПервоначальныеСведенияОСНалоговыйУчет.СпособОтраженияРасходовПриВключенииВСтоимость <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияРасходовПоАмортизации.ПустаяСсылка)
	|	И ПервоначальныеСведенияОСНалоговыйУчет.Активность
	|	И ПервоначальныеСведенияОСНалоговыйУчет.Период <= &Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПервоначальныеСведенияОСНалоговыйУчет.Период УБЫВ";
	
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

Функция ПолучитьПараметрыАналитик(Счет)
	
	// заполним аналитики из регистра сведений
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИспользуемыеСчетаАналитическогоУчета.СтруктурнаяЕдиница,
	|	ИспользуемыеСчетаАналитическогоУчета.СчетАналитическогоУчета,
	|	ИспользуемыеСчетаАналитическогоУчета.ШаблонОткрытия,
	|	ИспользуемыеСчетаАналитическогоУчета.ВидСчетаУчета,
	|	ИспользуемыеСчетаАналитическогоУчета.Документ
	|ПОМЕСТИТЬ ВТ_ИспользуемыеСчетаАналитическогоУчета
	|ИЗ
	|	РегистрСведений.БНФОСоответствиеСчетовАналитическогоУчетаИАналитики КАК ИспользуемыеСчетаАналитическогоУчета
	|ГДЕ
	|	ИспользуемыеСчетаАналитическогоУчета.СчетАналитическогоУчета = &СчетАналитическогоУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ИспользуемыеСчетаАналитическогоУчета.СчетАналитическогоУчета,
	|	ВТ_ИспользуемыеСчетаАналитическогоУчета.ШаблонОткрытия,
	|	ВТ_ИспользуемыеСчетаАналитическогоУчета.ВидСчетаУчета,
	|	ВТ_ИспользуемыеСчетаАналитическогоУчета.Документ
	|ИЗ
	|	ВТ_ИспользуемыеСчетаАналитическогоУчета КАК ВТ_ИспользуемыеСчетаАналитическогоУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИспользуемыеСчетаАналитическогоУчета.СчетАналитическогоУчета,
	|	ВидыАналитикОткрытия.КлючеваяАналитика КАК КлючеваяАналитика,
	|	ВидыАналитикОткрытия.ВидАналитики КАК ВидАналитики,
	|	АналитикаУчетаСчетов.Значение КАК Аналитика
	|ИЗ
	|	ВТ_ИспользуемыеСчетаАналитическогоУчета КАК ИспользуемыеСчетаАналитическогоУчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.БНФОШаблоныОткрытияСчетовАналитическогоУчета.ВидыАналитикОткрытия КАК ВидыАналитикОткрытия
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.БНФООсновнаяАналитикаСчетовАналитическогоУчета КАК АналитикаУчетаСчетов
	|			ПО ВидыАналитикОткрытия.ВидАналитики = АналитикаУчетаСчетов.ВидАналитики
	|		ПО ИспользуемыеСчетаАналитическогоУчета.ШаблонОткрытия = ВидыАналитикОткрытия.Ссылка
	|			И (ИспользуемыеСчетаАналитическогоУчета.СчетАналитическогоУчета = АналитикаУчетаСчетов.СчетАналитическогоУчета)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВидыАналитикОткрытия.КлючеваяАналитика УБЫВ,
	|	ВидыАналитикОткрытия.НомерСтроки";
	
	Запрос.УстановитьПараметр("СчетАналитическогоУчета", Счет);
	
	Результат = Запрос.ВыполнитьПакет();
	
	Возврат Результат;
	
КонецФункции


&Перед("ПриЗаписи")
Процедура pcru_ex_ПриЗаписи(Отказ)
	Для каждого СтрРаспр Из ЭтотОбъект.РаспределяемыйНДС Цикл
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ПоступлениеТоваровУслугУслуги.БНФОСубконто1 КАК БНФОСубконто1,
		|	ПоступлениеТоваровУслугУслуги.БНФОСубконто2 КАК БНФОСубконто2
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслугУслуги
		|ГДЕ
		|	ПоступлениеТоваровУслугУслуги.Ссылка = &Ссылка
		|	И ПоступлениеТоваровУслугУслуги.Сумма = &Сумма
		|	И ПоступлениеТоваровУслугУслуги.ПодразделениеЗатрат = &ПодразделениеЗатрат";
		Запрос.УстановитьПараметр("Ссылка",СтрРаспр.СчетФактура );
		Запрос.УстановитьПараметр("Сумма",СтрРаспр.СуммаБезНДС );
		Запрос.УстановитьПараметр("ПодразделениеЗатрат",СтрРаспр.Подразделение );
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			СтрРаспр.БНФОСубконто1	 =  Выборка.БНФОСубконто1;
			СтрРаспр.БНФОСубконто2  =   Выборка.БНФОСубконто2;
		КонецЦикла;
		//Резапр = ПолучитьПараметрыАналитик(СтрРаспр.СчетЗатрат);
		//РезультатДополнительнаяАналитика = Резапр[2];
		//Если НЕ РезультатДополнительнаяАналитика.Пустой() Тогда
		//	ВыборкаДополнительнаяАналитика = РезультатДополнительнаяАналитика.Выбрать(); 	
		//    ВыборкаДополнительнаяАналитика.Следующий();
		//	СтрРаспр.БНФОСубконто1	 = ВыборкаДополнительнаяАналитика.Аналитика;
		//КонецЕсли;
	КонецЦикла; 
	
КонецПроцедуры
