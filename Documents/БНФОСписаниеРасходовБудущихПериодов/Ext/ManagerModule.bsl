
&Вместо("ЗаполнитьСоставНаСервере")
Процедура pcru_ex_ЗаполнитьСоставНаСервере(Объект, СписокРБП, ДобавлятьСтрокуПриНулевойСумме)

	Отказ = Ложь;	

	Запрос = Новый Запрос;
	НачалоПериодаРегистрации = ?(Объект.ПериодичностьСписания = ПредопределенноеЗначение("Перечисление.БНФОПериодичностьСписанияРБП.Ежеквартально"), НачалоКвартала(Объект.ПериодРегистрации), НачалоМесяца(Объект.ПериодРегистрации));
	ОкончаниеПериодаРегистрации = ?(Объект.ПериодичностьСписания = ПредопределенноеЗначение("Перечисление.БНФОПериодичностьСписанияРБП.Ежеквартально"), КонецКвартала(Объект.ПериодРегистрации), КонецМесяца(Объект.ПериодРегистрации));
	ГраницаПериода = Новый Граница(КонецДня(ОкончаниеПериодаРегистрации) + 1, ВидГраницы.Исключая);

	Запрос.УстановитьПараметр("НачалоПериодаРегистрации", НачалоПериодаРегистрации);
	Запрос.УстановитьПараметр("ОкончаниеПериодаРегистрации", ОкончаниеПериодаРегистрации);
	Запрос.УстановитьПараметр("Период", ГраницаПериода);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("ПодразделениеОрганизации", Объект.ПодразделениеОрганизации);
	Запрос.УстановитьПараметр("СписокРБП", СписокРБП);
	Запрос.УстановитьПараметр("Регистратор", Объект.Ссылка);
	Запрос.УстановитьПараметр("ЭтоСПОД", Объект.БНФОСПОД);

	МассивСубконтоРБП = Новый Массив;
	МассивСубконтоРБП.Добавить(ПланыВидовХарактеристик.БНФОВидыСубконтоБанковские.РасходыБудущихПериодов);

	МассивСубконтоРБПКонтрагенты = Новый Массив;
	МассивСубконтоРБПКонтрагенты.Добавить(ПланыВидовХарактеристик.БНФОВидыСубконтоБанковские.РасходыБудущихПериодов);
	МассивСубконтоРБПКонтрагенты.Добавить(ПланыВидовХарактеристик.БНФОВидыСубконтоБанковские.Контрагенты);

	МассивСубконтоРБПКонтрагентыДоговоры = Новый Массив;
	МассивСубконтоРБПКонтрагентыДоговоры.Добавить(ПланыВидовХарактеристик.БНФОВидыСубконтоБанковские.РасходыБудущихПериодов);
	МассивСубконтоРБПКонтрагентыДоговоры.Добавить(ПланыВидовХарактеристик.БНФОВидыСубконтоБанковские.Контрагенты);
	МассивСубконтоРБПКонтрагентыДоговоры.Добавить(ПланыВидовХарактеристик.БНФОВидыСубконтоБанковские.Договоры);

	Запрос.УстановитьПараметр("МассивСубконтоРБП",						МассивСубконтоРБП);
	Запрос.УстановитьПараметр("МассивСубконтоРБПКонтрагенты",			МассивСубконтоРБПКонтрагенты);
	Запрос.УстановитьПараметр("МассивСубконтоРБПКонтрагентыДоговоры",	МассивСубконтоРБПКонтрагентыДоговоры);

	СодержаниеШаблон = "Списание РБП за %1";
	Содержание       = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
	СодержаниеШаблон, 
	ПредставлениеПериода(Объект.ПериодРегистрации,
	?(Объект.ПериодичностьСписания = Перечисления.БНФОПериодичностьСписанияРБП.Ежеквартально, КонецКвартала(Объект.ПериодРегистрации), КонецМесяца(Объект.ПериодРегистрации))));

	Запрос.УстановитьПараметр("Содержание", Содержание);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	РасчетСписанияРБП.Статья КАК Статья
	|ПОМЕСТИТЬ ВТ_ИсключаемыеРБП
	|ИЗ
	|	РегистрСведений.РасчетСписанияРБП КАК РасчетСписанияРБП
	|ГДЕ
	|	РасчетСписанияРБП.ПериодРасчета МЕЖДУ &НачалоПериодаРегистрации И &ОкончаниеПериодаРегистрации
	|	И РасчетСписанияРБП.Организация = &Организация
	|	И РасчетСписанияРБП.Регистратор <> &Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
|	ИспользуемыеСчетаАналитическогоУчета.СчетАналитическогоУчета КАК СчетАналитическогоУчета,
|	АналитикаУчетаСчетов.Значение КАК Аналитика
|ПОМЕСТИТЬ вт_СчетаРБП
|ИЗ
|	Справочник.БНФОШаблоныОткрытияСчетовАналитическогоУчета.ВидыАналитикОткрытия КАК ВидыАналитикОткрытия
|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.БНФОСоответствиеСчетовАналитическогоУчетаИАналитики КАК ИспользуемыеСчетаАналитическогоУчета
|		ПО (ВидыАналитикОткрытия.Ссылка = ИспользуемыеСчетаАналитическогоУчета.ШаблонОткрытия)
|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.БНФООсновнаяАналитикаСчетовАналитическогоУчета КАК АналитикаУчетаСчетов
|		ПО (ВидыАналитикОткрытия.ВидАналитики = АналитикаУчетаСчетов.ВидАналитики)
|			И (АналитикаУчетаСчетов.СчетАналитическогоУчета = ИспользуемыеСчетаАналитическогоУчета.СчетАналитическогоУчета)
|ГДЕ
|	ВидыАналитикОткрытия.ВидАналитики.Наименование = ""Расходы будущих периодов""
|	И НЕ АналитикаУчетаСчетов.Значение ЕСТЬ NULL
|;
|
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	БНФОБанковскийОстатки.СуммаОстаток КАК Остаток,
|	вт_СчетаРБП.Аналитика КАК РБП,
|	БНФОБанковскийОстатки.СчетАналитическогоУчета КАК СчетУчета,
|	РасходыБудущихПериодов.БНФОКонтрагент КАК Контрагент,
|	РасходыБудущихПериодов.БНФОДоговорКонтрагента КАК ДоговорКонтрагента,
|	БНФОБанковскийОстатки.СуммаНУОстаток КАК ОстатокНУ,
|	БНФОБанковскийОстатки.СуммаПРОстаток КАК ОстатокПР,
|	БНФОБанковскийОстатки.СуммаВРОстаток КАК ОстатокВР,
|	БНФОБанковскийОстатки.Подразделение КАК Подразделение
|ПОМЕСТИТЬ Остатки
|ИЗ
|	РегистрБухгалтерии.БНФОБанковский.Остатки(
|			&Период,
|			,
|			,
|			Организация = &Организация
|				И СчетАналитическогоУчета В
|					(ВЫБРАТЬ
|						вт_СчетаРБП.СчетАналитическогоУчета
|					ИЗ
|						вт_СчетаРБП)) КАК БНФОБанковскийОстатки
|		ЛЕВОЕ СОЕДИНЕНИЕ вт_СчетаРБП КАК вт_СчетаРБП
|		ПО БНФОБанковскийОстатки.СчетАналитическогоУчета = вт_СчетаРБП.СчетАналитическогоУчета
|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РасходыБудущихПериодов КАК РасходыБудущихПериодов
|		ПО (РасходыБудущихПериодов.Ссылка = вт_СчетаРБП.Аналитика)

	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасходыБудущихПериодов.Ссылка КАК РБП,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Остатки.Контрагент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА РасходыБудущихПериодов.БНФОКонтрагент
	|		ИНАЧЕ Остатки.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Остатки.ДоговорКонтрагента, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			ТОГДА РасходыБудущихПериодов.БНФОДоговорКонтрагента
	|		ИНАЧЕ Остатки.ДоговорКонтрагента
	|	КОНЕЦ КАК ДоговорКонтрагента,
	|	ЕСТЬNULL(Остатки.СчетУчета, ЗНАЧЕНИЕ(Справочник.БНФОСчетаАналитическогоУчета.ПустаяСсылка)) КАК СчетУчета,
	|	ЕСТЬNULL(Остатки.Подразделение, ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)) КАК ПодразделениеОрганизации,
	|	РасходыБудущихПериодов.ДатаНачалаСписания КАК ДатаНачалаСписания,
	|	РасходыБудущихПериодов.ДатаОкончанияСписания КАК ДатаОкончанияСписания,
	|	ВЫБОР
	|		КОГДА &ЭтоСПОД
	|				И НЕ СоответствиеСчетовСПОД.СчетСПОД ЕСТЬ NULL
	|			ТОГДА СоответствиеСчетовСПОД.СчетСПОД
	|		ИНАЧЕ РасходыБудущихПериодов.БНФОСчетЗатрат
	|	КОНЕЦ КАК СчетЗатрат,
	|	РасходыБудущихПериодов.СпособПризнанияРасходов КАК СпособПризнанияРасходов,
	|	РасходыБудущихПериодов.БНФОСубконтоЗатрат1 КАК Субконто1,
	|	РасходыБудущихПериодов.БНФОСубконтоЗатрат2 КАК Субконто2,
	|	РасходыБудущихПериодов.БНФОСубконтоЗатрат3 КАК Субконто3,
	|	РасходыБудущихПериодов.БНФОПодразделениеОрганизации КАК ПодразделениеЗатрат,
	|	РАЗНОСТЬДАТ(&НачалоПериодаРегистрации, &ОкончаниеПериодаРегистрации, ДЕНЬ) + 1 КАК ДнейВПериоде,
	|	РасходыБудущихПериодов.ДатаНачалаСписания КАК ДатаПринятияКУчету,
	|	РасходыБудущихПериодов.Сумма КАК Сумма,
	|	ЕСТЬNULL(Остатки.Остаток, 0) КАК Остаток,
	|	ЕСТЬNULL(Остатки.ОстатокНУ, 0) КАК ОстатокНУ,
	|	ЕСТЬNULL(Остатки.ОстатокПР, 0) КАК ОстатокПР,
	|	ЕСТЬNULL(Остатки.ОстатокВР, 0) КАК ОстатокВР,
	|	&Содержание КАК СодержаниеОперации,
	|	ВЫБОР
	|		КОГДА Остатки.Остаток ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НулеваяСумма
	|ИЗ
	|	Справочник.РасходыБудущихПериодов КАК РасходыБудущихПериодов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Остатки КАК Остатки
	|		ПО (Остатки.РБП = РасходыБудущихПериодов.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.БНФОСоответствиеСчетовСПОД КАК СоответствиеСчетовСПОД
	|		ПО (СоответствиеСчетовСПОД.Организация = &Организация)
	|			И (&ЭтоСПОД)
	|			И РасходыБудущихПериодов.БНФОСчетЗатрат = СоответствиеСчетовСПОД.СчетДоходовРасходов
	|ГДЕ
	|	РасходыБудущихПериодов.Ссылка В(&СписокРБП)
	|	И НЕ РасходыБудущихПериодов.ЭтоГруппа
	|	И НЕ РасходыБудущихПериодов.Ссылка В
	|				(ВЫБРАТЬ
	|					ВТ_ИсключаемыеРБП.Статья
	|				ИЗ
	|					ВТ_ИсключаемыеРБП КАК ВТ_ИсключаемыеРБП)
	|	И РасходыБудущихПериодов.БНФООрганизация = &Организация";				

	Если СписокРБП.Количество() = 0 Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Субконто1 В (&СписокРБП)", " ИСТИНА ");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "РасходыБудущихПериодов.Ссылка В(&СписокРБП)", " ИСТИНА ");
	КонецЕсли;

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл

		Отказ = Ложь;

		РБП   = Выборка.РБП;
		Если НЕ ЗначениеЗаполнено(РБП) Тогда
			Продолжить;
		КонецЕсли;

		Если Выборка.СпособПризнанияРасходов = Перечисления.СпособыПризнанияРасходов.ВОсобомПорядке Тогда
			Продолжить;
		КонецЕсли;      

		// Проверяем дату принятия к учету.
		Если Выборка.ДатаПринятияКУчету > ОкончаниеПериодаРегистрации Тогда
			Продолжить;
		КонецЕсли;      

		СчетЗатрат = Выборка.СчетЗатрат;

		Если НЕ ЗначениеЗаполнено(Выборка.ДатаНачалаСписания) Тогда
			Отказ = Истина;
			ШаблонСообщения = НСтр("ru = 'Не заполнена дата начала списания для статьи расходов будущих периодов ""%1"". 
			|Укажите дату начала списания.'");

			ТекстСообщения  = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, РБП);
			БухгалтерскийУчетПереопределяемый.СообщитьОбОшибкеРегОперацииСНавигацией(ТекстСообщения, РБП, Отказ, Объект.Ссылка);
		КонецЕсли;

		Если НЕ ЗначениеЗаполнено(Выборка.ДатаОкончанияСписания) Тогда
			Отказ = Истина;
			ШаблонСообщения = НСтр("ru = 'Не заполнена дата окончания списания для статьи расходов будущих периодов ""%1"". 
			|Укажите дату окончания списания.'");

			ТекстСообщения  = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, РБП);
			БухгалтерскийУчетПереопределяемый.СообщитьОбОшибкеРегОперацииСНавигацией(ТекстСообщения, РБП, Отказ, Объект.Ссылка);
		КонецЕсли;

		Если НЕ ЗначениеЗаполнено(СчетЗатрат) Тогда
			Отказ = Истина;
			ШаблонСообщения = НСтр("ru = 'Не заполнен счет списания для статьи расходов будущих периодов ""%1"". 
			|Укажите счет списания списания.'");

			ТекстСообщения  = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, РБП);
			БухгалтерскийУчетПереопределяемый.СообщитьОбОшибкеРегОперацииСНавигацией(ТекстСообщения, РБП, Отказ, Объект.Ссылка);
		КонецЕсли; // Проверка аналитики

		Если Отказ Тогда
			Продолжить;
		КонецЕсли;

		ВспомогательныеДанныеРасчета = Новый Структура("КоличествоДней, КоличествоДнейТекущегоПериода", 0, 0);

		Если Выборка.Остаток > 0 ИЛИ Выборка.ОстатокНУ > 0 ИЛИ Выборка.ОстатокВР > 0 Тогда

			СуммаСписанияДоПринятия		= 0;
			СуммаСписанияДоПринятияНУ	= 0;
			СуммаСписанияДоПринятияПР	= 0;
			СуммаСписанияДоПринятияВР	= 0;

			Если Выборка.ДатаПринятияКУчету >= НачалоПериодаРегистрации 
				И Выборка.ДатаПринятияКУчету <= ОкончаниеПериодаРегистрации
				И Выборка.ДатаНачалаСписания < Выборка.ДатаПринятияКУчету
				И Выборка.ДатаНачалаСписания < НачалоПериодаРегистрации Тогда

				// Выполним списание суммы рассчитанной между датой начала списания и датой принятия к учету.
				ВспомогательныеДанныеРасчетаДоПринятия = Новый Структура("КоличествоДней, КоличествоДнейТекущегоПериода", 0, 0);

				СуммаСписанияДоПринятия   = БНФОУчетДоходовРасходов.СуммаСписанияРБПЗаПериод(
				Выборка.СпособПризнанияРасходов, Выборка.ДатаНачалаСписания, Выборка.ДатаОкончанияСписания, Выборка.Остаток,
				ВспомогательныеДанныеРасчетаДоПринятия, Выборка.ДатаНачалаСписания, Выборка.ДатаПринятияКУчету, Объект.ПериодичностьСписания);

				СуммаСписанияДоПринятияНУ   = БНФОУчетДоходовРасходов.СуммаСписанияРБПЗаПериод(
				Выборка.СпособПризнанияРасходов, Выборка.ДатаНачалаСписания, Выборка.ДатаОкончанияСписания, Выборка.ОстатокНУ,
				ВспомогательныеДанныеРасчетаДоПринятия, Выборка.ДатаНачалаСписания, Выборка.ДатаПринятияКУчету, Объект.ПериодичностьСписания);

				СуммаСписанияДоПринятияПР   = БНФОУчетДоходовРасходов.СуммаСписанияРБПЗаПериод(
				Выборка.СпособПризнанияРасходов, Выборка.ДатаНачалаСписания, Выборка.ДатаОкончанияСписания, Выборка.ОстатокПР,
				ВспомогательныеДанныеРасчетаДоПринятия, Выборка.ДатаНачалаСписания, Выборка.ДатаПринятияКУчету, Объект.ПериодичностьСписания);

				СуммаСписанияДоПринятияВР   = БНФОУчетДоходовРасходов.СуммаСписанияРБПЗаПериод(
				Выборка.СпособПризнанияРасходов, Выборка.ДатаНачалаСписания, Выборка.ДатаОкончанияСписания, Выборка.ОстатокВР,
				ВспомогательныеДанныеРасчетаДоПринятия, Выборка.ДатаНачалаСписания, Выборка.ДатаПринятияКУчету, Объект.ПериодичностьСписания);

			КонецЕсли;

			Если Выборка.ДатаПринятияКУчету >= НачалоПериодаРегистрации И Выборка.ДатаПринятияКУчету <= ОкончаниеПериодаРегистрации Тогда
				ДатаНачала = Выборка.ДатаНачалаСписания;
			Иначе
				ДатаНачала = ?(Выборка.ДатаНачалаСписания > НачалоПериодаРегистрации, Выборка.ДатаНачалаСписания, НачалоПериодаРегистрации);
			КонецЕсли;

			СуммаСписания   = СуммаСписанияДоПринятия + БНФОУчетДоходовРасходов.СуммаСписанияРБПЗаПериод(
			Выборка.СпособПризнанияРасходов, ДатаНачала, Выборка.ДатаОкончанияСписания, Выборка.Остаток - СуммаСписанияДоПринятия,
			ВспомогательныеДанныеРасчета, НачалоПериодаРегистрации, ОкончаниеПериодаРегистрации, Объект.ПериодичностьСписания);

			СуммаСписанияНУ   = СуммаСписанияДоПринятияНУ + БНФОУчетДоходовРасходов.СуммаСписанияРБПЗаПериод(
			Выборка.СпособПризнанияРасходов, ДатаНачала, Выборка.ДатаОкончанияСписания, Выборка.ОстатокНУ - СуммаСписанияДоПринятияНУ,
			ВспомогательныеДанныеРасчета, НачалоПериодаРегистрации, ОкончаниеПериодаРегистрации, Объект.ПериодичностьСписания);

			СуммаСписанияПР   = СуммаСписанияДоПринятияПР +  БНФОУчетДоходовРасходов.СуммаСписанияРБПЗаПериод(
			Выборка.СпособПризнанияРасходов, ДатаНачала, Выборка.ДатаОкончанияСписания, Выборка.ОстатокПР - СуммаСписанияДоПринятияПР,
			ВспомогательныеДанныеРасчета, НачалоПериодаРегистрации, ОкончаниеПериодаРегистрации, Объект.ПериодичностьСписания);

			СуммаСписанияВР   = СуммаСписанияДоПринятияВР +  БНФОУчетДоходовРасходов.СуммаСписанияРБПЗаПериод(
			Выборка.СпособПризнанияРасходов, ДатаНачала, Выборка.ДатаОкончанияСписания, Выборка.ОстатокВР - СуммаСписанияДоПринятияВР,
			ВспомогательныеДанныеРасчета, НачалоПериодаРегистрации, ОкончаниеПериодаРегистрации, Объект.ПериодичностьСписания);				
		Иначе

			СуммаСписания = 0;
			СуммаСписанияНУ = 0;
			СуммаСписанияПР = 0;
			СуммаСписанияВР = 0;

		КонецЕсли;

		Если (СуммаСписания <> 0 ИЛИ СуммаСписанияНУ <> 0 ИЛИ СуммаСписанияПР <> 0 ИЛИ СуммаСписанияВР <> 0) Тогда

			МассивСтрок = Объект.Состав.НайтиСтроки(Новый Структура("РБП", Выборка.РБП));

			ЭлементСпискаЗначений = СписокРБП.НайтиПоЗначению(Выборка.РБП);
			Если ЭлементСпискаЗначений <> Неопределено Тогда
				СписокРБП.Удалить(ЭлементСпискаЗначений);
			КонецЕсли;

			Если МассивСтрок.Количество() = 0 Тогда
				СтрокаТЧ = Объект.Состав.Добавить();
			Иначе
				СтрокаТЧ = МассивСтрок[0];
			КонецЕсли;

			ЗаполнитьЗначенияСвойств(СтрокаТЧ, Выборка);
			СтрокаТЧ.ДнейВПериоде = ВспомогательныеДанныеРасчета.КоличествоДнейТекущегоПериода;
			СтрокаТЧ.ДнейДоКонцаСрокаИспользования = ВспомогательныеДанныеРасчета.КоличествоДней;

			СтрокаТЧ.СуммаСписания		= Окр(СуммаСписания,2);
			СтрокаТЧ.СуммаСписанияНУ	= Окр(СуммаСписанияНУ,2);
			СтрокаТЧ.СуммаСписанияПР	= Окр(СуммаСписанияПР,2);
			СтрокаТЧ.СуммаСписанияВР	= Окр(СуммаСписанияВР,2);

			СтрокаТЧ.ДатаНачала		= Выборка.ДатаНачалаСписания;
			СтрокаТЧ.ДатаОкончания	= Выборка.ДатаОкончанияСписания;

			БНФОУчетДоходовРасходов.ПересчитатьСуммыПоСтрокеСписаниеРБП(СтрокаТЧ);

		КонецЕсли;

	КонецЦикла;				

	// Если остались РБП из списка с отсутсующим остатком,
	// добавим строки без параметров списания и уведомим пользователей.

	ИмяСписка = НСтр("ru = 'Состав'");

	Для каждого ЭлементСпискаЗначений Из СписокРБП Цикл

		Если ДобавлятьСтрокуПриНулевойСумме Тогда
			СтрокаТаблицы 				= Объект.Состав.Добавить();
			СтрокаТаблицы.РБП			= ЭлементСпискаЗначений.Значение;
		Иначе
			МассивСтрок = Объект.Состав.НайтиСтроки(Новый Структура("РБП", ЭлементСпискаЗначений.Значение));
			Если МассивСтрок.Количество() = 0 Тогда
				Продолжить;
			Иначе
				СтрокаТаблицы = МассивСтрок[0];
			КонецЕсли;			
		КонецЕсли;

		ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СтрокаТаблицы.РБП, "ДатаНачалаСписания,ДатаОкончанияСписания");

		СтрокаТаблицы.ДатаНачала	= ЗначенияРеквизитов.ДатаНачалаСписания;
		СтрокаТаблицы.ДатаОкончания	= ЗначенияРеквизитов.ДатаОкончанияСписания;

		Префикс = "Состав[%1].";
		Префикс = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		Префикс, Формат(СтрокаТаблицы.НомерСтроки - 1, "ЧН=0; ЧГ="));		

		ТекстСообщения = НСтр("ru = 'Для РБП: %1 параметры списания не рассчитаны'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		ТекстСообщения, СтрокаТаблицы.РБП);		

		Поле = Префикс + "РБП";

		Если ДобавлятьСтрокуПриНулевойСумме Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект.Ссылка , Поле, , Отказ);
		Иначе	
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ,"Объект." + Поле , , Отказ);
		КонецЕсли;

	КонецЦикла;

КонецПроцедуры
