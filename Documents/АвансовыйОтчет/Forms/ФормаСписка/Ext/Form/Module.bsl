
&НаСервере
Процедура pcru_ex_УстановитьСтатусОригиналНеПолученПередНаСервере(СписокДокументов)
	СтатусДокумента = ПредопределенноеЗначение("Перечисление.СтатусыДокументовПоступления.ОригиналНеПолучен");
	СтатусИзменен = РегистрыСведений.PCRU_СтатусыДокументов.УстановитьСтатусыДокументов(СписокДокументов.ВыгрузитьЗначения(),СтатусДокумента );
	Если Не СтатусИзменен Тогда
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура pcru_ex_УстановитьСтатусОригиналНеПолученПеред(Команда)
	ВыделенныеДокументы = ВыделенныеДокументы(ЭтотОбъект);
	Если ВыделенныеДокументы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	СписокДокументов = ВыделенныеДокументы.СписокОсновныхДокументов;
	pcru_ex_УстановитьСтатусОригиналНеПолученПередНаСервере(СписокДокументов);
	Элементы.Список.Обновить();
КонецПроцедуры

&НаСервере
Процедура pcru_ex_УстановитьСтатусОригиналПолученПередНаСервере(СписокДокументов)
	СтатусДокумента = ПредопределенноеЗначение("Перечисление.СтатусыДокументовПоступления.ОригиналПолучен");
	СтатусИзменен = РегистрыСведений.PCRU_СтатусыДокументов.УстановитьСтатусыДокументов(СписокДокументов.ВыгрузитьЗначения(),СтатусДокумента );
	Если Не СтатусИзменен Тогда
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура pcru_ex_УстановитьСтатусОригиналПолученПеред(Команда)
	ВыделенныеДокументы = ВыделенныеДокументы(ЭтотОбъект);
	Если ВыделенныеДокументы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	СписокДокументов = ВыделенныеДокументы.СписокОсновныхДокументов;
	pcru_ex_УстановитьСтатусОригиналПолученПередНаСервере(СписокДокументов);
	Элементы.Список.Обновить();
КонецПроцедуры

// Формирирует список документов, выделенных в динамическом списке на форме, 
// и список документов связанных с выделенными (счета-фактуры, документы-основания).
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - содержит реквизит Список.
//  ОтбиратьСвязанныеДокументы - Булево - признак того, что нужно сформировать список документов,
//  связанных с выделенными (счета-фактуры, либо документы-основания счетов-фактур) для записи
//  статуса оригинала счета-фактуры.
// 
// Возвращаемое значение:
//   ВыделенныеДокументы - Структура с ключами:
//   *СписокОсновныхДокументов - СписокЗначений - содержит документы, из строк выделенных в списке.
//   *СписокСвязанныхДокументов - СписокЗначений - содержит список связанных с основным списком документов,
//    для которых необходимо поменять статус оригинала счета-фактуры.
//
&НаКлиенте
Функция ВыделенныеДокументы(Форма, ОтбиратьСвязанныеДокументы = Ложь)
	
	СписокФ = Форма.Элементы.Список;
	ВыделенныеСтроки = СписокФ.ВыделенныеСтроки;
	
	СписокОсновныхДокументов  = Новый СписокЗначений;
	СписокСвязанныхДокументов = Новый СписокЗначений; 
	
	ЭтоСписокПолученныхСчетовФактур = Ложь;
	ПоказаноСообщениеПользователю   = Ложь;
	Для Каждого ВыделеннаяСтрока Из ВыделенныеСтроки Цикл
		Если ТипЗнч(ВыделеннаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
			Продолжить;
		КонецЕсли;
		
		ТекущаяСтрока = СписокФ.ДанныеСтроки(ВыделеннаяСтрока);
		Если ТекущаяСтрока <> Неопределено Тогда
			ЭтоСписокПолученныхСчетовФактур = ТипЗнч(ТекущаяСтрока.Ссылка) = Тип("ДокументСсылка.СчетФактураПолученный");
			Если ОтбиратьСвязанныеДокументы 
				И НЕ ЭтоСписокПолученныхСчетовФактур Тогда
				// Добавляем в список документов только документы со счетами-фактурами.
				Если ТекущаяСтрока.СчетФактура = ПредопределенноеЗначение("Перечисление.СтатусыСчетаФактуры.Отсутствует")
					ИЛИ ТекущаяСтрока.СчетФактура = ПредопределенноеЗначение("Перечисление.СтатусыСчетаФактуры.НеТребуется") Тогда
					ТекстСообщения = НСтр("ru = 'По документу %1 счет-фактура не выписан'");
					ТекстСообщения = СтрШаблон(ТекстСообщения, ТекущаяСтрока.Ссылка);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
					ПоказаноСообщениеПользователю = Истина;
				Иначе
					СписокОсновныхДокументов.Добавить(ТекущаяСтрока.Ссылка);
				КонецЕсли;
			Иначе
				СписокОсновныхДокументов.Добавить(ТекущаяСтрока.Ссылка);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если СписокОсновныхДокументов.Количество() = 0 Тогда
		Если НЕ ПоказаноСообщениеПользователю Тогда 
			//ПоказатьПредупреждение(, НСтр("ru = 'Команда не может быть выполнена для указанного объекта'"));
		КонецЕсли;
		Возврат Неопределено;
	КонецЕсли;
	
	Если ОтбиратьСвязанныеДокументы Тогда
		
		Если ЭтоСписокПолученныхСчетовФактур Тогда
			// Необходимо получить документы-основания выделенных счетов-фактур.
			СписокСвязанныхДокументов = УчетНДСВызовСервера.СвязанныеДокументыОснованияСоСтатусомСФ(СписокОсновныхДокументов);
		Иначе
			// Необходимо получить связанные с выделенными основаниями счета-фактуры.
			СоответствиеОснованийСФ = УчетНДСВызовСервера.ПодчиненныеСчетаФактурыПолученные(СписокОсновныхДокументов);
			Для Каждого ЭлементСоответствия Из СоответствиеОснованийСФ Цикл
				СписокСвязанныхДокументов.Добавить(ЭлементСоответствия.Значение);
			КонецЦикла;
			// Переопределим список основных документов, т.к. в случае составления одного счета-фактуры к нескольким документам поступления
			// необходимо поменять статусы оригинала для нескольких записей.
			СписокОсновныхДокументов = УчетНДСВызовСервера.СвязанныеДокументыОснованияСоСтатусомСФ(СписокСвязанныхДокументов);
		КонецЕсли;
		
	КонецЕсли;
	
	ВыделенныеДокументы = Новый Структура("СписокОсновныхДокументов, СписокСвязанныхДокументов", 
	СписокОсновныхДокументов, СписокСвязанныхДокументов);
	
	Возврат ВыделенныеДокументы;
	
КонецФункции

&НаКлиенте
Процедура pcru_ex_Команда1После(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры


