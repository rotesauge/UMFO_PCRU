

Процедура pcru_ex_ОбработкаПроведения(Отказ, РежимПроведения)
	//ЭтотОбъект.Движения.БНФОБанковский.
	НаборЗаписей = РегистрыБухгалтерии.БНФОБанковский.СоздатьНаборЗаписей(); 
	НаборЗаписей.Отбор.Регистратор.Установить(ЭтотОбъект.Ссылка);
	НаборЗаписей.Прочитать();                                                                                         
	НаборЗаписей.Очистить();
	
	Если не ЭтотОбъект.ЗарплатаОтраженаВБухучете Тогда
		НаборЗаписей.Записать(Истина);
		Возврат;
	КонецЕсли;
	
	ОписаниеПроводок = Новый Массив;
	
	НомерстрокиЗП = 0;
	#Область ЗП 
	Для каждого СтрокаЗП Из ЭтотОбъект.НачисленнаяЗарплатаИВзносы Цикл
		НомерстрокиЗП = НомерстрокиЗП +1;
		
		Если  СтрокаЗП.ВидОперации = Перечисления.ВидыОперацийПоЗарплате.РасходыПоСтрахованиюФСС Тогда
			СтрокаЗП.СпособОтраженияЗарплатыВБухучете = Справочники.СпособыОтраженияЗарплатыВБухУчете.НайтиПоНаименованию("ОплатаЗаСчетФСС;60335<Налог (взносы): начислено / уплачено;;>60305<;>");
		КонецЕсли; 
		
		
		Если  СтрокаЗП.ВидОперации = Перечисления.ВидыОперацийПоЗарплате.ВыплатыБывшимСотрудникам Тогда
			СтрокаЗП.СпособОтраженияЗарплатыВБухучете = Справочники.СпособыОтраженияЗарплатыВБухУчете.НайтиПоНаименованию("ВыплатаВыходногоПособия;71802<01111 Расходы по выплате выходных пособий;;>60305<;пп.9, ст.255 НК РФ>");
		КонецЕсли; 
		
		
		#Область ОсновнаяЧасть 
		НоваяЗапись = НаборЗаписей.Добавить(); 
		НоваяЗапись.Активность = Истина;
		НоваяЗапись.Организация = ЭтотОбъект.Организация;
		НоваяЗапись.Период = Конецмесяца(ЭтотОбъект.ПериодРегистрации);
		НоваяЗапись.Регистратор = ЭтотОбъект.Ссылка;
		НоваяЗапись.Сумма = СтрокаЗП.Сумма;
		// получаем структуру проводок		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	СпособыОтраженияЗарплатыВБухУчетеДополнительныеРеквизиты.Значение КАК Значение,
		|	СпособыОтраженияЗарплатыВБухУчетеДополнительныеРеквизиты.Свойство.Заголовок КАК СвойствоЗаголовок
		|ИЗ
		|	Справочник.СпособыОтраженияЗарплатыВБухУчете.ДополнительныеРеквизиты КАК СпособыОтраженияЗарплатыВБухУчетеДополнительныеРеквизиты
		|ГДЕ
		|	СпособыОтраженияЗарплатыВБухУчетеДополнительныеРеквизиты.Ссылка = &Ссылка";
		Запрос.УстановитьПараметр("Ссылка", СтрокаЗП.СпособОтраженияЗарплатыВБухучете );
		Выборка = Запрос.Выполнить().Выбрать();
		СтруктураПроводки = Новый Структура;
		Пока Выборка.Следующий() Цикл
			СтруктураПроводки.Вставить(СтрЗаменить(Выборка.СвойствоЗаголовок," ",""),Выборка.Значение);
		КонецЦикла;
		// Дополняем структуру проводок		  
		СтруктураПроводки.Вставить("Контрагент",Справочники.Контрагенты.НайтиПоНаименованию(Строка(СтрокаЗП.ФизическоеЛицо)));
		СтруктураПроводки.Вставить("ФизическоеЛицо",СтрокаЗП.ФизическоеЛицо);
		СтруктураПроводки.Вставить("ВидНачисленияОплатыТрудаДляНУ",СтрокаЗП.ВидНачисленияОплатыТрудаДляНУ);
		//*********************************************************************** 
		//Запрос = Новый Запрос;
		//Запрос.Текст = "ВЫБРАТЬ
		//|	ПодразделенияОрганизацийДополнительныеРеквизиты.Значение КАК Значение
		//|ИЗ
		//|	Справочник.ПодразделенияОрганизаций.ДополнительныеРеквизиты КАК ПодразделенияОрганизацийДополнительныеРеквизиты
		//|ГДЕ
		//|	ПодразделенияОрганизацийДополнительныеРеквизиты.Ссылка = &Ссылка
		//|	И ПодразделенияОрганизацийДополнительныеРеквизиты.Свойство.Заголовок = ""ПК ЗУП""";
		//Запрос.УстановитьПараметр("Ссылка",СтрокаЗП.Подразделение);
		//Выборка = Запрос.Выполнить().Выбрать();
		//Пока Выборка.Следующий() Цикл
		//	СтруктураПроводки.Вставить("ProcessCode",Выборка.Значение);
		//КонецЦикла;
		СтруктураПроводки.Вставить("ProcessCode", СтрокаЗП.Подразделение.pcru_ProcessCode);
		
		Если ЗначениеЗаполнено(СтрокаЗП.ProcessCode) Тогда
			СтруктураПроводки.Вставить("ProcessCode2",СтрокаЗП.ProcessCode);
		КонецЕсли; 
		
		Значение = Неопределено;
		
		Если СтруктураПроводки.Свойство("ДтСч",Значение) Тогда
			СтруктураПроводки.Вставить("СчетАналитическогоУчетаДт",Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду(Значение));
		Иначе
			сообщить("Строка зарплаты"+Строка(СтрокаЗП.НомерСтроки)+"не обработана - для способа отражения" +СТрока(СтрокаЗП.СпособОтраженияЗарплатыВБухучете)+ "не задан счет ДТ!"); 
			Отказ = Истина;
			Возврат;
		КонецЕсли; 
		
		
		Если  СтрокаЗП.ВидОперации = Перечисления.ВидыОперацийПоЗарплате.ВыплатыБывшимСотрудникам Тогда
			Если СтруктураПроводки.Свойство("КтСч",Значение) Тогда
				СтруктураПроводки.Вставить("СчетАналитическогоУчетаКт",Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду(Значение));
			Иначе
				сообщить("Строка зарплаты"+Строка(СтрокаЗП.НомерСтроки)+"не обработана - для способа отражения" +СТрока(СтрокаЗП.СпособОтраженияЗарплатыВБухучете)+ "не задан счет КТ!"); 
				Отказ = Истина;
				Возврат;
				
			КонецЕсли;
		Иначе 	
			Если ЗначениеЗаполнено(СтрокаЗП.ФизическоеЛицо)  Тогда
				СтруктураПроводки.Вставить("СчетАналитическогоУчетаКт",pcru_УМФО.ПолучитьСчетПоАналитике("60312",Справочники.Контрагенты.НайтиПоНаименованию(Строка(СтрокаЗП.ФизическоеЛицо))));
			Иначе 	
				Если СтруктураПроводки.Свойство("КтСч",Значение) Тогда
					СтруктураПроводки.Вставить("СчетАналитическогоУчетаКт",Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду(Значение));
				Иначе
					сообщить("Строка зарплаты"+Строка(СтрокаЗП.НомерСтроки)+"не обработана - для способа отражения" +СТрока(СтрокаЗП.СпособОтраженияЗарплатыВБухучете)+ "не задан счет КТ!"); 
					Отказ = Истина;
					Возврат;
					
				КонецЕсли;
			КонецЕсли; 
		КонецЕсли; 
		
		
		СтруктураПроводки = pcru_УМФО.ЗАполнитьСубконто(СтруктураПроводки);
		
		НоваяЗапись.СчетАналитическогоУчетаДт  =  СтруктураПроводки.СчетАналитическогоУчетаДт;
		НоваяЗапись.СчетДт = НоваяЗапись.СчетАналитическогоУчетаДт.Владелец;
		Если СтруктураПроводки.Свойство("СубконтоДТ1") Тогда
			БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 1, СтруктураПроводки.СубконтоДТ1); // статья доходов расходов
		КонецЕсли; 
		Если СтруктураПроводки.Свойство("СубконтоДт2") Тогда
			БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 2, СтруктураПроводки.СубконтоДТ2); // process code			
		КонецЕсли; 
		Если СтруктураПроводки.Свойство("СубконтоДт3") Тогда
			БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 3, СтруктураПроводки.СубконтоДТ3); // process code			
		КонецЕсли; 
		
		
		НоваяЗапись.СчетАналитическогоУчетаКт  =  СтруктураПроводки.СчетАналитическогоУчетаКт;
		НоваяЗапись.СчетКт = НоваяЗапись.СчетАналитическогоУчетаКт.Владелец;
		Если СтруктураПроводки.Свойство("СубконтоКт1") Тогда
			БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 1, СтруктураПроводки.СубконтоКт1); // статья доходов расходов
		КонецЕсли; 
		Если СтруктураПроводки.Свойство("СубконтоКт2") Тогда
			БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 2, СтруктураПроводки.СубконтоКт2); // process code			
		КонецЕсли; 
		Если СтруктураПроводки.Свойство("СубконтоКт3") Тогда
			БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 3, СтруктураПроводки.СубконтоКт3); // process code			
		КонецЕсли; 
		
		//Запрос = Новый Запрос;
		//Запрос.Текст = "ВЫБРАТЬ
		//|	ПодразделенияОрганизаций.Ссылка КАК Ссылка
		//|ИЗ
		//|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
		//|ГДЕ
		//|	ПОДСТРОКА(ПодразделенияОрганизаций.Наименование, 1, 8) = ПОДСТРОКА(&Наименование, 1, 7) + "" """;
		//Запрос.УстановитьПараметр("Наименование",СтрокаЗП.Подразделение.Наименование );
		//Выборка = Запрос.Выполнить().Выбрать();
		//Если Выборка.Следующий() Тогда
		//	Подразделение = Выборка.Ссылка;
		//Иначе
		Подразделение = СтрокаЗП.Подразделение;
		//Конецесли;
		
		
		
		Если НоваяЗапись.СчетДт.УчетПоПодразделениям Тогда
			НоваяЗапись.ПодразделениеДт  =  Подразделение;//СтрокаЗП.Подразделение;
		КонецЕсли; 
		
		Если НоваяЗапись.СчетКт.УчетПоПодразделениям Тогда
			НоваяЗапись.ПодразделениеКт  =  Подразделение;//СтрокаЗП.Подразделение;
		КонецЕсли; 
		
		Если НоваяЗапись.СчетДт.НалоговыйУчет Тогда
			Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Резерв по бонусам_полугодовой"  или СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Резервы по бонусам" Тогда
				НоваяЗапись.СуммаВРДт = СтрокаЗП.Сумма;
			Иначе
				НоваяЗапись.СуммаНУДт = СтрокаЗП.Сумма;
			КонецЕсли; 	
		КонецЕсли; 
		
		Если НоваяЗапись.СчетКт.НалоговыйУчет Тогда
			Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Резерв по бонусам_полугодовой"  или СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Резервы по бонусам" Тогда
				НоваяЗапись.СуммаВРКт = СтрокаЗП.Сумма;
			Иначе
				НоваяЗапись.СуммаНУКт = СтрокаЗП.Сумма;
			КонецЕсли; 	
		КонецЕсли;
		
		ОписаниеПроводок.Добавить("Начисления строка "+НомерстрокиЗП+ "Основная часть. Сумма " + СтрокаЗП.Сумма); 
		
		Перезаполнить = Не ЗначениеЗаполнено(СтрокаЗП.СпособОтраженияЗарплатыВБухучете.pcru_ex_СубконтоДТ1_ОСН);
		
		Если Перезаполнить Тогда
			СпособОтраженияЗарплатыВБухучетеОбъект = СтрокаЗП.СпособОтраженияЗарплатыВБухучете.ПолучитьОбъект();
			СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СчДТ_ОСН =  СтруктураПроводки.СчетАналитическогоУчетаДт;
			Если СтруктураПроводки.Свойство("СубконтоДт1") Тогда
				СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоДТ1_ОСН = СтруктураПроводки.СубконтоДТ1;
			КонецЕсли; 
			Если СтруктураПроводки.Свойство("СубконтоДт2") Тогда
				СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоДТ2_ОСН = СтруктураПроводки.СубконтоДТ2; // process code			
			КонецЕсли; 
			Если СтруктураПроводки.Свойство("СубконтоДт3") Тогда
				СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоДТ3_ОСН = СтруктураПроводки.СубконтоДТ3; // process code			
			КонецЕсли;
			СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СчКТ_ОСН  =  СтруктураПроводки.СчетАналитическогоУчетаКт;
			Если СтруктураПроводки.Свойство("СубконтоКт1") Тогда
				СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоКТ1_ОСН = СтруктураПроводки.СубконтоКт1;
			КонецЕсли; 
			Если СтруктураПроводки.Свойство("СубконтоКт2") Тогда
				СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоКТ1_ОСН = СтруктураПроводки.СубконтоКт2; // process code			
			КонецЕсли; 
			Если СтруктураПроводки.Свойство("СубконтоКт3") Тогда
				СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоКТ3_ОСН = СтруктураПроводки.СубконтоКт3; // process code			
			КонецЕсли; 
			
		КонецЕсли; 
		
		
		
		
		#КонецОбласти
		
		//*********************************************************************** 
		#Область ПФРДоПредельнойВеличины 
		Если СтрокаЗП.ПФРДоПредельнойВеличины  <> 0 Тогда
			НоваяЗапись = НаборЗаписей.Добавить(); 
			НоваяЗапись.Активность = Истина;
			НоваяЗапись.Организация = ЭтотОбъект.Организация;
			НоваяЗапись.Период = Конецмесяца(ЭтотОбъект.ПериодРегистрации);
			НоваяЗапись.Регистратор = ЭтотОбъект.Ссылка;
			НоваяЗапись.Сумма = СтрокаЗП.ПФРДоПредельнойВеличины;
			
			Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Отпуск из резерва" или СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "КомпенсацияОтпускаПриУвольнении;71802<01111 Компенсация отпуска при увольнении по календарным дням;;><;пп.25, ст.255 НК РФ>" Тогда
				НоваяЗапись.СчетАналитическогоУчетаДт  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6033581000000000000100000");
				НоваяЗапись.СчетДт = НоваяЗапись.СчетАналитическогоУчетаДт.Владелец;
				Если СтруктураПроводки.Свойство("СубконтоКт2") Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 2, СтруктураПроводки.СубконтоКТ2); // process code			
				КонецЕсли; 
			ИначеЕсли СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Бонусы из резерва" or СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Бонусы из резерва_полугодовой" Тогда
				НоваяЗапись.СчетАналитическогоУчетаДт  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6033581000000000000000000");
				НоваяЗапись.СчетДт = НоваяЗапись.СчетАналитическогоУчетаДт.Владелец;
				Если СтруктураПроводки.Свойство("СубконтоКт2") Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 2, СтруктураПроводки.СубконтоКТ2); // process code			
				КонецЕсли; 
			Иначе	
				НоваяЗапись.СчетАналитическогоУчетаДт  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("7180281000551030000101115");
				НоваяЗапись.СчетДт = НоваяЗапись.СчетАналитическогоУчетаДт.Владелец;
				Значение = Неопределено;
				Если СтруктураПроводки.Свойство("СтСтрахВзносы",Значение) Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 1,Справочники.ПрочиеДоходыИРасходы.НайтиПоНаименованию(Значение));	
				Иначе	
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 1,Справочники.ПрочиеДоходыИРасходы.ПустаяСсылка());	
				КонецЕсли; 
				Если ЗначениеЗаполнено(СтруктураПроводки.СубконтоДТ2)  Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 2,СтруктураПроводки.СубконтоДТ2);
				Иначе
					Значение = Неопределено;
					Если СтруктураПроводки.Свойство("ProcessCode",Значение) Тогда
						БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 2,Справочники.БНФОСубконто.НайтиПоНаименованию(Значение));	
					Иначе	
						БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 2,Справочники.БНФОСубконто.ПустаяСсылка());	
					КонецЕсли; 	
				КонецЕсли; 
			КонецЕсли; 
			
			
			Значение = Неопределено;
			
			Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Резерв по бонусам_полугодовой"  или СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Резервы по бонусам" Тогда
				НоваяЗапись.СчетАналитическогоУчетаКт  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6033581000000000000000000");
			Иначе
				НоваяЗапись.СчетАналитическогоУчетаКт  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6033581000000000061010160");
			КонецЕсли; 
			
			НоваяЗапись.СчетКт = НоваяЗапись.СчетАналитическогоУчетаКт.Владелец;
			БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 1, Перечисления.ВидыПлатежейВГосБюджет.Налог); // статья доходов расходов
			
			Если НоваяЗапись.СчетДт.УчетПоПодразделениям Тогда
				НоваяЗапись.ПодразделениеДт  =  Подразделение;//СтрокаЗП.Подразделение;
			КонецЕсли; 
			
			Если НоваяЗапись.СчетКт.УчетПоПодразделениям Тогда
				НоваяЗапись.ПодразделениеКт  =  Подразделение;//СтрокаЗП.Подразделение;
			КонецЕсли; 
			
			
			Если НоваяЗапись.СчетДт.НалоговыйУчет Тогда
				Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Резерв по бонусам_полугодовой"  или СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Резервы по бонусам" Тогда
					НоваяЗапись.СуммаВРДт = СтрокаЗП.ПФРДоПредельнойВеличины;
				Иначе
					НоваяЗапись.СуммаНУДт = СтрокаЗП.ПФРДоПредельнойВеличины;
				КонецЕсли; 	
			КонецЕсли; 
			
			Если НоваяЗапись.СчетКт.НалоговыйУчет Тогда
				Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Резерв по бонусам_полугодовой"  или СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Резервы по бонусам" Тогда
					НоваяЗапись.СуммаВРКт = СтрокаЗП.ПФРДоПредельнойВеличины;
				Иначе
					НоваяЗапись.СуммаНУКт = СтрокаЗП.ПФРДоПредельнойВеличины;
				КонецЕсли; 	
			КонецЕсли;
			
			
			ОписаниеПроводок.Добавить("Начисления строка "+НомерстрокиЗП+ "ПФРДоПредельнойВеличины. Сумма " + СтрокаЗП.ПФРДоПредельнойВеличины); 
			
			
			Если Перезаполнить Тогда
				Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Отпуск из резерва" или СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "КомпенсацияОтпускаПриУвольнении;71802<01111 Компенсация отпуска при увольнении по календарным дням;;><;пп.25, ст.255 НК РФ>" Тогда
					СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СчДТ_ПФРДоПредельнойВеличины  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6033581000000000000100000");
					Если СтруктураПроводки.Свойство("СубконтоКт2") Тогда
						СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоДТ2_ПФРДоПредельнойВеличины =  СтруктураПроводки.СубконтоКТ2; // process code			
					КонецЕсли; 
				ИначеЕсли СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Бонусы из резерва" or СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Бонусы из резерва_полугодовой" Тогда
					СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СчДТ_ПФРДоПредельнойВеличиныт  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6033581000000000000000000");
					Если СтруктураПроводки.Свойство("СубконтоКт2") Тогда
						СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоДТ2_ПФРДоПредельнойВеличины =  СтруктураПроводки.СубконтоКТ2;			
					КонецЕсли; 
				Иначе	
					СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СчДТ_ПФРДоПредельнойВеличины   =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("7180281000551030000101115");
					Значение = Неопределено;
					Если СтруктураПроводки.Свойство("СтСтрахВзносы",Значение) Тогда
						СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоДТ1_ПФРДоПредельнойВеличины = Справочники.ПрочиеДоходыИРасходы.НайтиПоНаименованию(Значение);	
					Иначе	
						СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоДТ1_ПФРДоПредельнойВеличины = Справочники.ПрочиеДоходыИРасходы.ПустаяСсылка();	
					КонецЕсли; 
					Если ЗначениеЗаполнено(СтруктураПроводки.СубконтоДТ2)  Тогда
						СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоДТ2_ПФРДоПредельнойВеличины = СтруктураПроводки.СубконтоДТ2;
					Иначе
						Значение = Неопределено;
						Если СтруктураПроводки.Свойство("ProcessCode",Значение) Тогда
							СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоДТ2_ПФРДоПредельнойВеличины = Справочники.БНФОСубконто.НайтиПоНаименованию(Значение);	
						Иначе	
							СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоДТ2_ПФРДоПредельнойВеличины =Справочники.БНФОСубконто.ПустаяСсылка();	
						КонецЕсли; 	
					КонецЕсли; 
				КонецЕсли; 
				Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Резерв по бонусам_полугодовой"  или СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Резервы по бонусам" Тогда
					СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_Сумму_В_ВР_ПФРДоПредельнойВеличины = Истина;
					СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СчКТ_ПФРДоПредельнойВеличины  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6033581000000000000000000");
				Иначе
					СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СчКТ_ПФРДоПредельнойВеличины  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6033581000000000061010160");
				КонецЕсли; 
				СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоКТ1_ПФРДоПредельнойВеличины = Перечисления.ВидыПлатежейВГосБюджет.Налог; // статья доходов расходов
			КонецЕсли; 
			
			
		КонецЕсли;
		#КонецОбласти
		
		//
		#Область ПФРСПревышения  
		Если СтрокаЗП.ПФРСПревышения <> 0 Тогда
			НоваяЗапись = НаборЗаписей.Добавить(); 
			НоваяЗапись.Активность = Истина;
			НоваяЗапись.Организация = ЭтотОбъект.Организация;
			НоваяЗапись.Период = Конецмесяца(ЭтотОбъект.ПериодРегистрации);
			НоваяЗапись.Регистратор = ЭтотОбъект.Ссылка;
			НоваяЗапись.Сумма = СтрокаЗП.ПФРСПревышения;
			
			Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Отпуск из резерва" или СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "КомпенсацияОтпускаПриУвольнении;71802<01111 Компенсация отпуска при увольнении по календарным дням;;><;пп.25, ст.255 НК РФ>" Тогда
				НоваяЗапись.СчетАналитическогоУчетаДт  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6033581000000000000100000");
				НоваяЗапись.СчетДт = НоваяЗапись.СчетАналитическогоУчетаДт.Владелец;
				Если СтруктураПроводки.Свойство("СубконтоКт2") Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 2, СтруктураПроводки.СубконтоКТ2); // process code			
				КонецЕсли; 
			ИначеЕсли СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Бонусы из резерва" or СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Бонусы из резерва_полугодовой" Тогда
				НоваяЗапись.СчетАналитическогоУчетаДт  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6033581000000000000000000");
				НоваяЗапись.СчетДт = НоваяЗапись.СчетАналитическогоУчетаДт.Владелец;
				Если СтруктураПроводки.Свойство("СубконтоКт2") Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 2, СтруктураПроводки.СубконтоКТ2); // process code			
				КонецЕсли; 
			Иначе	
				НоваяЗапись.СчетАналитическогоУчетаДт  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("7180281000551030000101115");
				НоваяЗапись.СчетДт = НоваяЗапись.СчетАналитическогоУчетаДт.Владелец;
				Значение = Неопределено;
				Если СтруктураПроводки.Свойство("СтСтрахВзносы",Значение) Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 1,Справочники.ПрочиеДоходыИРасходы.НайтиПоНаименованию(Значение));	
				Иначе	
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 1,Справочники.ПрочиеДоходыИРасходы.ПустаяСсылка());	
				КонецЕсли; 
				Если ЗначениеЗаполнено(СтруктураПроводки.СубконтоДТ2)  Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 2,СтруктураПроводки.СубконтоДТ2);
				Иначе
					Значение = Неопределено;
					Если СтруктураПроводки.Свойство("ProcessCode",Значение) Тогда
						БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 2,Справочники.БНФОСубконто.НайтиПоНаименованию(Значение));	
					Иначе	
						БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 2,Справочники.БНФОСубконто.ПустаяСсылка());	
					КонецЕсли; 	
				КонецЕсли; 
			КонецЕсли; 
			
			
			Значение = Неопределено;
			
			
			Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Резерв по бонусам_полугодовой"  или СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Резервы по бонусам" Тогда
				НоваяЗапись.СчетАналитическогоУчетаКт  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6033581000000000000000000");
			Иначе
				НоваяЗапись.СчетАналитическогоУчетаКт  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6033581000000000061010160");
			КонецЕсли; 
			
			НоваяЗапись.СчетКт = НоваяЗапись.СчетАналитическогоУчетаКт.Владелец;
			БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 1, Перечисления.ВидыПлатежейВГосБюджет.Налог); // статья доходов расходов
			
			Если НоваяЗапись.СчетДт.УчетПоПодразделениям Тогда
				НоваяЗапись.ПодразделениеДт  =  Подразделение;//СтрокаЗП.Подразделение;
			КонецЕсли; 
			
			Если НоваяЗапись.СчетКт.УчетПоПодразделениям Тогда
				НоваяЗапись.ПодразделениеКт  =  Подразделение;//СтрокаЗП.Подразделение;
			КонецЕсли; 
			
			
			Если НоваяЗапись.СчетДт.НалоговыйУчет Тогда
				Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Резерв по бонусам_полугодовой"  или СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Резервы по бонусам" Тогда
					НоваяЗапись.СуммаВРДт = СтрокаЗП.ПФРСПревышения;
				Иначе
					НоваяЗапись.СуммаНУДт = СтрокаЗП.ПФРСПревышения;
				КонецЕсли; 	
			КонецЕсли; 
			
			Если НоваяЗапись.СчетКт.НалоговыйУчет Тогда
				Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Резерв по бонусам_полугодовой"  или СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Резервы по бонусам" Тогда
					НоваяЗапись.СуммаВРКт = СтрокаЗП.ПФРСПревышения;
				Иначе
					НоваяЗапись.СуммаНУКт = СтрокаЗП.ПФРСПревышения;
				КонецЕсли; 	
			КонецЕсли;
			
			
			ОписаниеПроводок.Добавить("Начисления строка "+НомерстрокиЗП+ "ПФРСПревышения. Сумма " + СтрокаЗП.ПФРСПревышения); 
			
			
			Если Перезаполнить Тогда
				Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Отпуск из резерва" или СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "КомпенсацияОтпускаПриУвольнении;71802<01111 Компенсация отпуска при увольнении по календарным дням;;><;пп.25, ст.255 НК РФ>" Тогда
					СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СчДТ_ПФРСПревышения  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6033581000000000000100000");
					Если СтруктураПроводки.Свойство("СубконтоКт2") Тогда
						СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоДТ2_ПФРСПревышения =  СтруктураПроводки.СубконтоКТ2; // process code			
					КонецЕсли; 
				ИначеЕсли СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Бонусы из резерва" or СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Бонусы из резерва_полугодовой" Тогда
					СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СчДТ_ПФРСПревышеният  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6033581000000000000000000");
					Если СтруктураПроводки.Свойство("СубконтоКт2") Тогда
						СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоДТ2_ПФРСПревышения =  СтруктураПроводки.СубконтоКТ2;			
					КонецЕсли; 
				Иначе	
					СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СчДТ_ПФРСПревышения   =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("7180281000551030000101115");
					Значение = Неопределено;
					Если СтруктураПроводки.Свойство("СтСтрахВзносы",Значение) Тогда
						СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоДТ1_ПФРСПревышения = Справочники.ПрочиеДоходыИРасходы.НайтиПоНаименованию(Значение);	
					Иначе	
						СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоДТ1_ПФРСПревышения = Справочники.ПрочиеДоходыИРасходы.ПустаяСсылка();	
					КонецЕсли; 
					Если ЗначениеЗаполнено(СтруктураПроводки.СубконтоДТ2)  Тогда
						СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоДТ2_ПФРСПревышения = СтруктураПроводки.СубконтоДТ2;
					Иначе
						Значение = Неопределено;
						Если СтруктураПроводки.Свойство("ProcessCode",Значение) Тогда
							СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоДТ2_ПФРСПревышения = Справочники.БНФОСубконто.НайтиПоНаименованию(Значение);	
						Иначе	
							СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоДТ2_ПФРСПревышения =Справочники.БНФОСубконто.ПустаяСсылка();	
						КонецЕсли; 	
					КонецЕсли; 
				КонецЕсли; 
				Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Резерв по бонусам_полугодовой"  или СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Резервы по бонусам" Тогда
					СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_Сумму_В_ВР_ПФРСПревышения = Истина;
					СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СчКТ_ПФРСПревышения  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6033581000000000000000000");
				Иначе
					СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СчКТ_ПФРСПревышения  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6033581000000000061010160");
				КонецЕсли; 
				СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоКТ1_ПФРСПревышения = Перечисления.ВидыПлатежейВГосБюджет.Налог; // статья доходов расходов
			КонецЕсли; 
			
			
			
		КонецЕсли;
		#КонецОбласти
		
		//*
		#Область ФСС  
		Если СтрокаЗП.ФСС  <> 0 Тогда
			НоваяЗапись = НаборЗаписей.Добавить(); 
			НоваяЗапись.Активность = Истина;
			НоваяЗапись.Организация = ЭтотОбъект.Организация;
			НоваяЗапись.Период = Конецмесяца(ЭтотОбъект.ПериодРегистрации);
			НоваяЗапись.Регистратор = ЭтотОбъект.Ссылка;
			НоваяЗапись.Сумма = СтрокаЗП.ФСС;
			
			Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Отпуск из резерва" или СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "КомпенсацияОтпускаПриУвольнении;71802<01111 Компенсация отпуска при увольнении по календарным дням;;><;пп.25, ст.255 НК РФ>" Тогда
				НоваяЗапись.СчетАналитическогоУчетаДт  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6033581000000000000100000");
				НоваяЗапись.СчетДт = НоваяЗапись.СчетАналитическогоУчетаДт.Владелец;
				Если СтруктураПроводки.Свойство("СубконтоКт2") Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 2, СтруктураПроводки.СубконтоКТ2); // process code			
				КонецЕсли; 
			ИначеЕсли СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Бонусы из резерва" or СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Бонусы из резерва_полугодовой" Тогда
				НоваяЗапись.СчетАналитическогоУчетаДт  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6033581000000000000000000");
				НоваяЗапись.СчетДт = НоваяЗапись.СчетАналитическогоУчетаДт.Владелец;
				Если СтруктураПроводки.Свойство("СубконтоКт2") Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 2, СтруктураПроводки.СубконтоКТ2); // process code			
				КонецЕсли; 
			Иначе	
				НоваяЗапись.СчетАналитическогоУчетаДт  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("7180281000551030000101115");
				НоваяЗапись.СчетДт = НоваяЗапись.СчетАналитическогоУчетаДт.Владелец;
				Значение = Неопределено;
				Если СтруктураПроводки.Свойство("СтСтрахВзносы",Значение) Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 1,Справочники.ПрочиеДоходыИРасходы.НайтиПоНаименованию(Значение));	
				Иначе	
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 1,Справочники.ПрочиеДоходыИРасходы.ПустаяСсылка());	
				КонецЕсли; 
				Если ЗначениеЗаполнено(СтруктураПроводки.СубконтоДТ2)  Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 2,СтруктураПроводки.СубконтоДТ2);
				Иначе
					Значение = Неопределено;
					Если СтруктураПроводки.Свойство("ProcessCode",Значение) Тогда
						БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 2,Справочники.БНФОСубконто.НайтиПоНаименованию(Значение));	
					Иначе	
						БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 2,Справочники.БНФОСубконто.ПустаяСсылка());	
					КонецЕсли; 	
				КонецЕсли; 
			КонецЕсли; 
			
			
			Значение = Неопределено;
			
			
			Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Резерв по бонусам_полугодовой"  или СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Резервы по бонусам" Тогда
				НоваяЗапись.СчетАналитическогоУчетаКт  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6033581000000000000000000");
			Иначе
				НоваяЗапись.СчетАналитическогоУчетаКт  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6033581000000000071010160");
			КонецЕсли; 
			
			НоваяЗапись.СчетКт = НоваяЗапись.СчетАналитическогоУчетаКт.Владелец;
			БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 1, Перечисления.ВидыПлатежейВГосБюджет.Налог); // статья доходов расходов
			
			Если НоваяЗапись.СчетДт.УчетПоПодразделениям Тогда
				НоваяЗапись.ПодразделениеДт  =  Подразделение;//СтрокаЗП.Подразделение;
			КонецЕсли; 
			
			Если НоваяЗапись.СчетКт.УчетПоПодразделениям Тогда
				НоваяЗапись.ПодразделениеКт  =  Подразделение;//СтрокаЗП.Подразделение;
			КонецЕсли; 
			
			
			
			
			Если НоваяЗапись.СчетДт.НалоговыйУчет Тогда
				Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Резерв по бонусам_полугодовой"  или СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Резервы по бонусам" Тогда
					НоваяЗапись.СуммаВРДт = СтрокаЗП.ФСС;
				Иначе
					НоваяЗапись.СуммаНУДт = СтрокаЗП.ФСС;
				КонецЕсли; 	
			КонецЕсли; 
			
			Если НоваяЗапись.СчетКт.НалоговыйУчет Тогда
				Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Резерв по бонусам_полугодовой"  или СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Резервы по бонусам" Тогда
					НоваяЗапись.СуммаВРКт = СтрокаЗП.ФСС;
				Иначе
					НоваяЗапись.СуммаНУКт = СтрокаЗП.ФСС;
				КонецЕсли; 	
			КонецЕсли;
			
			
			Если Перезаполнить Тогда
				Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Отпуск из резерва" или СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "КомпенсацияОтпускаПриУвольнении;71802<01111 Компенсация отпуска при увольнении по календарным дням;;><;пп.25, ст.255 НК РФ>" Тогда
					СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СчДТ_ФСС  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6033581000000000000100000");
					Если СтруктураПроводки.Свойство("СубконтоКт2") Тогда
						СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоДТ2_ФСС =  СтруктураПроводки.СубконтоКТ2; // process code			
					КонецЕсли; 
				ИначеЕсли СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Бонусы из резерва" or СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Бонусы из резерва_полугодовой" Тогда
					СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СчДТ_ФССт  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6033581000000000000000000");
					Если СтруктураПроводки.Свойство("СубконтоКт2") Тогда
						СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоДТ2_ФСС =  СтруктураПроводки.СубконтоКТ2;			
					КонецЕсли; 
				Иначе	
					СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СчДТ_ФСС   =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("7180281000551030000101115");
					Значение = Неопределено;
					Если СтруктураПроводки.Свойство("СтСтрахВзносы",Значение) Тогда
						СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоДТ1_ФСС = Справочники.ПрочиеДоходыИРасходы.НайтиПоНаименованию(Значение);	
					Иначе	
						СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоДТ1_ФСС = Справочники.ПрочиеДоходыИРасходы.ПустаяСсылка();	
					КонецЕсли; 
					Если ЗначениеЗаполнено(СтруктураПроводки.СубконтоДТ2)  Тогда
						СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоДТ2_ФСС = СтруктураПроводки.СубконтоДТ2;
					Иначе
						Значение = Неопределено;
						Если СтруктураПроводки.Свойство("ProcessCode",Значение) Тогда
							СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоДТ2_ФСС = Справочники.БНФОСубконто.НайтиПоНаименованию(Значение);	
						Иначе	
							СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоДТ2_ФСС =Справочники.БНФОСубконто.ПустаяСсылка();	
						КонецЕсли; 	
					КонецЕсли; 
				КонецЕсли; 
				Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Резерв по бонусам_полугодовой"  или СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Резервы по бонусам" Тогда
					СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_Сумму_В_ВР_ФСС = Истина;
					СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СчКТ_ФСС  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6033581000000000000000000");
				Иначе
					СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СчКТ_ФСС  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6033581000000000061010160");
				КонецЕсли; 
				СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоКТ1_ФСС = Перечисления.ВидыПлатежейВГосБюджет.Налог; // статья доходов расходов
			КонецЕсли;
			
			ОписаниеПроводок.Добавить("Начисления строка "+НомерстрокиЗП+ "ФСС. Сумма " + СтрокаЗП.ФСС); 
			
		КонецЕсли;
		#КонецОбласти
		
		
		#Область ФССНесчастныеСлучаи  
		Если СтрокаЗП.ФССНесчастныеСлучаи  <> 0 Тогда
			НоваяЗапись = НаборЗаписей.Добавить(); 
			НоваяЗапись.Активность = Истина;
			НоваяЗапись.Организация = ЭтотОбъект.Организация;
			НоваяЗапись.Период = Конецмесяца(ЭтотОбъект.ПериодРегистрации);
			НоваяЗапись.Регистратор = ЭтотОбъект.Ссылка;
			НоваяЗапись.Сумма = СтрокаЗП.ФССНесчастныеСлучаи;
			
			Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Отпуск из резерва" или СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "КомпенсацияОтпускаПриУвольнении;71802<01111 Компенсация отпуска при увольнении по календарным дням;;><;пп.25, ст.255 НК РФ>" Тогда
				НоваяЗапись.СчетАналитическогоУчетаДт  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6033581000000000000100000");
				НоваяЗапись.СчетДт = НоваяЗапись.СчетАналитическогоУчетаДт.Владелец;
				Если СтруктураПроводки.Свойство("СубконтоКт2") Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 2, СтруктураПроводки.СубконтоКТ2); // process code			
				КонецЕсли; 
			ИначеЕсли СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Бонусы из резерва" or СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Бонусы из резерва_полугодовой" Тогда
				НоваяЗапись.СчетАналитическогоУчетаДт  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6033581000000000000000000");
				НоваяЗапись.СчетДт = НоваяЗапись.СчетАналитическогоУчетаДт.Владелец;
				Если СтруктураПроводки.Свойство("СубконтоКт2") Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 2, СтруктураПроводки.СубконтоКТ2); // process code			
				КонецЕсли; 
			Иначе	
				НоваяЗапись.СчетАналитическогоУчетаДт  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("7180281000551030000101115");
				НоваяЗапись.СчетДт = НоваяЗапись.СчетАналитическогоУчетаДт.Владелец;
				Значение = Неопределено;
				Если СтруктураПроводки.Свойство("СтСтрахВзносы",Значение) Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 1,Справочники.ПрочиеДоходыИРасходы.НайтиПоНаименованию(Значение));	
				Иначе	
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 1,Справочники.ПрочиеДоходыИРасходы.ПустаяСсылка());	
				КонецЕсли; 
				Если ЗначениеЗаполнено(СтруктураПроводки.СубконтоДТ2)  Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 2,СтруктураПроводки.СубконтоДТ2);
				Иначе
					Значение = Неопределено;
					Если СтруктураПроводки.Свойство("ProcessCode",Значение) Тогда
						БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 2,Справочники.БНФОСубконто.НайтиПоНаименованию(Значение));	
					Иначе	
						БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 2,Справочники.БНФОСубконто.ПустаяСсылка());	
					КонецЕсли; 	
				КонецЕсли; 
			КонецЕсли; 
			
			
			Значение = Неопределено;
			
			
			Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Резерв по бонусам_полугодовой"  или СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Резервы по бонусам" Тогда
				НоваяЗапись.СчетАналитическогоУчетаКт  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6033581000000000000000000");
			Иначе
				НоваяЗапись.СчетАналитическогоУчетаКт  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6033581000000000071000160");
			КонецЕсли;                                                                                          
			
			НоваяЗапись.СчетКт = НоваяЗапись.СчетАналитическогоУчетаКт.Владелец;
			БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 1, Перечисления.ВидыПлатежейВГосБюджет.Налог); // статья доходов расходов
			
			Если НоваяЗапись.СчетДт.УчетПоПодразделениям Тогда
				НоваяЗапись.ПодразделениеДт  =  Подразделение;//СтрокаЗП.Подразделение;
			КонецЕсли; 
			
			Если НоваяЗапись.СчетКт.УчетПоПодразделениям Тогда
				НоваяЗапись.ПодразделениеКт  =  Подразделение;//СтрокаЗП.Подразделение;
			КонецЕсли; 
			
			Если НоваяЗапись.СчетДт.НалоговыйУчет Тогда
				Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Резерв по бонусам_полугодовой"  или СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Резервы по бонусам" Тогда
					НоваяЗапись.СуммаВРДт = СтрокаЗП.ФССНесчастныеСлучаи;
				Иначе
					НоваяЗапись.СуммаНУДт = СтрокаЗП.ФССНесчастныеСлучаи;
				КонецЕсли; 	
			КонецЕсли; 
			
			Если НоваяЗапись.СчетКт.НалоговыйУчет Тогда
				Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Резерв по бонусам_полугодовой"  или СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Резервы по бонусам" Тогда
					НоваяЗапись.СуммаВРКт = СтрокаЗП.ФССНесчастныеСлучаи;
				Иначе
					НоваяЗапись.СуммаНУКт = СтрокаЗП.ФССНесчастныеСлучаи;
				КонецЕсли; 	
			КонецЕсли;
			
			
			ОписаниеПроводок.Добавить("Начисления строка "+НомерстрокиЗП+ "ФССНесчастныеСлучаи. Сумма " + СтрокаЗП.ФССНесчастныеСлучаи); 
			
			
			Если Перезаполнить Тогда
				Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Отпуск из резерва" или СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "КомпенсацияОтпускаПриУвольнении;71802<01111 Компенсация отпуска при увольнении по календарным дням;;><;пп.25, ст.255 НК РФ>" Тогда
					СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СчДТ_ФССНесчастныеСлучаи  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6033581000000000000100000");
					Если СтруктураПроводки.Свойство("СубконтоКт2") Тогда
						СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоДТ2_ФССНесчастныеСлучаи =  СтруктураПроводки.СубконтоКТ2; // process code			
					КонецЕсли; 
				ИначеЕсли СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Бонусы из резерва" or СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Бонусы из резерва_полугодовой" Тогда
					СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СчДТ_ФССНесчастныеСлучаит  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6033581000000000000000000");
					Если СтруктураПроводки.Свойство("СубконтоКт2") Тогда
						СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоДТ2_ФССНесчастныеСлучаи =  СтруктураПроводки.СубконтоКТ2;			
					КонецЕсли; 
				Иначе	
					СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СчДТ_ФССНесчастныеСлучаи   =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("7180281000551030000101115");
					Значение = Неопределено;
					Если СтруктураПроводки.Свойство("СтСтрахВзносы",Значение) Тогда
						СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоДТ1_ФССНесчастныеСлучаи = Справочники.ПрочиеДоходыИРасходы.НайтиПоНаименованию(Значение);	
					Иначе	
						СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоДТ1_ФССНесчастныеСлучаи = Справочники.ПрочиеДоходыИРасходы.ПустаяСсылка();	
					КонецЕсли; 
					Если ЗначениеЗаполнено(СтруктураПроводки.СубконтоДТ2)  Тогда
						СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоДТ2_ФССНесчастныеСлучаи = СтруктураПроводки.СубконтоДТ2;
					Иначе
						Значение = Неопределено;
						Если СтруктураПроводки.Свойство("ProcessCode",Значение) Тогда
							СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоДТ2_ФССНесчастныеСлучаи = Справочники.БНФОСубконто.НайтиПоНаименованию(Значение);	
						Иначе	
							СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоДТ2_ФССНесчастныеСлучаи =Справочники.БНФОСубконто.ПустаяСсылка();	
						КонецЕсли; 	
					КонецЕсли; 
				КонецЕсли; 
				Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Резерв по бонусам_полугодовой"  или СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Резервы по бонусам" Тогда
					СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_Сумму_В_ВР_ФССНесчастныеСлучаи = Истина;
					СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СчКТ_ФССНесчастныеСлучаи  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6033581000000000000000000");
				Иначе
					СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СчКТ_ФССНесчастныеСлучаи  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6033581000000000061010160");
				КонецЕсли; 
				СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоКТ1_ФССНесчастныеСлучаи = Перечисления.ВидыПлатежейВГосБюджет.Налог; // статья доходов расходов
			КонецЕсли;
			
			
			
		КонецЕсли;
		#КонецОбласти
		
		
		#Область ФФОМС  
		Если СтрокаЗП.ФФОМС  <> 0 Тогда
			НоваяЗапись = НаборЗаписей.Добавить(); 
			НоваяЗапись.Активность = Истина;
			НоваяЗапись.Организация = ЭтотОбъект.Организация;
			НоваяЗапись.Период = Конецмесяца(ЭтотОбъект.ПериодРегистрации);
			НоваяЗапись.Регистратор = ЭтотОбъект.Ссылка;
			НоваяЗапись.Сумма = СтрокаЗП.ФФОМС;
			
			Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Отпуск из резерва" или СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "КомпенсацияОтпускаПриУвольнении;71802<01111 Компенсация отпуска при увольнении по календарным дням;;><;пп.25, ст.255 НК РФ>" Тогда
				НоваяЗапись.СчетАналитическогоУчетаДт  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6033581000000000000100000");
				НоваяЗапись.СчетДт = НоваяЗапись.СчетАналитическогоУчетаДт.Владелец;
				Если СтруктураПроводки.Свойство("СубконтоКт2") Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 2, СтруктураПроводки.СубконтоКТ2); // process code			
				КонецЕсли; 
			ИначеЕсли СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Бонусы из резерва" or СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Бонусы из резерва_полугодовой" Тогда
				НоваяЗапись.СчетАналитическогоУчетаДт  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6033581000000000000000000");
				НоваяЗапись.СчетДт = НоваяЗапись.СчетАналитическогоУчетаДт.Владелец;
				Если СтруктураПроводки.Свойство("СубконтоКт2") Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 2, СтруктураПроводки.СубконтоКТ2); // process code			
				КонецЕсли; 
			Иначе	
				НоваяЗапись.СчетАналитическогоУчетаДт  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("7180281000551030000101115");
				НоваяЗапись.СчетДт = НоваяЗапись.СчетАналитическогоУчетаДт.Владелец;
				Значение = Неопределено;
				Если СтруктураПроводки.Свойство("СтСтрахВзносы",Значение) Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 1,Справочники.ПрочиеДоходыИРасходы.НайтиПоНаименованию(Значение));	
				Иначе	
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 1,Справочники.ПрочиеДоходыИРасходы.ПустаяСсылка());	
				КонецЕсли; 
				Если ЗначениеЗаполнено(СтруктураПроводки.СубконтоДТ2)  Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 2,СтруктураПроводки.СубконтоДТ2);
				Иначе
					Значение = Неопределено;
					Если СтруктураПроводки.Свойство("ProcessCode",Значение) Тогда
						БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 2,Справочники.БНФОСубконто.НайтиПоНаименованию(Значение));	
					Иначе	
						БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 2,Справочники.БНФОСубконто.ПустаяСсылка());	
					КонецЕсли; 	
				КонецЕсли; 
			КонецЕсли; 
			
			
			Значение = Неопределено;
			
			
			Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Резерв по бонусам_полугодовой"  или СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Резервы по бонусам" Тогда
				НоваяЗапись.СчетАналитическогоУчетаКт  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6033581000000000000000000");
			Иначе
				НоваяЗапись.СчетАналитическогоУчетаКт  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6033581000000000081013160");
			КонецЕсли; 
			
			НоваяЗапись.СчетКт = НоваяЗапись.СчетАналитическогоУчетаКт.Владелец;
			БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 1, Перечисления.ВидыПлатежейВГосБюджет.Налог); // статья доходов расходов
			
			Если НоваяЗапись.СчетДт.УчетПоПодразделениям Тогда
				НоваяЗапись.ПодразделениеДт  =  Подразделение;//СтрокаЗП.Подразделение;
			КонецЕсли; 
			
			Если НоваяЗапись.СчетКт.УчетПоПодразделениям Тогда
				НоваяЗапись.ПодразделениеКт  =  Подразделение;//СтрокаЗП.Подразделение;
			КонецЕсли; 
			
			Если НоваяЗапись.СчетДт.НалоговыйУчет Тогда
				Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Резерв по бонусам_полугодовой"  или СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Резервы по бонусам" Тогда
					НоваяЗапись.СуммаВРДт = СтрокаЗП.ФФОМС;
				Иначе
					НоваяЗапись.СуммаНУДт = СтрокаЗП.ФФОМС;
				КонецЕсли; 	
			КонецЕсли; 
			
			Если НоваяЗапись.СчетКт.НалоговыйУчет Тогда
				Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Резерв по бонусам_полугодовой"  или СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Резервы по бонусам" Тогда
					НоваяЗапись.СуммаВРКт = СтрокаЗП.ФФОМС;
				Иначе
					НоваяЗапись.СуммаНУКт = СтрокаЗП.ФФОМС;
				КонецЕсли; 	
			КонецЕсли;
			
			
			
			Если Перезаполнить Тогда
				Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Отпуск из резерва" или СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "КомпенсацияОтпускаПриУвольнении;71802<01111 Компенсация отпуска при увольнении по календарным дням;;><;пп.25, ст.255 НК РФ>" Тогда
					СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СчДТ_ФФОМС  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6033581000000000000100000");
					Если СтруктураПроводки.Свойство("СубконтоКт2") Тогда
						СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоДТ2_ФФОМС =  СтруктураПроводки.СубконтоКТ2; // process code			
					КонецЕсли; 
				ИначеЕсли СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Бонусы из резерва" or СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Бонусы из резерва_полугодовой" Тогда
					СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СчДТ_ФФОМСт  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6033581000000000000000000");
					Если СтруктураПроводки.Свойство("СубконтоКт2") Тогда
						СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоДТ2_ФФОМС =  СтруктураПроводки.СубконтоКТ2;			
					КонецЕсли; 
				Иначе	
					СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СчДТ_ФФОМС   =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("7180281000551030000101115");
					Значение = Неопределено;
					Если СтруктураПроводки.Свойство("СтСтрахВзносы",Значение) Тогда
						СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоДТ1_ФФОМС = Справочники.ПрочиеДоходыИРасходы.НайтиПоНаименованию(Значение);	
					Иначе	
						СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоДТ1_ФФОМС = Справочники.ПрочиеДоходыИРасходы.ПустаяСсылка();	
					КонецЕсли; 
					Если ЗначениеЗаполнено(СтруктураПроводки.СубконтоДТ2)  Тогда
						СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоДТ2_ФФОМС = СтруктураПроводки.СубконтоДТ2;
					Иначе
						Значение = Неопределено;
						Если СтруктураПроводки.Свойство("ProcessCode",Значение) Тогда
							СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоДТ2_ФФОМС = Справочники.БНФОСубконто.НайтиПоНаименованию(Значение);	
						Иначе	
							СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоДТ2_ФФОМС =Справочники.БНФОСубконто.ПустаяСсылка();	
						КонецЕсли; 	
					КонецЕсли; 
				КонецЕсли; 
				Если СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Резерв по бонусам_полугодовой"  или СтрокаЗП.СпособОтраженияЗарплатыВБухучете.Наименование = "Резервы по бонусам" Тогда
					СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_Сумму_В_ВР_ФФОМС = Истина;
					СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СчКТ_ФФОМС  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6033581000000000000000000");
				Иначе
					СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СчКТ_ФФОМС  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6033581000000000061010160");
				КонецЕсли; 
				СпособОтраженияЗарплатыВБухучетеОбъект.pcru_ex_СубконтоКТ1_ФФОМС = Перечисления.ВидыПлатежейВГосБюджет.Налог; // статья доходов расходов
			КонецЕсли;
			
			
			ОписаниеПроводок.Добавить("Начисления строка "+НомерстрокиЗП+ "ФФОМС. Сумма " + СтрокаЗП.ФФОМС); 
			
		КонецЕсли;
		
		//Если НоваяЗапись.СчетАналитическогоУчетаДт.Код = "7180281001551130000001431" или НоваяЗапись.СчетАналитическогоУчетаДт.Код = "7180281001551010000101113" Тогда
		//	НоваяЗапись.СуммаПРДт = СтрокаИзДокумента.Сумма;
		//Иначе
		//КонецЕсли;		
		//
		Если Перезаполнить Тогда
			СпособОтраженияЗарплатыВБухучетеОбъект.Записать();
		КонецЕсли; 
		
	КонецЦикла;
	#КонецОбласти
	
	#КонецОбласти
	
	#Область ндфл 
	НомерстрокиЗП = 0;
	Для каждого СтрокаЗП Из ЭтотОбъект.НачисленныйНДФЛ Цикл
		НомерстрокиЗП = НомерстрокиЗП + 1;
		НоваяЗапись = НаборЗаписей.Добавить(); 
		НоваяЗапись.Активность = Истина;
		НоваяЗапись.Организация = ЭтотОбъект.Организация;
		НоваяЗапись.Период = Конецмесяца(ЭтотОбъект.ПериодРегистрации);
		НоваяЗапись.Регистратор = ЭтотОбъект.Ссылка;
		НоваяЗапись.Сумма = СтрокаЗП.Сумма;
		// получаем структуру проводок		
		
		Если СтрокаЗП.ВидОперации = Перечисления.ВидыОперацийПоЗарплате.НДФЛ Тогда
			Подразделение = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ первые 1
			|	ПодразделенияОрганизацийДополнительныеРеквизиты.Ссылка КАК Подразделение,
			|   ПодразделенияОрганизацийДополнительныеРеквизиты.Значение КАК СчетАналитическогоУчетаКт,
			|   ПодразделенияОрганизацийДополнительныеРеквизиты.Ссылка.РегистрацияВНалоговомОргане как РегистрацияВНалоговомОргане
			|ИЗ
			|	Справочник.ПодразделенияОрганизаций.ДополнительныеРеквизиты КАК ПодразделенияОрганизацийДополнительныеРеквизиты
			|ГДЕ
			|	ПодразделенияОрганизацийДополнительныеРеквизиты.Ссылка.РегистрацияВНалоговомОргане.Код = &Код
			|	И ПодразделенияОрганизацийДополнительныеРеквизиты.Ссылка.РегистрацияВНалоговомОргане.КодПоОКТМО = &КодПоОКТМО
			//|	И ПодразделенияОрганизацийДополнительныеРеквизиты.Ссылка.РегистрацияВНалоговомОргане.КодПоОКАТО = &КодПоОКАТО
			|	И ПодразделенияОрганизацийДополнительныеРеквизиты.Ссылка.КПП = &КПП
			|	И ПодразделенияОрганизацийДополнительныеРеквизиты.Ссылка.РегистрацияВНалоговомОргане.КПП = &КПП
			|	И ПодразделенияОрганизацийДополнительныеРеквизиты.Свойство.Заголовок = ""НДФЛ ЗУП""";
			Запрос.УстановитьПараметр("Код",СтрокаЗП.КодНалоговогоОргана );
			Запрос.УстановитьПараметр("КодПоОКТМО",СтрокаЗП.КодПоОКТМО );
			Запрос.УстановитьПараметр("КПП", СтрокаЗП.КПП);
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				НоваяЗапись.СчетАналитическогоУчетаКт  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду(Выборка.СчетАналитическогоУчетаКт);
				НоваяЗапись.СчетКт = НоваяЗапись.СчетАналитическогоУчетаКт.Владелец;
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 1, Перечисления.ВидыПлатежейВГосБюджет.Налог); // статья доходов расходов
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 2, Выборка.РегистрацияВНалоговомОргане); // process code			
				Подразделение = Выборка.Подразделение;
			Иначе	
				//				НоваяЗапись.СчетАналитическогоУчетаКт  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6030181000100000000020000");
				НоваяЗапись.СчетАналитическогоУчетаКт  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6030181000100000003800000");
				НоваяЗапись.СчетКт = НоваяЗапись.СчетАналитическогоУчетаКт.Владелец;
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 1, Перечисления.ВидыПлатежейВГосБюджет.Налог); // статья доходов расходов
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 2, Справочники.ПодразделенияОрганизаций.НайтиПоНаименованию("2.00.00 CEO/АДМИНИСТРАЦИЯ").РегистрацияВНалоговомОргане); // process code			
				Подразделение = Справочники.ПодразделенияОрганизаций.НайтиПоНаименованию("2.00.00 CEO/АДМИНИСТРАЦИЯ");
			КонецЕсли; 
			
			НоваяЗапись.СчетАналитическогоУчетаДт  =  справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6030581001000000000000000");	
			НоваяЗапись.СчетДт = НоваяЗапись.СчетАналитическогоУчетаДт.Владелец;
			
			Если НоваяЗапись.СчетДт.УчетПоПодразделениям Тогда
				НоваяЗапись.ПодразделениеДт  =  Подразделение;
			КонецЕсли; 
			
			Если НоваяЗапись.СчетКт.УчетПоПодразделениям Тогда
				НоваяЗапись.ПодразделениеКт  =  Подразделение;
			КонецЕсли; 
			
			Если НоваяЗапись.СчетДт.НалоговыйУчет Тогда
				НоваяЗапись.СуммаНУДт = СтрокаЗП.Сумма;
			КонецЕсли; 
			
			Если НоваяЗапись.СчетКт.НалоговыйУчет Тогда
				НоваяЗапись.СуммаНУКт = СтрокаЗП.Сумма;
			КонецЕсли; 
		КонецЕсли; 	
		
		
		Если СтрокаЗП.ВидОперации = Перечисления.ВидыОперацийПоЗарплате.НДФЛДоходыКонтрагентов Тогда
			Подразделение = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ первые 1
			|	ПодразделенияОрганизацийДополнительныеРеквизиты.Ссылка КАК Подразделение,
			|   ПодразделенияОрганизацийДополнительныеРеквизиты.Значение КАК СчетАналитическогоУчетаКт,
			|   ПодразделенияОрганизацийДополнительныеРеквизиты.Ссылка.РегистрацияВНалоговомОргане как РегистрацияВНалоговомОргане
			|ИЗ
			|	Справочник.ПодразделенияОрганизаций.ДополнительныеРеквизиты КАК ПодразделенияОрганизацийДополнительныеРеквизиты
			|ГДЕ
			|	ПодразделенияОрганизацийДополнительныеРеквизиты.Ссылка.РегистрацияВНалоговомОргане.Код = &Код
			|	И ПодразделенияОрганизацийДополнительныеРеквизиты.Ссылка.РегистрацияВНалоговомОргане.КодПоОКТМО = &КодПоОКТМО
			//|	И ПодразделенияОрганизацийДополнительныеРеквизиты.Ссылка.РегистрацияВНалоговомОргане.КодПоОКАТО = &КодПоОКАТО
			|	И ПодразделенияОрганизацийДополнительныеРеквизиты.Ссылка.РегистрацияВНалоговомОргане.КПП = &КПП
			|	И ПодразделенияОрганизацийДополнительныеРеквизиты.Свойство.Заголовок = ""НДФЛ ЗУП""";
			Запрос.УстановитьПараметр("Код",СтрокаЗП.КодНалоговогоОргана );
			Запрос.УстановитьПараметр("КодПоОКТМО",СтрокаЗП.КодПоОКТМО );
			Запрос.УстановитьПараметр("КПП", СтрокаЗП.КПП);
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				НоваяЗапись.СчетАналитическогоУчетаКт  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду(Выборка.СчетАналитическогоУчетаКт);
				НоваяЗапись.СчетКт = НоваяЗапись.СчетАналитическогоУчетаКт.Владелец;
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 1, Перечисления.ВидыПлатежейВГосБюджет.Налог); // статья доходов расходов
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 2, Выборка.РегистрацияВНалоговомОргане); // process code			
				Подразделение = Выборка.Подразделение;
			Иначе	
				НоваяЗапись.СчетАналитическогоУчетаКт  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6030181000100000000020000");
				НоваяЗапись.СчетКт = НоваяЗапись.СчетАналитическогоУчетаКт.Владелец;
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 1, Перечисления.ВидыПлатежейВГосБюджет.Налог); // статья доходов расходов
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 2, Справочники.ПодразделенияОрганизаций.НайтиПоНаименованию("2.00.00 CEO/АДМИНИСТРАЦИЯ").РегистрацияВНалоговомОргане); // process code			
				Подразделение = Справочники.ПодразделенияОрганизаций.НайтиПоНаименованию("2.00.00 CEO/АДМИНИСТРАЦИЯ");
			КонецЕсли; 
			
			Счет = pcru_УМФО.ПолучитьСчетПоАналитике("60312",Справочники.Контрагенты.НайтиПоНаименованию(строка(СтрокаЗП.ФизическоеЛицо)));
			Если  не ЗначениеЗаполнено(Счет)  Тогда
				Счет  =  справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6030681001000000000000000");	
			КонецЕсли; 
			НоваяЗапись.СчетАналитическогоУчетаДт  =  Счет;	
			НоваяЗапись.СчетДт = НоваяЗапись.СчетАналитическогоУчетаДт.Владелец;
			
			Если НоваяЗапись.СчетДт.УчетПоПодразделениям Тогда
				НоваяЗапись.ПодразделениеДт  =  Подразделение;
			КонецЕсли; 
			
			Если НоваяЗапись.СчетКт.УчетПоПодразделениям Тогда
				НоваяЗапись.ПодразделениеКт  =  Подразделение;
			КонецЕсли; 
			
			Если НоваяЗапись.СчетДт.НалоговыйУчет Тогда
				НоваяЗапись.СуммаНУДт = СтрокаЗП.Сумма;
			КонецЕсли; 
			
			Если НоваяЗапись.СчетКт.НалоговыйУчет Тогда
				НоваяЗапись.СуммаНУКт = СтрокаЗП.Сумма;
			КонецЕсли; 
		КонецЕсли;
		
		ОписаниеПроводок.Добавить("Ндфл строка "+НомерстрокиЗП+ " Сумма " + СтрокаЗП.Сумма); 
		
		//
		//Если НоваяЗапись.СчетАналитическогоУчетаДт.Код = "7180281001551130000001431" или НоваяЗапись.СчетАналитическогоУчетаДт.Код = "7180281001551010000101113" Тогда
		//	НоваяЗапись.СуммаПРДт = СтрокаИзДокумента.Сумма;
		//Иначе
		//КонецЕсли;		
		//
		
		
	КонецЦикла;
	
	#КонецОбласти
	
	#Область УдержаннаяЗарплата   
	Для каждого СтрокаЗП Из ЭтотОбъект.УдержаннаяЗарплата Цикл
		НоваяЗапись = НаборЗаписей.Добавить(); 
		НоваяЗапись.Активность = Истина;
		НоваяЗапись.Организация = ЭтотОбъект.Организация;
		НоваяЗапись.Период = Конецмесяца(ЭтотОбъект.ПериодРегистрации);
		НоваяЗапись.Регистратор = ЭтотОбъект.Ссылка;
		НоваяЗапись.Сумма = СтрокаЗП.Сумма;
		// получаем структуру проводок		
		Если СтрокаЗП.ВидОперации = Перечисления.ВидыОперацийПоЗарплате.АлиментыПрочиеИсполнительныеЛисты Тогда
			
			НоваяЗапись.СчетАналитическогоУчетаДт  =  справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6030681001000000000000000");	
			НоваяЗапись.СчетДт = НоваяЗапись.СчетАналитическогоУчетаДт.Владелец;
			
			НоваяЗапись.СчетАналитическогоУчетаКт  =  pcru_УМФО.ПолучитьСчетПоАналитике("60322",СтрокаЗП.Контрагент);
			НоваяЗапись.СчетКт = НоваяЗапись.СчетАналитическогоУчетаКт.Владелец;
			БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 1, СтрокаЗП.Контрагент); // статья доходов расходов
			//		БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 2, Выборка.РегистрацияВНалоговомОргане); // process code			
			// Справочники.ДоговорыКонтрагентов.
			
			Если НоваяЗапись.СчетДт.УчетПоПодразделениям Тогда
				НоваяЗапись.ПодразделениеДт  =  СтрокаЗП.Подразделение;           
			КонецЕсли; 
			
			Если НоваяЗапись.СчетКт.УчетПоПодразделениям Тогда
				НоваяЗапись.ПодразделениеКт  =  СтрокаЗП.Подразделение;
			КонецЕсли; 
			
			Если НоваяЗапись.СчетДт.НалоговыйУчет Тогда
				НоваяЗапись.СуммаНУДт = СтрокаЗП.Сумма;
			КонецЕсли; 
			
			Если НоваяЗапись.СчетКт.НалоговыйУчет Тогда
				НоваяЗапись.СуммаНУКт = СтрокаЗП.Сумма;
			КонецЕсли; 
		КонецЕсли; 	
		
		
		Если СтрокаЗП.ВидОперации = Перечисления.ВидыОперацийПоЗарплате.УдержаниеПоПрочимОперациямСРаботниками или СтрокаЗП.ВидОперации = Перечисления.ВидыОперацийПоЗарплате.УдержаниеНеизрасходованныхПодотчетныхСумм Тогда
			НоваяЗапись.СчетАналитическогоУчетаДт  =  справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6030681001000000000000000");	
			НоваяЗапись.СчетДт = НоваяЗапись.СчетАналитическогоУчетаДт.Владелец;
			БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 1, СтрокаЗП.ФизическоеЛицо); // статья доходов расходов
			
			НоваяЗапись.СчетАналитическогоУчетаКт  =  pcru_УМФО.ПолучитьСчетПоАналитике("60308",СтрокаЗП.ФизическоеЛицо);
			НоваяЗапись.СчетКт = НоваяЗапись.СчетАналитическогоУчетаКт.Владелец;
			БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 1, СтрокаЗП.ФизическоеЛицо); // статья доходов расходов
			//		БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 2, Выборка.РегистрацияВНалоговомОргане); // process code			
			
			
			Если НоваяЗапись.СчетДт.УчетПоПодразделениям Тогда
				НоваяЗапись.ПодразделениеДт  =  СтрокаЗП.Подразделение;
			КонецЕсли; 
			
			Если НоваяЗапись.СчетКт.УчетПоПодразделениям Тогда
				НоваяЗапись.ПодразделениеКт  =  СтрокаЗП.Подразделение;
			КонецЕсли; 
			
			Если НоваяЗапись.СчетДт.НалоговыйУчет Тогда
				НоваяЗапись.СуммаНУДт = СтрокаЗП.Сумма;
			КонецЕсли; 
			
			Если НоваяЗапись.СчетКт.НалоговыйУчет Тогда
				НоваяЗапись.СуммаНУКт = СтрокаЗП.Сумма;
			КонецЕсли; 
			
			
			Если не ЗначениеЗаполнено(НоваяЗапись.СчетКт)  Тогда
				сообщить("Строка удержаний"+Строка(СтрокаЗП.НомерСтроки)+"не обработана - для физлитца" +СТрока(СтрокаЗП.ФизическоеЛицо)+ "не открыт счет 60308!"); 
				
				Отказ = Истина;
				Возврат;
				
				
			КонецЕсли; 
			
		КонецЕсли;
		
		
		//
		//Если НоваяЗапись.СчетАналитическогоУчетаДт.Код = "7180281001551130000001431" или НоваяЗапись.СчетАналитическогоУчетаДт.Код = "7180281001551010000101113" Тогда
		//	НоваяЗапись.СуммаПРДт = СтрокаИзДокумента.Сумма;
		//Иначе
		//КонецЕсли;		
		//
		
		ОписаниеПроводок.Добавить("Удержания строка "+СтрокаЗП.НомерСтроки+ " Сумма " + СтрокаЗП.Сумма); 
		
	КонецЦикла;
	#КонецОбласти
	
	попытка
		НаборЗаписей.Записать(Истина);
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		
		т1 = СтрЗаменить(СтрЗаменить(ТекстОшибки,Символы.ПС,""),"Номер строки: ",Символы.ПС);
		т2 = СтрПолучитьСтроку(т1,2);
		т3 = СтрЗаменить(т2,")",Символы.ПС);
		
		НомерС = Число( СтрЗаменить(Сокрлп(СтрПолучитьСтроку(т3,1)),Символы.НПП,"") );
		
		ТекстОшибки = ОписаниеПроводок[НомерС]+ Символы.ПС + ТекстОшибки;	
		Сообщить(ТекстОшибки,СтатусСообщения.ОченьВажное);
	Конецпопытки;
	//	Номер строки: 1579)
	
	//ПродолжитьВызов(Отказ, РежимПроведения);
КонецПроцедуры

&Вместо("ОбработкаПроведения")
Процедура pcru_ex_ОбработкаПроведения_NEW(Отказ, РежимПроведения)
	
	НаборЗаписей = РегистрыБухгалтерии.БНФОБанковский.СоздатьНаборЗаписей(); 
	НаборЗаписей.Отбор.Регистратор.Установить(ЭтотОбъект.Ссылка);
	НаборЗаписей.Прочитать();                                                                                         
	НаборЗаписей.Очистить();
	
	Если не ЭтотОбъект.ЗарплатаОтраженаВБухучете Тогда
		НаборЗаписей.Записать(Истина);
		Возврат;
	КонецЕсли;
	
	ОписаниеПроводок = Новый Массив;	
	НомерстрокиЗП = 0;
	
	#Область ЗП 
	Для каждого СтрокаЗП Из ЭтотОбъект.НачисленнаяЗарплатаИВзносы Цикл
		НомерстрокиЗП = НомерстрокиЗП +1;
		
		Если  СтрокаЗП.ВидОперации = Перечисления.ВидыОперацийПоЗарплате.РасходыПоСтрахованиюФСС Тогда
			СтрокаЗП.СпособОтраженияЗарплатыВБухучете = Справочники.СпособыОтраженияЗарплатыВБухУчете.НайтиПоНаименованию("ОплатаЗаСчетФСС;60335<Налог (взносы): начислено / уплачено;;>60305<;>");
		КонецЕсли; 
		
		
		Если  СтрокаЗП.ВидОперации = Перечисления.ВидыОперацийПоЗарплате.ВыплатыБывшимСотрудникам Тогда
			СтрокаЗП.СпособОтраженияЗарплатыВБухучете = Справочники.СпособыОтраженияЗарплатыВБухУчете.НайтиПоНаименованию("ВыплатаВыходногоПособия;71802<01111 Расходы по выплате выходных пособий;;>60305<;пп.9, ст.255 НК РФ>");
		КонецЕсли; 
		
		
		// получаем структуру проводок	
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СчДТ_ОСН КАК pcru_ex_СчДТ_ОСН,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СчКТ_ОСН КАК pcru_ex_СчКТ_ОСН,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СчДТ_ПФРДоПредельнойВеличины КАК pcru_ex_СчДТ_ПФРДоПредельнойВеличины,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СчДТ_ПФРСПревышения КАК pcru_ex_СчДТ_ПФРСПревышения,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СчДТ_ФСС КАК pcru_ex_СчДТ_ФСС,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СчДТ_ФССНесчастныеСлучаи КАК pcru_ex_СчДТ_ФССНесчастныеСлучаи,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СчДТ_ФФОМС КАК pcru_ex_СчДТ_ФФОМС,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СчКТ_ПФРДоПредельнойВеличины КАК pcru_ex_СчКТ_ПФРДоПредельнойВеличины,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СчКТ_ПФРСПревышения КАК pcru_ex_СчКТ_ПФРСПревышения,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СчКТ_ФСС КАК pcru_ex_СчКТ_ФСС,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СчКТ_ФССНесчастныеСлучаи КАК pcru_ex_СчКТ_ФССНесчастныеСлучаи,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СчКТ_ФФОМС КАК pcru_ex_СчКТ_ФФОМС,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СубконтоДТ1_ОСН КАК pcru_ex_СубконтоДТ1_ОСН,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СубконтоДТ2_ОСН КАК pcru_ex_СубконтоДТ2_ОСН,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СубконтоДТ3_ОСН КАК pcru_ex_СубконтоДТ3_ОСН,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СубконтоКТ1_ОСН КАК pcru_ex_СубконтоКТ1_ОСН,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СубконтоКТ2_ОСН КАК pcru_ex_СубконтоКТ2_ОСН,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СубконтоКТ3_ОСН КАК pcru_ex_СубконтоКТ3_ОСН,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СубконтоДТ1_ПФРДоПредельнойВеличины КАК pcru_ex_СубконтоДТ1_ПФРДоПредельнойВеличины,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СубконтоДТ1_ПФРСПревышения КАК pcru_ex_СубконтоДТ1_ПФРСПревышения,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СубконтоДТ1_ФСС КАК pcru_ex_СубконтоДТ1_ФСС,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СубконтоДТ1_ФССНесчастныеСлучаи КАК pcru_ex_СубконтоДТ1_ФССНесчастныеСлучаи,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СубконтоДТ1_ФФОМС КАК pcru_ex_СубконтоДТ1_ФФОМС,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СубконтоДТ2_ПФРДоПредельнойВеличины КАК pcru_ex_СубконтоДТ2_ПФРДоПредельнойВеличины,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СубконтоДТ2_ПФРСПревышения КАК pcru_ex_СубконтоДТ2_ПФРСПревышения,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СубконтоДТ2_ФСС КАК pcru_ex_СубконтоДТ2_ФСС,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СубконтоДТ2_ФССНесчастныеСлучаи КАК pcru_ex_СубконтоДТ2_ФССНесчастныеСлучаи,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СубконтоДТ2_ФФОМС КАК pcru_ex_СубконтоДТ2_ФФОМС,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СубконтоДТ3_ПФРДоПредельнойВеличины КАК pcru_ex_СубконтоДТ3_ПФРДоПредельнойВеличины,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СубконтоДТ3_ПФРСПревышения КАК pcru_ex_СубконтоДТ3_ПФРСПревышения,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СубконтоДТ3_ФСС КАК pcru_ex_СубконтоДТ3_ФСС,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СубконтоДТ3_ФССНесчастныеСлучаи КАК pcru_ex_СубконтоДТ3_ФССНесчастныеСлучаи,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СубконтоДТ3_ФФОМС КАК pcru_ex_СубконтоДТ3_ФФОМС,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СубконтоКТ1_ПФРДоПредельнойВеличины КАК pcru_ex_СубконтоКТ1_ПФРДоПредельнойВеличины,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СубконтоКТ1_ПФРСПревышения КАК pcru_ex_СубконтоКТ1_ПФРСПревышения,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СубконтоКТ1_ФСС КАК pcru_ex_СубконтоКТ1_ФСС,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СубконтоКТ1_ФССНесчастныеСлучаи КАК pcru_ex_СубконтоКТ1_ФССНесчастныеСлучаи,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СубконтоКТ1_ФФОМС КАК pcru_ex_СубконтоКТ1_ФФОМС,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СубконтоКТ2_ПФРДоПредельнойВеличины КАК pcru_ex_СубконтоКТ2_ПФРДоПредельнойВеличины,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СубконтоКТ2_ПФРСПревышения КАК pcru_ex_СубконтоКТ2_ПФРСПревышения,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СубконтоКТ2_ФСС КАК pcru_ex_СубконтоКТ2_ФСС,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СубконтоКТ2_ФССНесчастныеСлучаи КАК pcru_ex_СубконтоКТ2_ФССНесчастныеСлучаи,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СубконтоКТ2_ФФОМС КАК pcru_ex_СубконтоКТ2_ФФОМС,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СубконтоКТ3_ПФРДоПредельнойВеличины КАК pcru_ex_СубконтоКТ3_ПФРДоПредельнойВеличины,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СубконтоКТ3_ПФРСПревышения КАК pcru_ex_СубконтоКТ3_ПФРСПревышения,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СубконтоКТ3_ФСС КАК pcru_ex_СубконтоКТ3_ФСС,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СубконтоКТ3_ФССНесчастныеСлучаи КАК pcru_ex_СубконтоКТ3_ФССНесчастныеСлучаи,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_СубконтоКТ3_ФФОМС КАК pcru_ex_СубконтоКТ3_ФФОМС,
		//Дт
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_Сумму_В_ВР_ОСН_Дт КАК pcru_ex_Сумму_В_ВР_ОСН_Дт,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_Сумму_В_ПР_ОСН_Дт КАК pcru_ex_Сумму_В_ПР_ОСН_Дт,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_Сумму_В_НУ_ОСН_Дт КАК pcru_ex_Сумму_В_НУ_ОСН_Дт,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_Сумму_В_ВР_ПФРДоПредельнойВеличины_Дт КАК pcru_ex_Сумму_В_ВР_ПФРДоПредельнойВеличины_Дт,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_Сумму_В_ПР_ПФРДоПредельнойВеличины_Дт КАК pcru_ex_Сумму_В_ПР_ПФРДоПредельнойВеличины_Дт,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_Сумму_В_НУ_ПФРДоПредельнойВеличины_Дт КАК pcru_ex_Сумму_В_НУ_ПФРДоПредельнойВеличины_Дт,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_Сумму_В_ВР_ПФРСПревышения_Дт КАК pcru_ex_Сумму_В_ВР_ПФРСПревышения_Дт,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_Сумму_В_ПР_ПФРСПревышения_Дт КАК pcru_ex_Сумму_В_ПР_ПФРСПревышения_Дт,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_Сумму_В_НУ_ПФРСПревышения_Дт КАК pcru_ex_Сумму_В_НУ_ПФРСПревышения_Дт,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_Сумму_В_ВР_ФСС_Дт КАК pcru_ex_Сумму_В_ВР_ФСС_Дт,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_Сумму_В_ПР_ФСС_Дт КАК pcru_ex_Сумму_В_ПР_ФСС_Дт,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_Сумму_В_НУ_ФСС_Дт КАК pcru_ex_Сумму_В_НУ_ФСС_Дт,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_Сумму_В_ВР_ФССНесчастныеСлучаи_Дт КАК pcru_ex_Сумму_В_ВР_ФССНесчастныеСлучаи_Дт,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_Сумму_В_ПР_ФССНесчастныеСлучаи_Дт КАК pcru_ex_Сумму_В_ПР_ФССНесчастныеСлучаи_Дт,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_Сумму_В_НУ_ФССНесчастныеСлучаи_Дт КАК pcru_ex_Сумму_В_НУ_ФССНесчастныеСлучаи_Дт,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_Сумму_В_ВР_ФФОМС_Дт КАК pcru_ex_Сумму_В_ВР_ФФОМС_Дт,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_Сумму_В_ПР_ФФОМС_Дт КАК pcru_ex_Сумму_В_ПР_ФФОМС_Дт,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_Сумму_В_НУ_ФФОМС_Дт КАК pcru_ex_Сумму_В_НУ_ФФОМС_Дт,
		//Кт
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_Сумму_В_ВР_ОСН_Кт КАК pcru_ex_Сумму_В_ВР_ОСН_Кт,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_Сумму_В_ПР_ОСН_Кт КАК pcru_ex_Сумму_В_ПР_ОСН_Кт,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_Сумму_В_НУ_ОСН_Кт КАК pcru_ex_Сумму_В_НУ_ОСН_Кт,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_Сумму_В_ВР_ПФРДоПредельнойВеличины_Кт КАК pcru_ex_Сумму_В_ВР_ПФРДоПредельнойВеличины_Кт,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_Сумму_В_ПР_ПФРДоПредельнойВеличины_Кт КАК pcru_ex_Сумму_В_ПР_ПФРДоПредельнойВеличины_Кт,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_Сумму_В_НУ_ПФРДоПредельнойВеличины_Кт КАК pcru_ex_Сумму_В_НУ_ПФРДоПредельнойВеличины_Кт,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_Сумму_В_ВР_ПФРСПревышения_Кт КАК pcru_ex_Сумму_В_ВР_ПФРСПревышения_Кт,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_Сумму_В_ПР_ПФРСПревышения_Кт КАК pcru_ex_Сумму_В_ПР_ПФРСПревышения_Кт,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_Сумму_В_НУ_ПФРСПревышения_Кт КАК pcru_ex_Сумму_В_НУ_ПФРСПревышения_Кт,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_Сумму_В_ВР_ФСС_Кт КАК pcru_ex_Сумму_В_ВР_ФСС_Кт,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_Сумму_В_ПР_ФСС_Кт КАК pcru_ex_Сумму_В_ПР_ФСС_Кт,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_Сумму_В_НУ_ФСС_Кт КАК pcru_ex_Сумму_В_НУ_ФСС_Кт,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_Сумму_В_ВР_ФССНесчастныеСлучаи_Кт КАК pcru_ex_Сумму_В_ВР_ФССНесчастныеСлучаи_Кт,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_Сумму_В_ПР_ФССНесчастныеСлучаи_Кт КАК pcru_ex_Сумму_В_ПР_ФССНесчастныеСлучаи_Кт,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_Сумму_В_НУ_ФССНесчастныеСлучаи_Кт КАК pcru_ex_Сумму_В_НУ_ФССНесчастныеСлучаи_Кт,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_Сумму_В_ВР_ФФОМС_Кт КАК pcru_ex_Сумму_В_ВР_ФФОМС_Кт,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_Сумму_В_ПР_ФФОМС_Кт КАК pcru_ex_Сумму_В_ПР_ФФОМС_Кт,
		|	СпособыОтраженияЗарплатыВБухУчете.pcru_ex_Сумму_В_НУ_ФФОМС_Кт КАК pcru_ex_Сумму_В_НУ_ФФОМС_Кт,
		|	СпособыОтраженияЗарплатыВБухУчете.ДополнительныеРеквизиты.(
		|		Ссылка КАК Ссылка,
		|		НомерСтроки КАК НомерСтроки
		|	) КАК ДополнительныеРеквизиты,
		|	СпособыОтраженияЗарплатыВБухУчете.Предопределенный КАК Предопределенный,
		|	СпособыОтраженияЗарплатыВБухУчете.ИмяПредопределенныхДанных КАК ИмяПредопределенныхДанных
		|ИЗ
		|	Справочник.СпособыОтраженияЗарплатыВБухУчете КАК СпособыОтраженияЗарплатыВБухУчете
		|ГДЕ
		|	СпособыОтраженияЗарплатыВБухУчете.Ссылка = &Ссылка";
		Запрос.УстановитьПараметр("Ссылка", СтрокаЗП.СпособОтраженияЗарплатыВБухучете );
		Выборка = Запрос.Выполнить().Выбрать();
		СтруктураПроводки = Новый Структура;
		Пока Выборка.Следующий() Цикл
			
			
			НеПриоритетно = Истина;
			
			Запрос8 = Новый Запрос;
			Запрос8.Текст = "ВЫБРАТЬ
			|	СпособыОтраженияЗарплатыВБухУчетеДополнительныеРеквизиты.Значение КАК Значение
			|ИЗ
			|	Справочник.СпособыОтраженияЗарплатыВБухУчете.ДополнительныеРеквизиты КАК СпособыОтраженияЗарплатыВБухУчетеДополнительныеРеквизиты
			|ГДЕ
			|	СпособыОтраженияЗарплатыВБухУчетеДополнительныеРеквизиты.Ссылка = &Ссылка
			|	И СпособыОтраженияЗарплатыВБухУчетеДополнительныеРеквизиты.Свойство.Заголовок = &Наименование";
			Запрос8.УстановитьПараметр("Ссылка",СтрокаЗП.СпособОтраженияЗарплатыВБухучете );
			Запрос8.УстановитьПараметр("Наименование", "ПриоритетПроцесскодаИзСпособаОтражения");
			Выборка8 = Запрос8.Выполнить().Выбрать();
			Пока Выборка8.Следующий() Цикл
				НеПриоритетно = не Выборка8.Значение;	
			КонецЦикла;
			
			#Область ОсновнаяЧасть		
			НоваяЗапись = НаборЗаписей.Добавить(); 
			НоваяЗапись.Активность = Истина;
			НоваяЗапись.Организация = ЭтотОбъект.Организация;
			НоваяЗапись.Период = Конецмесяца(ЭтотОбъект.ПериодРегистрации);
			НоваяЗапись.Регистратор = ЭтотОбъект.Ссылка;
			НоваяЗапись.Сумма = СтрокаЗП.Сумма;
			
			НоваяЗапись.СчетАналитическогоУчетаДт  =  Выборка.pcru_ex_СчДТ_ОСН;
			НоваяЗапись.СчетДт = НоваяЗапись.СчетАналитическогоУчетаДт.Владелец;
			
			Если ЗначениеЗаполнено(Выборка.pcru_ex_СубконтоДТ1_ОСН) Тогда
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 1, Выборка.pcru_ex_СубконтоДТ1_ОСН); // статья доходов расходов
			КонецЕсли; 
			
			Если ЗначениеЗаполнено(Выборка.pcru_ex_СубконтоДТ2_ОСН) Тогда
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 2, Выборка.pcru_ex_СубконтоДТ2_ОСН); // статья доходов расходов
			КонецЕсли; 
			
			Если ЗначениеЗаполнено(Выборка.pcru_ex_СубконтоДТ3_ОСН) Тогда
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 3, Выборка.pcru_ex_СубконтоДТ3_ОСН); // статья доходов расходов
			КонецЕсли; 
			
			Для каждого СубконтоСчета Из НоваяЗапись.СчетАналитическогоУчетаДт.Владелец.ВидыСубконто Цикл
				
				Если НеПриоритетно  Тогда
					Если СубконтоСчета.ВидСубконто.Идентификатор = "ProcessCode" Тогда
						
						БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, СтрокаЗП.Подразделение.pcru_ProcessCode); // статья доходов расходов
						
						Попытка
							Если СтрокаЗП.ProcessCode <> "" Тогда
								БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, pcru_УМФО.ПолучитьПК(СтрокаЗП.ProcessCode)); // статья доходов расходов
							КонецЕсли;
						Исключение
						КонецПопытки;
						
						Попытка
							Если Выборка.pcru_ex_СубконтоДТ1_ОСН.Наименование = "01431 Резерв на отпуск НЕ НБ" Тогда
								БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, Справочники.БНФОСубконто.НайтиПоНаименованию("9905-Support processes")); // статья доходов расходов
							КонецЕсли;
						Исключение
						КонецПопытки;
						
						Попытка
							Если Выборка.pcru_ex_СубконтоДТ1_ОСН.Наименование = "01113 Ежемесячное базовое вознаграждение членам Совета Директоров НЕ НБ" Тогда
								БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, Справочники.БНФОСубконто.НайтиПоНаименованию("9906-Company management")); // статья доходов расходов
							КонецЕсли;
						Исключение
						КонецПопытки;
					КонецЕсли;  
				КонецЕсли; 
				
				Если СубконтоСчета.ВидСубконто.Идентификатор = "ТипЗатрат" Тогда
					
					Если СокрЛП(СтрокаЗП.pcru_ex_ТипЗатрат) = "1" Тогда
						
						БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, Справочники.БНФОСубконто.НайтиПоНаименованию("Тип затрат 1"));
						
					КонецЕсли; 
					
					
					Если СокрЛП(СтрокаЗП.pcru_ex_ТипЗатрат) = "2" Тогда
						
						БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, Справочники.БНФОСубконто.НайтиПоНаименованию("Тип затрат 2"));
						
					КонецЕсли; 
					
					Если СокрЛП(СтрокаЗП.pcru_ex_ТипЗатрат) = "" Тогда
						
						БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, Справочники.БНФОСубконто.ПустаяСсылка());
						
					КонецЕсли; 
					
					
				КонецЕсли;  
				
				
			КонецЦикла;
			
			НоваяЗапись.СчетАналитическогоУчетаКт  =  Выборка.pcru_ex_СчКТ_ОСН;
			НоваяЗапись.СчетКт = НоваяЗапись.СчетАналитическогоУчетаКт.Владелец;
			
			Если ЗначениеЗаполнено(Выборка.pcru_ex_СубконтоКТ1_ОСН) Тогда
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 1, Выборка.pcru_ex_СубконтоКТ1_ОСН); // статья доходов расходов
			КонецЕсли; 
			Если ЗначениеЗаполнено(Выборка.pcru_ex_СубконтоКТ2_ОСН) Тогда
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 2, Выборка.pcru_ex_СубконтоКТ2_ОСН); // process code			
			КонецЕсли; 
			Если ЗначениеЗаполнено(Выборка.pcru_ex_СубконтоКТ3_ОСН)Тогда
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 3, Выборка.pcru_ex_СубконтоКТ3_ОСН); // process code			
			КонецЕсли; 
			
			Подразделение = СтрокаЗП.Подразделение;
			
			Если НоваяЗапись.СчетДт.УчетПоПодразделениям Тогда
				НоваяЗапись.ПодразделениеДт  =  Подразделение;//СтрокаЗП.Подразделение;
			КонецЕсли; 
			
			Если НоваяЗапись.СчетКт.УчетПоПодразделениям Тогда
				НоваяЗапись.ПодразделениеКт  =  Подразделение;//СтрокаЗП.Подразделение;
			КонецЕсли; 
			
			//ВР
			Если Выборка.pcru_ex_Сумму_В_ВР_ОСН_Дт Тогда
				НоваяЗапись.СуммаВРДт = СтрокаЗП.Сумма;
			КонецЕсли;
			Если Выборка.pcru_ex_Сумму_В_ВР_ОСН_Кт Тогда
				НоваяЗапись.СуммаВРКт = СтрокаЗП.Сумма;
			КонецЕсли;

			//ПР
			Если Выборка.pcru_ex_Сумму_В_ПР_ОСН_Дт Тогда
				НоваяЗапись.СуммаПРДт = СтрокаЗП.Сумма;
			КонецЕсли;
			Если Выборка.pcru_ex_Сумму_В_ПР_ОСН_Кт Тогда
				НоваяЗапись.СуммаПРКт = СтрокаЗП.Сумма;
			КонецЕсли;
			
			//НУ
			Если НЕ Выборка.pcru_ex_Сумму_В_ВР_ОСН_Дт И НЕ Выборка.pcru_ex_Сумму_В_ПР_ОСН_Дт Тогда
				Если Выборка.pcru_ex_Сумму_В_НУ_ОСН_Дт Тогда
					Если НоваяЗапись.СчетДт.НалоговыйУчет Тогда
						НоваяЗапись.СуммаНУДт = СтрокаЗП.Сумма;
					КонецЕсли; 
				КонецЕсли;
			КонецЕсли; 
			Если НЕ Выборка.pcru_ex_Сумму_В_ВР_ОСН_Кт И НЕ Выборка.pcru_ex_Сумму_В_ПР_ОСН_Кт Тогда
				Если Выборка.pcru_ex_Сумму_В_НУ_ОСН_Кт Тогда
					Если НоваяЗапись.СчетКт.НалоговыйУчет Тогда
						НоваяЗапись.СуммаНУКт = СтрокаЗП.Сумма;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли; 
			
			ОписаниеПроводок.Добавить("Начисления строка "+НомерстрокиЗП+ "Основная часть. Сумма " + СтрокаЗП.Сумма); 
			
			#КонецОбласти
			
			//*********************************************************************** 
			
			#Область ПФРДоПредельнойВеличины 
			Если СтрокаЗП.ПФРДоПредельнойВеличины  <> 0 Тогда
				НоваяЗапись = НаборЗаписей.Добавить(); 
				НоваяЗапись.Активность = Истина;
				НоваяЗапись.Организация = ЭтотОбъект.Организация;
				НоваяЗапись.Период = Конецмесяца(ЭтотОбъект.ПериодРегистрации);
				НоваяЗапись.Регистратор = ЭтотОбъект.Ссылка;
				НоваяЗапись.Сумма = СтрокаЗП.ПФРДоПредельнойВеличины;
				
				
				
				НоваяЗапись.СчетАналитическогоУчетаДт  =  Выборка.pcru_ex_СчДТ_ПФРДоПредельнойВеличины;
				НоваяЗапись.СчетДт = НоваяЗапись.СчетАналитическогоУчетаДт.Владелец;
				
				Если ЗначениеЗаполнено(Выборка.pcru_ex_СубконтоДТ1_ПФРДоПредельнойВеличины) Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 1, Выборка.pcru_ex_СубконтоДТ1_ПФРДоПредельнойВеличины); // статья доходов расходов
				КонецЕсли; 
				
				Если ЗначениеЗаполнено(Выборка.pcru_ex_СубконтоДТ2_ПФРДоПредельнойВеличины) Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 2, Выборка.pcru_ex_СубконтоДТ2_ПФРДоПредельнойВеличины); // статья доходов расходов
				КонецЕсли; 
				
				Если ЗначениеЗаполнено(Выборка.pcru_ex_СубконтоДТ3_ПФРДоПредельнойВеличины) Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 3, Выборка.pcru_ex_СубконтоДТ3_ПФРДоПредельнойВеличины); // статья доходов расходов
				КонецЕсли; 
				
				
		        Для каждого СубконтоСчета Из НоваяЗапись.СчетАналитическогоУчетаДт.Владелец.ВидыСубконто Цикл
				
					Если НеПриоритетно  Тогда
							Если СубконтоСчета.ВидСубконто.Идентификатор = "ProcessCode" Тогда
							
							БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, СтрокаЗП.Подразделение.pcru_ProcessCode); // статья доходов расходов
							
							Попытка
								Если СтрокаЗП.ProcessCode <> "" Тогда
									БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, pcru_УМФО.ПолучитьПК(СтрокаЗП.ProcessCode)); // статья доходов расходов
								КонецЕсли;
							Исключение
							КонецПопытки;
							
							Попытка
								Если Выборка.pcru_ex_СубконтоДТ1_ОСН.Наименование = "01431 Резерв на отпуск НЕ НБ" Тогда
									БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, Справочники.БНФОСубконто.НайтиПоНаименованию("9905-Support processes")); // статья доходов расходов
								КонецЕсли;
							Исключение
							КонецПопытки;
							
							Попытка
								Если Выборка.pcru_ex_СубконтоДТ1_ОСН.Наименование = "01113 Ежемесячное базовое вознаграждение членам Совета Директоров НЕ НБ" Тогда
									БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, Справочники.БНФОСубконто.НайтиПоНаименованию("9906-Company management")); // статья доходов расходов
								КонецЕсли;
							Исключение
							КонецПопытки;
						КонецЕсли;  
					КонецЕсли; 
					
					Если СубконтоСчета.ВидСубконто.Идентификатор = "ТипЗатрат" Тогда
						
						Если СокрЛП(СтрокаЗП.pcru_ex_ТипЗатрат) = "1" Тогда
							
							БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, Справочники.БНФОСубконто.НайтиПоНаименованию("Тип затрат 1"));
							
						КонецЕсли; 
						
						
						Если СокрЛП(СтрокаЗП.pcru_ex_ТипЗатрат) = "2" Тогда
							
							БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, Справочники.БНФОСубконто.НайтиПоНаименованию("Тип затрат 2"));
							
						КонецЕсли; 
						
						Если СокрЛП(СтрокаЗП.pcru_ex_ТипЗатрат) = "" Тогда
							
							БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, Справочники.БНФОСубконто.ПустаяСсылка());
							
						КонецЕсли; 
												
					КонецЕсли;  
						
				КонецЦикла;
				
				НоваяЗапись.СчетАналитическогоУчетаКт  =  Выборка.pcru_ex_СчКТ_ПФРДоПредельнойВеличины;
				НоваяЗапись.СчетКт = НоваяЗапись.СчетАналитическогоУчетаКт.Владелец;
				
				Если ЗначениеЗаполнено(Выборка.pcru_ex_СубконтоКТ1_ПФРДоПредельнойВеличины) Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 1, Выборка.pcru_ex_СубконтоКТ1_ПФРДоПредельнойВеличины); // статья доходов расходов
				КонецЕсли; 
				Если ЗначениеЗаполнено(Выборка.pcru_ex_СубконтоКТ2_ПФРДоПредельнойВеличины) Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 2, Выборка.pcru_ex_СубконтоКТ2_ПФРДоПредельнойВеличины); // process code			
				КонецЕсли; 
				Если ЗначениеЗаполнено(Выборка.pcru_ex_СубконтоКТ3_ПФРДоПредельнойВеличины)Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 3, Выборка.pcru_ex_СубконтоКТ3_ПФРДоПредельнойВеличины); // process code			
				КонецЕсли; 
							
				Подразделение = СтрокаЗП.Подразделение;
				
				Если НоваяЗапись.СчетДт.УчетПоПодразделениям Тогда
					НоваяЗапись.ПодразделениеДт  =  Подразделение;//СтрокаЗП.Подразделение;
				КонецЕсли; 
				
				Если НоваяЗапись.СчетКт.УчетПоПодразделениям Тогда
					НоваяЗапись.ПодразделениеКт  =  Подразделение;//СтрокаЗП.Подразделение;
				КонецЕсли; 
								
				//ВР
				Если Выборка.pcru_ex_Сумму_В_ВР_ПФРДоПредельнойВеличины_Дт Тогда
					НоваяЗапись.СуммаВРДт = СтрокаЗП.ПФРДоПредельнойВеличины;
				КонецЕсли;
				Если Выборка.pcru_ex_Сумму_В_ВР_ПФРДоПредельнойВеличины_Кт Тогда
					НоваяЗапись.СуммаВРКт = СтрокаЗП.ПФРДоПредельнойВеличины;
				КонецЕсли;

				//ПР
				Если Выборка.pcru_ex_Сумму_В_ПР_ПФРДоПредельнойВеличины_Дт Тогда
					НоваяЗапись.СуммаПРДт = СтрокаЗП.ПФРДоПредельнойВеличины;
				КонецЕсли;
				Если Выборка.pcru_ex_Сумму_В_ПР_ПФРДоПредельнойВеличины_Кт Тогда
					НоваяЗапись.СуммаПРКт = СтрокаЗП.ПФРДоПредельнойВеличины;
				КонецЕсли;
								
				//НУ
				Если Выборка.pcru_ex_Сумму_В_НУ_ПФРДоПредельнойВеличины_Дт Тогда
					Если НоваяЗапись.СчетДт.НалоговыйУчет Тогда
						НоваяЗапись.СуммаНУДт = СтрокаЗП.ПФРДоПредельнойВеличины;
					КонецЕсли;					
				КонецЕсли;
				Если Выборка.pcru_ex_Сумму_В_НУ_ПФРДоПредельнойВеличины_Кт Тогда
					Если НоваяЗапись.СчетКт.НалоговыйУчет Тогда
						НоваяЗапись.СуммаНУКт = СтрокаЗП.ПФРДоПредельнойВеличины;
					КонецЕсли;
				КонецЕсли;
				
				ОписаниеПроводок.Добавить("Начисления строка "+НомерстрокиЗП+ "ПФРДоПредельнойВеличины. Сумма " + СтрокаЗП.ПФРДоПредельнойВеличины); 
			КонецЕсли;
			
			#КонецОбласти
			
			//
			#Область ПФРСПревышения  
			Если СтрокаЗП.ПФРСПревышения <> 0 Тогда
				НоваяЗапись = НаборЗаписей.Добавить(); 
				НоваяЗапись.Активность = Истина;
				НоваяЗапись.Организация = ЭтотОбъект.Организация;
				НоваяЗапись.Период = Конецмесяца(ЭтотОбъект.ПериодРегистрации);
				НоваяЗапись.Регистратор = ЭтотОбъект.Ссылка;
				НоваяЗапись.Сумма = СтрокаЗП.ПФРСПревышения;
				
				НоваяЗапись.СчетАналитическогоУчетаДт  =  Выборка.pcru_ex_СчДТ_ПФРСПревышения;
				НоваяЗапись.СчетДт = НоваяЗапись.СчетАналитическогоУчетаДт.Владелец;
				
				Если ЗначениеЗаполнено(Выборка.pcru_ex_СубконтоДТ1_ПФРСПревышения) Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 1, Выборка.pcru_ex_СубконтоДТ1_ПФРСПревышения); // статья доходов расходов
				КонецЕсли; 
				
				Если ЗначениеЗаполнено(Выборка.pcru_ex_СубконтоДТ2_ПФРСПревышения) Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 2, Выборка.pcru_ex_СубконтоДТ2_ПФРСПревышения); // статья доходов расходов
				КонецЕсли; 
				
				Если ЗначениеЗаполнено(Выборка.pcru_ex_СубконтоДТ2_ПФРСПревышения) Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 3, Выборка.pcru_ex_СубконтоДТ2_ПФРСПревышения); // статья доходов расходов
				КонецЕсли; 
				
				Для каждого СубконтоСчета Из НоваяЗапись.СчетАналитическогоУчетаДт.Владелец.ВидыСубконто Цикл
				
					Если НеПриоритетно  Тогда
						Если СубконтоСчета.ВидСубконто.Идентификатор = "ProcessCode" Тогда
							
							БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, СтрокаЗП.Подразделение.pcru_ProcessCode); // статья доходов расходов
							
							Попытка
								Если СтрокаЗП.ProcessCode <> "" Тогда
									БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, pcru_УМФО.ПолучитьПК(СтрокаЗП.ProcessCode)); // статья доходов расходов
								КонецЕсли;
							Исключение
							КонецПопытки;
							
							Попытка
								Если Выборка.pcru_ex_СубконтоДТ1_ОСН.Наименование = "01431 Резерв на отпуск НЕ НБ" Тогда
									БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, Справочники.БНФОСубконто.НайтиПоНаименованию("9905-Support processes")); // статья доходов расходов
								КонецЕсли;
							Исключение
							КонецПопытки;
							
							Попытка
								Если Выборка.pcru_ex_СубконтоДТ1_ОСН.Наименование = "01113 Ежемесячное базовое вознаграждение членам Совета Директоров НЕ НБ" Тогда
									БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, Справочники.БНФОСубконто.НайтиПоНаименованию("9906-Company management")); // статья доходов расходов
								КонецЕсли;
							Исключение
							КонецПопытки;
						КонецЕсли;  
					КонецЕсли; 
					
					Если СубконтоСчета.ВидСубконто.Идентификатор = "ТипЗатрат" Тогда
						
						Если СокрЛП(СтрокаЗП.pcru_ex_ТипЗатрат) = "1" Тогда
							
							БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, Справочники.БНФОСубконто.НайтиПоНаименованию("Тип затрат 1"));
							
						КонецЕсли; 
						
						
						Если СокрЛП(СтрокаЗП.pcru_ex_ТипЗатрат) = "2" Тогда
							
							БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, Справочники.БНФОСубконто.НайтиПоНаименованию("Тип затрат 2"));
							
						КонецЕсли; 
						
						Если СокрЛП(СтрокаЗП.pcru_ex_ТипЗатрат) = "" Тогда
							
							БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, Справочники.БНФОСубконто.ПустаяСсылка());
							
						КонецЕсли; 
						
						
					КонецЕсли;  
					
					
				КонецЦикла;

				НоваяЗапись.СчетАналитическогоУчетаКт  =  Выборка.pcru_ex_СчКТ_ПФРСПревышения;
				НоваяЗапись.СчетКт = НоваяЗапись.СчетАналитическогоУчетаКт.Владелец;
				
				Если ЗначениеЗаполнено(Выборка.pcru_ex_СубконтоКТ1_ПФРСПревышения) Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 1, Выборка.pcru_ex_СубконтоКТ1_ПФРСПревышения); // статья доходов расходов
				КонецЕсли; 
				Если ЗначениеЗаполнено(Выборка.pcru_ex_СубконтоКТ2_ПФРСПревышения) Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 2, Выборка.pcru_ex_СубконтоКТ2_ПФРСПревышения); // process code			
				КонецЕсли; 
				Если ЗначениеЗаполнено(Выборка.pcru_ex_СубконтоКТ3_ПФРСПревышения)Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 3, Выборка.pcru_ex_СубконтоКТ3_ПФРСПревышения); // process code			
				КонецЕсли; 
				
				
				Подразделение = СтрокаЗП.Подразделение;
				
				Если НоваяЗапись.СчетДт.УчетПоПодразделениям Тогда
					НоваяЗапись.ПодразделениеДт  =  Подразделение;//СтрокаЗП.Подразделение;
				КонецЕсли; 
				
				Если НоваяЗапись.СчетКт.УчетПоПодразделениям Тогда
					НоваяЗапись.ПодразделениеКт  =  Подразделение;//СтрокаЗП.Подразделение;
				КонецЕсли; 
				
				//ВР
				Если Выборка.pcru_ex_Сумму_В_ВР_ПФРСПревышения_Дт Тогда
					НоваяЗапись.СуммаВРДт = СтрокаЗП.ПФРСПревышения;
				КонецЕсли;
				Если Выборка.pcru_ex_Сумму_В_ВР_ПФРСПревышения_Кт Тогда
					НоваяЗапись.СуммаВРКт = СтрокаЗП.ПФРСПревышения;
				КонецЕсли;

				//ПР
				Если Выборка.pcru_ex_Сумму_В_ПР_ПФРСПревышения_Дт Тогда
					НоваяЗапись.СуммаПРДт = СтрокаЗП.ПФРСПревышения;
				КонецЕсли;
				Если Выборка.pcru_ex_Сумму_В_ПР_ПФРСПревышения_Кт Тогда
					НоваяЗапись.СуммаПРКт = СтрокаЗП.ПФРСПревышения;
				КонецЕсли;
				
				//НУ
				Если Выборка.pcru_ex_Сумму_В_НУ_ПФРСПревышения_Дт Тогда
					Если НоваяЗапись.СчетДт.НалоговыйУчет Тогда
						НоваяЗапись.СуммаНУДт = СтрокаЗП.ПФРСПревышения;
					КонецЕсли; 
				КонецЕсли;
				Если Выборка.pcru_ex_Сумму_В_НУ_ПФРСПревышения_Кт Тогда
					Если НоваяЗапись.СчетКт.НалоговыйУчет Тогда
						НоваяЗапись.СуммаНУКт = СтрокаЗП.ПФРСПревышения;
					КонецЕсли;
				КонецЕсли;
								
				ОписаниеПроводок.Добавить("Начисления строка "+НомерстрокиЗП+ "ПФРСПревышения. Сумма " + СтрокаЗП.ПФРСПревышения); 
			КонецЕсли;
			#КонецОбласти
			
			//*
			#Область ФСС  
			Если СтрокаЗП.ФСС  <> 0 Тогда
				НоваяЗапись = НаборЗаписей.Добавить(); 
				НоваяЗапись.Активность = Истина;
				НоваяЗапись.Организация = ЭтотОбъект.Организация;
				НоваяЗапись.Период = Конецмесяца(ЭтотОбъект.ПериодРегистрации);
				НоваяЗапись.Регистратор = ЭтотОбъект.Ссылка;
				НоваяЗапись.Сумма = СтрокаЗП.ФСС;
				
				
				НоваяЗапись.СчетАналитическогоУчетаДт  =  Выборка.pcru_ex_СчДТ_ФСС;
				НоваяЗапись.СчетДт = НоваяЗапись.СчетАналитическогоУчетаДт.Владелец;
				
				Если ЗначениеЗаполнено(Выборка.pcru_ex_СубконтоДТ1_ФСС) Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 1, Выборка.pcru_ex_СубконтоДТ1_ФСС); // статья доходов расходов
				КонецЕсли; 
				
				Если ЗначениеЗаполнено(Выборка.pcru_ex_СубконтоДТ2_ФСС) Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 2, Выборка.pcru_ex_СубконтоДТ2_ФСС); // статья доходов расходов
				КонецЕсли; 
				
				Если ЗначениеЗаполнено(Выборка.pcru_ex_СубконтоДТ2_ФСС) Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 3, Выборка.pcru_ex_СубконтоДТ2_ФСС); // статья доходов расходов
				КонецЕсли; 
				
				 Для каждого СубконтоСчета Из НоваяЗапись.СчетАналитическогоУчетаДт.Владелец.ВидыСубконто Цикл
				
					Если НеПриоритетно  Тогда
						Если СубконтоСчета.ВидСубконто.Идентификатор = "ProcessCode" Тогда
							
							БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, СтрокаЗП.Подразделение.pcru_ProcessCode); // статья доходов расходов
							
							Попытка
								Если СтрокаЗП.ProcessCode <> "" Тогда
									БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, pcru_УМФО.ПолучитьПК(СтрокаЗП.ProcessCode)); // статья доходов расходов
								КонецЕсли;
							Исключение
							КонецПопытки;
							
							Попытка
								Если Выборка.pcru_ex_СубконтоДТ1_ОСН.Наименование = "01431 Резерв на отпуск НЕ НБ" Тогда
									БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, Справочники.БНФОСубконто.НайтиПоНаименованию("9905-Support processes")); // статья доходов расходов
								КонецЕсли;
							Исключение
							КонецПопытки;
							
							Попытка
								Если Выборка.pcru_ex_СубконтоДТ1_ОСН.Наименование = "01113 Ежемесячное базовое вознаграждение членам Совета Директоров НЕ НБ" Тогда
									БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, Справочники.БНФОСубконто.НайтиПоНаименованию("9906-Company management")); // статья доходов расходов
								КонецЕсли;
							Исключение
							КонецПопытки;
						КонецЕсли;  
					КонецЕсли; 
					
					Если СубконтоСчета.ВидСубконто.Идентификатор = "ТипЗатрат" Тогда
						
						Если СокрЛП(СтрокаЗП.pcru_ex_ТипЗатрат) = "1" Тогда
							
							БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, Справочники.БНФОСубконто.НайтиПоНаименованию("Тип затрат 1"));
							
						КонецЕсли; 
						
						
						Если СокрЛП(СтрокаЗП.pcru_ex_ТипЗатрат) = "2" Тогда
							
							БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, Справочники.БНФОСубконто.НайтиПоНаименованию("Тип затрат 2"));
							
						КонецЕсли; 
						
						Если СокрЛП(СтрокаЗП.pcru_ex_ТипЗатрат) = "" Тогда
							
							БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, Справочники.БНФОСубконто.ПустаяСсылка());
							
						КонецЕсли; 
						
						
					КонецЕсли;  
					
					
				КонецЦикла;

				НоваяЗапись.СчетАналитическогоУчетаКт  =  Выборка.pcru_ex_СчКТ_ФСС;
				НоваяЗапись.СчетКт = НоваяЗапись.СчетАналитическогоУчетаКт.Владелец;
				
				Если ЗначениеЗаполнено(Выборка.pcru_ex_СубконтоКТ1_ФСС) Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 1, Выборка.pcru_ex_СубконтоКТ1_ФСС); // статья доходов расходов
				КонецЕсли; 
				Если ЗначениеЗаполнено(Выборка.pcru_ex_СубконтоКТ2_ФСС) Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 2, Выборка.pcru_ex_СубконтоКТ2_ФСС); // process code			
				КонецЕсли; 
				Если ЗначениеЗаполнено(Выборка.pcru_ex_СубконтоКТ3_ФСС)Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 3, Выборка.pcru_ex_СубконтоКТ3_ФСС); // process code			
				КонецЕсли; 
				
				
				Подразделение = СтрокаЗП.Подразделение;
				
				Если НоваяЗапись.СчетДт.УчетПоПодразделениям Тогда
					НоваяЗапись.ПодразделениеДт  =  Подразделение;//СтрокаЗП.Подразделение;
				КонецЕсли; 
				
				Если НоваяЗапись.СчетКт.УчетПоПодразделениям Тогда
					НоваяЗапись.ПодразделениеКт  =  Подразделение;//СтрокаЗП.Подразделение;
				КонецЕсли; 
				
				//ВР
				Если Выборка.pcru_ex_Сумму_В_ВР_ФСС_Дт Тогда
					НоваяЗапись.СуммаВРДт = СтрокаЗП.ФСС;
				КонецЕсли;
				Если Выборка.pcru_ex_Сумму_В_ВР_ФСС_Кт Тогда
					НоваяЗапись.СуммаВРКт = СтрокаЗП.ФСС;
				КонецЕсли;
				
				//ПР
				Если Выборка.pcru_ex_Сумму_В_ПР_ФСС_Дт Тогда
					НоваяЗапись.СуммаПРДт = СтрокаЗП.ФСС;
				КонецЕсли;
				Если Выборка.pcru_ex_Сумму_В_ПР_ФСС_Кт Тогда
					НоваяЗапись.СуммаПРКт = СтрокаЗП.ФСС;
				КонецЕсли;

				//НУ
				Если Выборка.pcru_ex_Сумму_В_НУ_ФСС_Дт Тогда
					Если НоваяЗапись.СчетДт.НалоговыйУчет Тогда
						НоваяЗапись.СуммаНУДт = СтрокаЗП.ФСС;
					КонецЕсли; 
				КонецЕсли;
				Если Выборка.pcru_ex_Сумму_В_НУ_ФСС_Кт Тогда
					Если НоваяЗапись.СчетКт.НалоговыйУчет Тогда
						НоваяЗапись.СуммаНУКт = СтрокаЗП.ФСС;
					КонецЕсли;
				КонецЕсли;
				
				ОписаниеПроводок.Добавить("Начисления строка "+НомерстрокиЗП+ "ФСС. Сумма " + СтрокаЗП.ФСС); 
			КонецЕсли;
			#КонецОбласти
			
			#Область ФССНесчастныеСлучаи  
			Если СтрокаЗП.ФССНесчастныеСлучаи  <> 0 Тогда
				НоваяЗапись = НаборЗаписей.Добавить(); 
				НоваяЗапись.Активность = Истина;
				НоваяЗапись.Организация = ЭтотОбъект.Организация;
				НоваяЗапись.Период = Конецмесяца(ЭтотОбъект.ПериодРегистрации);
				НоваяЗапись.Регистратор = ЭтотОбъект.Ссылка;
				НоваяЗапись.Сумма = СтрокаЗП.ФССНесчастныеСлучаи;
				
				НоваяЗапись.СчетАналитическогоУчетаДт  =  Выборка.pcru_ex_СчДТ_ФССНесчастныеСлучаи;
				НоваяЗапись.СчетДт = НоваяЗапись.СчетАналитическогоУчетаДт.Владелец;
				
				Если ЗначениеЗаполнено(Выборка.pcru_ex_СубконтоДТ1_ФССНесчастныеСлучаи) Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 1, Выборка.pcru_ex_СубконтоДТ1_ФССНесчастныеСлучаи); // статья доходов расходов
				КонецЕсли; 
				
				Если ЗначениеЗаполнено(Выборка.pcru_ex_СубконтоДТ2_ФССНесчастныеСлучаи) Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 2, Выборка.pcru_ex_СубконтоДТ2_ФССНесчастныеСлучаи); // статья доходов расходов
				КонецЕсли; 
				
				Если ЗначениеЗаполнено(Выборка.pcru_ex_СубконтоДТ2_ФССНесчастныеСлучаи) Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 3, Выборка.pcru_ex_СубконтоДТ2_ФССНесчастныеСлучаи); // статья доходов расходов
				КонецЕсли; 

				Для каждого СубконтоСчета Из НоваяЗапись.СчетАналитическогоУчетаДт.Владелец.ВидыСубконто Цикл
				
					Если НеПриоритетно  Тогда
						Если СубконтоСчета.ВидСубконто.Идентификатор = "ProcessCode" Тогда
							
							БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, СтрокаЗП.Подразделение.pcru_ProcessCode); // статья доходов расходов
							
							Попытка
								Если СтрокаЗП.ProcessCode <> "" Тогда
									БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, pcru_УМФО.ПолучитьПК(СтрокаЗП.ProcessCode)); // статья доходов расходов
								КонецЕсли;
							Исключение
							КонецПопытки;
							
							Попытка
								Если Выборка.pcru_ex_СубконтоДТ1_ОСН.Наименование = "01431 Резерв на отпуск НЕ НБ" Тогда
									БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, Справочники.БНФОСубконто.НайтиПоНаименованию("9905-Support processes")); // статья доходов расходов
								КонецЕсли;
							Исключение
							КонецПопытки;
							
							Попытка
								Если Выборка.pcru_ex_СубконтоДТ1_ОСН.Наименование = "01113 Ежемесячное базовое вознаграждение членам Совета Директоров НЕ НБ" Тогда
									БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, Справочники.БНФОСубконто.НайтиПоНаименованию("9906-Company management")); // статья доходов расходов
								КонецЕсли;
							Исключение
							КонецПопытки;
						КонецЕсли;  
					КонецЕсли; 
					
					Если СубконтоСчета.ВидСубконто.Идентификатор = "ТипЗатрат" Тогда
						
						Если СокрЛП(СтрокаЗП.pcru_ex_ТипЗатрат) = "1" Тогда
							
							БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, Справочники.БНФОСубконто.НайтиПоНаименованию("Тип затрат 1"));
							
						КонецЕсли; 
						
						
						Если СокрЛП(СтрокаЗП.pcru_ex_ТипЗатрат) = "2" Тогда
							
							БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, Справочники.БНФОСубконто.НайтиПоНаименованию("Тип затрат 2"));
							
						КонецЕсли; 
						
						Если СокрЛП(СтрокаЗП.pcru_ex_ТипЗатрат) = "" Тогда
							
							БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, Справочники.БНФОСубконто.ПустаяСсылка());
							
						КонецЕсли; 						
						
					КонецЕсли;				
					
				КонецЦикла;

				НоваяЗапись.СчетАналитическогоУчетаКт  =  Выборка.pcru_ex_СчКТ_ФССНесчастныеСлучаи;
				НоваяЗапись.СчетКт = НоваяЗапись.СчетАналитическогоУчетаКт.Владелец;
				
				Если ЗначениеЗаполнено(Выборка.pcru_ex_СубконтоКТ1_ФССНесчастныеСлучаи) Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 1, Выборка.pcru_ex_СубконтоКТ1_ФССНесчастныеСлучаи); // статья доходов расходов
				КонецЕсли; 
				Если ЗначениеЗаполнено(Выборка.pcru_ex_СубконтоКТ2_ФССНесчастныеСлучаи) Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 2, Выборка.pcru_ex_СубконтоКТ2_ФССНесчастныеСлучаи); // process code			
				КонецЕсли; 
				Если ЗначениеЗаполнено(Выборка.pcru_ex_СубконтоКТ3_ФССНесчастныеСлучаи)Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 3, Выборка.pcru_ex_СубконтоКТ3_ФССНесчастныеСлучаи); // process code			
				КонецЕсли; 
				
				
				Подразделение = СтрокаЗП.Подразделение;
				
				Если НоваяЗапись.СчетДт.УчетПоПодразделениям Тогда
					НоваяЗапись.ПодразделениеДт  =  Подразделение;//СтрокаЗП.Подразделение;
				КонецЕсли; 
				
				Если НоваяЗапись.СчетКт.УчетПоПодразделениям Тогда
					НоваяЗапись.ПодразделениеКт  =  Подразделение;//СтрокаЗП.Подразделение;
				КонецЕсли; 
				
				//ВР
				Если Выборка.pcru_ex_Сумму_В_ВР_ФССНесчастныеСлучаи_Дт Тогда
					НоваяЗапись.СуммаВРДт = СтрокаЗП.ФССНесчастныеСлучаи;
				КонецЕсли;
				Если Выборка.pcru_ex_Сумму_В_ВР_ФССНесчастныеСлучаи_Кт Тогда
					НоваяЗапись.СуммаВРКт = СтрокаЗП.ФССНесчастныеСлучаи;
				КонецЕсли;

				//ПР
				Если Выборка.pcru_ex_Сумму_В_ПР_ФССНесчастныеСлучаи_Дт Тогда
					НоваяЗапись.СуммаПРДт = СтрокаЗП.ФССНесчастныеСлучаи;
				КонецЕсли;
				Если Выборка.pcru_ex_Сумму_В_ПР_ФССНесчастныеСлучаи_Кт Тогда
					НоваяЗапись.СуммаПРКт = СтрокаЗП.ФССНесчастныеСлучаи;
				КонецЕсли;
				
				//НУ
				Если Выборка.pcru_ex_Сумму_В_НУ_ФССНесчастныеСлучаи_Дт Тогда
					Если НоваяЗапись.СчетДт.НалоговыйУчет Тогда
						НоваяЗапись.СуммаНУДт = СтрокаЗП.ФССНесчастныеСлучаи;
					КонецЕсли; 
				КонецЕсли;
				Если Выборка.pcru_ex_Сумму_В_НУ_ФССНесчастныеСлучаи_Кт Тогда
					Если НоваяЗапись.СчетКт.НалоговыйУчет Тогда
						НоваяЗапись.СуммаНУКт = СтрокаЗП.ФССНесчастныеСлучаи;
					КонецЕсли;
				КонецЕсли;
								
				ОписаниеПроводок.Добавить("Начисления строка "+НомерстрокиЗП+ "ФССНесчастныеСлучаи. Сумма " + СтрокаЗП.ФССНесчастныеСлучаи); 
				
			КонецЕсли;
			#КонецОбласти
			
			
			#Область ФФОМС  
			Если СтрокаЗП.ФФОМС  <> 0 Тогда
				НоваяЗапись = НаборЗаписей.Добавить(); 
				НоваяЗапись.Активность = Истина;
				НоваяЗапись.Организация = ЭтотОбъект.Организация;
				НоваяЗапись.Период = Конецмесяца(ЭтотОбъект.ПериодРегистрации);
				НоваяЗапись.Регистратор = ЭтотОбъект.Ссылка;
				НоваяЗапись.Сумма = СтрокаЗП.ФФОМС;
				
				
				НоваяЗапись.СчетАналитическогоУчетаДт  =  Выборка.pcru_ex_СчДТ_ФФОМС;
				НоваяЗапись.СчетДт = НоваяЗапись.СчетАналитическогоУчетаДт.Владелец;
				
				Если ЗначениеЗаполнено(Выборка.pcru_ex_СубконтоДТ1_ФФОМС) Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 1, Выборка.pcru_ex_СубконтоДТ1_ФФОМС); // статья доходов расходов
				КонецЕсли; 
				
				Если ЗначениеЗаполнено(Выборка.pcru_ex_СубконтоДТ2_ФФОМС) Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 2, Выборка.pcru_ex_СубконтоДТ2_ФФОМС); // статья доходов расходов
				КонецЕсли; 
				
				Если ЗначениеЗаполнено(Выборка.pcru_ex_СубконтоДТ2_ФФОМС) Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 3, Выборка.pcru_ex_СубконтоДТ2_ФФОМС); // статья доходов расходов
				КонецЕсли; 
				
				Для каждого СубконтоСчета Из НоваяЗапись.СчетАналитическогоУчетаДт.Владелец.ВидыСубконто Цикл
				
					Если НеПриоритетно  Тогда
						Если СубконтоСчета.ВидСубконто.Идентификатор = "ProcessCode" Тогда
							
							БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, СтрокаЗП.Подразделение.pcru_ProcessCode); // статья доходов расходов
							
							Попытка
								Если СтрокаЗП.ProcessCode <> "" Тогда
									БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, pcru_УМФО.ПолучитьПК(СтрокаЗП.ProcessCode)); // статья доходов расходов
								КонецЕсли;
							Исключение
							КонецПопытки;
							
							Попытка
								Если Выборка.pcru_ex_СубконтоДТ1_ОСН.Наименование = "01431 Резерв на отпуск НЕ НБ" Тогда
									БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, Справочники.БНФОСубконто.НайтиПоНаименованию("9905-Support processes")); // статья доходов расходов
								КонецЕсли;
							Исключение
							КонецПопытки;
							
							Попытка
								Если Выборка.pcru_ex_СубконтоДТ1_ОСН.Наименование = "01113 Ежемесячное базовое вознаграждение членам Совета Директоров НЕ НБ" Тогда
									БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, Справочники.БНФОСубконто.НайтиПоНаименованию("9906-Company management")); // статья доходов расходов
								КонецЕсли;
							Исключение
							КонецПопытки;
						КонецЕсли;  
					КонецЕсли; 
					
					Если СубконтоСчета.ВидСубконто.Идентификатор = "ТипЗатрат" Тогда
						
						Если СокрЛП(СтрокаЗП.pcru_ex_ТипЗатрат) = "1" Тогда
							
							БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, Справочники.БНФОСубконто.НайтиПоНаименованию("Тип затрат 1"));
							
						КонецЕсли; 
						
						
						Если СокрЛП(СтрокаЗП.pcru_ex_ТипЗатрат) = "2" Тогда
							
							БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, Справочники.БНФОСубконто.НайтиПоНаименованию("Тип затрат 2"));
							
						КонецЕсли; 
						
						Если СокрЛП(СтрокаЗП.pcru_ex_ТипЗатрат) = "" Тогда
							
							БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, СубконтоСчета.НомерСтроки, Справочники.БНФОСубконто.ПустаяСсылка());
							
						КонецЕсли; 
						
					КонецЕсли;				
					
				КонецЦикла;

				
				НоваяЗапись.СчетАналитическогоУчетаКт  =  Выборка.pcru_ex_СчКТ_ФФОМС;
				НоваяЗапись.СчетКт = НоваяЗапись.СчетАналитическогоУчетаКт.Владелец;
				
				Если ЗначениеЗаполнено(Выборка.pcru_ex_СубконтоКТ1_ФФОМС) Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 1, Выборка.pcru_ex_СубконтоКТ1_ФФОМС); // статья доходов расходов
				КонецЕсли; 
				Если ЗначениеЗаполнено(Выборка.pcru_ex_СубконтоКТ2_ФФОМС) Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 2, Выборка.pcru_ex_СубконтоКТ2_ФФОМС); // process code			
				КонецЕсли; 
				Если ЗначениеЗаполнено(Выборка.pcru_ex_СубконтоКТ3_ФФОМС)Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 3, Выборка.pcru_ex_СубконтоКТ3_ФФОМС); // process code			
				КонецЕсли; 
				
				
				Подразделение = СтрокаЗП.Подразделение;
				
				Если НоваяЗапись.СчетДт.УчетПоПодразделениям Тогда
					НоваяЗапись.ПодразделениеДт  =  Подразделение;//СтрокаЗП.Подразделение;
				КонецЕсли; 
				
				Если НоваяЗапись.СчетКт.УчетПоПодразделениям Тогда
					НоваяЗапись.ПодразделениеКт  =  Подразделение;//СтрокаЗП.Подразделение;
				КонецЕсли; 
				
				//ВР
				Если Выборка.pcru_ex_Сумму_В_ВР_ФФОМС_Дт Тогда
					НоваяЗапись.СуммаВРДт = СтрокаЗП.ФФОМС;
				КонецЕсли;
				Если Выборка.pcru_ex_Сумму_В_ВР_ФФОМС_Кт Тогда
					НоваяЗапись.СуммаВРКт = СтрокаЗП.ФФОМС;
				КонецЕсли;

				//ПР
				Если Выборка.pcru_ex_Сумму_В_ПР_ФФОМС_Дт Тогда
					НоваяЗапись.СуммаПРДт = СтрокаЗП.ФФОМС;
				КонецЕсли;
				Если Выборка.pcru_ex_Сумму_В_ПР_ФФОМС_Кт Тогда
					НоваяЗапись.СуммаПРКт = СтрокаЗП.ФФОМС;
				КонецЕсли;
				
				//НУ				
				Если Выборка.pcru_ex_Сумму_В_НУ_ФФОМС_Дт Тогда
					Если НоваяЗапись.СчетДт.НалоговыйУчет Тогда
						НоваяЗапись.СуммаНУДт = СтрокаЗП.ФФОМС;
					КонецЕсли;
				КонецЕсли;
				Если Выборка.pcru_ex_Сумму_В_НУ_ФФОМС_Кт Тогда
					Если НоваяЗапись.СчетКт.НалоговыйУчет Тогда
						НоваяЗапись.СуммаНУКт = СтрокаЗП.ФФОМС;
					КонецЕсли;
				КонецЕсли;				
				
				ОписаниеПроводок.Добавить("Начисления строка "+НомерстрокиЗП+ "ФФОМС. Сумма " + СтрокаЗП.ФФОМС); 
				
			КонецЕсли;		
			
		КонецЦикла;
		#КонецОбласти
	
	КонецЦикла;
	
	#КонецОбласти
	
	#Область ндфл 
	НомерстрокиЗП = 0;
	Для каждого СтрокаЗП Из ЭтотОбъект.НачисленныйНДФЛ Цикл
		НомерстрокиЗП = НомерстрокиЗП + 1;
		НоваяЗапись = НаборЗаписей.Добавить(); 
		НоваяЗапись.Активность = Истина;
		НоваяЗапись.Организация = ЭтотОбъект.Организация;
		НоваяЗапись.Период = Конецмесяца(ЭтотОбъект.ПериодРегистрации);
		НоваяЗапись.Регистратор = ЭтотОбъект.Ссылка;
		НоваяЗапись.Сумма = СтрокаЗП.Сумма;
		// получаем структуру проводок		
		
		Если СтрокаЗП.ВидОперации = Перечисления.ВидыОперацийПоЗарплате.НДФЛ Тогда
			Подразделение = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ первые 1
			|	ПодразделенияОрганизацийДополнительныеРеквизиты.Ссылка КАК Подразделение,
			|   ПодразделенияОрганизацийДополнительныеРеквизиты.Значение КАК СчетАналитическогоУчетаКт,
			|   ПодразделенияОрганизацийДополнительныеРеквизиты.Ссылка.РегистрацияВНалоговомОргане как РегистрацияВНалоговомОргане
			|ИЗ
			|	Справочник.ПодразделенияОрганизаций.ДополнительныеРеквизиты КАК ПодразделенияОрганизацийДополнительныеРеквизиты
			|ГДЕ
			|	ПодразделенияОрганизацийДополнительныеРеквизиты.Ссылка.РегистрацияВНалоговомОргане.Код = &Код
			|	И ПодразделенияОрганизацийДополнительныеРеквизиты.Ссылка.РегистрацияВНалоговомОргане.КодПоОКТМО = &КодПоОКТМО
			//|	И ПодразделенияОрганизацийДополнительныеРеквизиты.Ссылка.РегистрацияВНалоговомОргане.КодПоОКАТО = &КодПоОКАТО
			|	И ПодразделенияОрганизацийДополнительныеРеквизиты.Ссылка.КПП = &КПП
			|	И ПодразделенияОрганизацийДополнительныеРеквизиты.Ссылка.РегистрацияВНалоговомОргане.КПП = &КПП
			|	И ПодразделенияОрганизацийДополнительныеРеквизиты.Свойство.Заголовок = ""НДФЛ ЗУП""";
			Запрос.УстановитьПараметр("Код",СтрокаЗП.КодНалоговогоОргана );
			Запрос.УстановитьПараметр("КодПоОКТМО",СтрокаЗП.КодПоОКТМО );
			Запрос.УстановитьПараметр("КПП", СтрокаЗП.КПП);
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				НоваяЗапись.СчетАналитическогоУчетаКт  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду(Выборка.СчетАналитическогоУчетаКт);
				НоваяЗапись.СчетКт = НоваяЗапись.СчетАналитическогоУчетаКт.Владелец;
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 1, Перечисления.ВидыПлатежейВГосБюджет.Налог); // статья доходов расходов
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 2, Выборка.РегистрацияВНалоговомОргане); // process code			
				Подразделение = Выборка.Подразделение;
			Иначе	
				НоваяЗапись.СчетАналитическогоУчетаКт  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6030181000100000003800000");
				НоваяЗапись.СчетКт = НоваяЗапись.СчетАналитическогоУчетаКт.Владелец;
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 1, Перечисления.ВидыПлатежейВГосБюджет.Налог); // статья доходов расходов
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 2, Справочники.ПодразделенияОрганизаций.НайтиПоНаименованию("2.00.00 CEO/АДМИНИСТРАЦИЯ").РегистрацияВНалоговомОргане); // process code			
				Подразделение = Справочники.ПодразделенияОрганизаций.НайтиПоНаименованию("2.00.00 CEO/АДМИНИСТРАЦИЯ");
			КонецЕсли; 
			
			НоваяЗапись.СчетАналитическогоУчетаДт  =  справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6030581001000000000000000");	
			НоваяЗапись.СчетДт = НоваяЗапись.СчетАналитическогоУчетаДт.Владелец;
			
			Если НоваяЗапись.СчетДт.УчетПоПодразделениям Тогда
				НоваяЗапись.ПодразделениеДт  =  Подразделение;
			КонецЕсли; 
			
			Если НоваяЗапись.СчетКт.УчетПоПодразделениям Тогда
				НоваяЗапись.ПодразделениеКт  =  Подразделение;
			КонецЕсли; 
			
			Если НоваяЗапись.СчетДт.НалоговыйУчет Тогда
				НоваяЗапись.СуммаНУДт = СтрокаЗП.Сумма;
			КонецЕсли; 
			
			Если НоваяЗапись.СчетКт.НалоговыйУчет Тогда
				НоваяЗапись.СуммаНУКт = СтрокаЗП.Сумма;
			КонецЕсли; 
		КонецЕсли; 	
		
		Если СтрокаЗП.ВидОперации = Перечисления.ВидыОперацийПоЗарплате.НДФЛСПревышения Тогда
			Подразделение = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ первые 1
			|	ПодразделенияОрганизацийДополнительныеРеквизиты.Ссылка КАК Подразделение,
			|   ПодразделенияОрганизацийДополнительныеРеквизиты.Значение КАК СчетАналитическогоУчетаКт,
			|   ПодразделенияОрганизацийДополнительныеРеквизиты.Ссылка.РегистрацияВНалоговомОргане как РегистрацияВНалоговомОргане
			|ИЗ
			|	Справочник.ПодразделенияОрганизаций.ДополнительныеРеквизиты КАК ПодразделенияОрганизацийДополнительныеРеквизиты
			|ГДЕ
			|	ПодразделенияОрганизацийДополнительныеРеквизиты.Ссылка.РегистрацияВНалоговомОргане.Код = &Код
			|	И ПодразделенияОрганизацийДополнительныеРеквизиты.Ссылка.РегистрацияВНалоговомОргане.КодПоОКТМО = &КодПоОКТМО
			//|	И ПодразделенияОрганизацийДополнительныеРеквизиты.Ссылка.РегистрацияВНалоговомОргане.КодПоОКАТО = &КодПоОКАТО
			|	И ПодразделенияОрганизацийДополнительныеРеквизиты.Ссылка.КПП = &КПП
			|	И ПодразделенияОрганизацийДополнительныеРеквизиты.Ссылка.РегистрацияВНалоговомОргане.КПП = &КПП
			|	И ПодразделенияОрганизацийДополнительныеРеквизиты.Свойство.Заголовок = ""НДФЛ ЗУП""";
			Запрос.УстановитьПараметр("Код",СтрокаЗП.КодНалоговогоОргана );
			Запрос.УстановитьПараметр("КодПоОКТМО",СтрокаЗП.КодПоОКТМО );
			Запрос.УстановитьПараметр("КПП", СтрокаЗП.КПП);
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				НоваяЗапись.СчетАналитическогоУчетаКт  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду(Выборка.СчетАналитическогоУчетаКт);
				НоваяЗапись.СчетКт = НоваяЗапись.СчетАналитическогоУчетаКт.Владелец;
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 1, Перечисления.ВидыПлатежейВГосБюджет.Налог); // статья доходов расходов
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 2, Выборка.РегистрацияВНалоговомОргане); // process code			
				Подразделение = Выборка.Подразделение;
			Иначе	
				НоваяЗапись.СчетАналитическогоУчетаКт  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6030181000100000003900000");
				НоваяЗапись.СчетКт = НоваяЗапись.СчетАналитическогоУчетаКт.Владелец;
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 1, Перечисления.ВидыПлатежейВГосБюджет.Налог); // статья доходов расходов
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 2, Справочники.ПодразделенияОрганизаций.НайтиПоНаименованию("2.00.00 CEO/АДМИНИСТРАЦИЯ").РегистрацияВНалоговомОргане); // process code			
				Подразделение = Справочники.ПодразделенияОрганизаций.НайтиПоНаименованию("2.00.00 CEO/АДМИНИСТРАЦИЯ");
			КонецЕсли; 
			
			НоваяЗапись.СчетАналитическогоУчетаДт  =  справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6030581001000000000000000");	
			НоваяЗапись.СчетДт = НоваяЗапись.СчетАналитическогоУчетаДт.Владелец;
			
			Если НоваяЗапись.СчетДт.УчетПоПодразделениям Тогда
				НоваяЗапись.ПодразделениеДт  =  Подразделение;
			КонецЕсли; 
			
			Если НоваяЗапись.СчетКт.УчетПоПодразделениям Тогда
				НоваяЗапись.ПодразделениеКт  =  Подразделение;
			КонецЕсли; 
			
			Если НоваяЗапись.СчетДт.НалоговыйУчет Тогда
				НоваяЗапись.СуммаНУДт = СтрокаЗП.Сумма;
			КонецЕсли; 
			
			Если НоваяЗапись.СчетКт.НалоговыйУчет Тогда
				НоваяЗапись.СуммаНУКт = СтрокаЗП.Сумма;
			КонецЕсли; 
		КонецЕсли; 	
		
		Если СтрокаЗП.ВидОперации = Перечисления.ВидыОперацийПоЗарплате.НДФЛДоходыКонтрагентов Тогда
			Подразделение = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ первые 1
			|	ПодразделенияОрганизацийДополнительныеРеквизиты.Ссылка КАК Подразделение,
			|   ПодразделенияОрганизацийДополнительныеРеквизиты.Значение КАК СчетАналитическогоУчетаКт,
			|   ПодразделенияОрганизацийДополнительныеРеквизиты.Ссылка.РегистрацияВНалоговомОргане как РегистрацияВНалоговомОргане
			|ИЗ
			|	Справочник.ПодразделенияОрганизаций.ДополнительныеРеквизиты КАК ПодразделенияОрганизацийДополнительныеРеквизиты
			|ГДЕ
			|	ПодразделенияОрганизацийДополнительныеРеквизиты.Ссылка.РегистрацияВНалоговомОргане.Код = &Код
			|	И ПодразделенияОрганизацийДополнительныеРеквизиты.Ссылка.РегистрацияВНалоговомОргане.КодПоОКТМО = &КодПоОКТМО
			//|	И ПодразделенияОрганизацийДополнительныеРеквизиты.Ссылка.РегистрацияВНалоговомОргане.КодПоОКАТО = &КодПоОКАТО
			|	И ПодразделенияОрганизацийДополнительныеРеквизиты.Ссылка.РегистрацияВНалоговомОргане.КПП = &КПП
			|	И ПодразделенияОрганизацийДополнительныеРеквизиты.Свойство.Заголовок = ""НДФЛ ЗУП""";
			Запрос.УстановитьПараметр("Код",СтрокаЗП.КодНалоговогоОргана );
			Запрос.УстановитьПараметр("КодПоОКТМО",СтрокаЗП.КодПоОКТМО );
			Запрос.УстановитьПараметр("КПП", СтрокаЗП.КПП);
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				НоваяЗапись.СчетАналитическогоУчетаКт  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду(Выборка.СчетАналитическогоУчетаКт);
				НоваяЗапись.СчетКт = НоваяЗапись.СчетАналитическогоУчетаКт.Владелец;
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 1, Перечисления.ВидыПлатежейВГосБюджет.Налог); // статья доходов расходов
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 2, Выборка.РегистрацияВНалоговомОргане); // process code			
				Подразделение = Выборка.Подразделение;
			Иначе	
				НоваяЗапись.СчетАналитическогоУчетаКт  =  Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6030181000100000000020000");
				НоваяЗапись.СчетКт = НоваяЗапись.СчетАналитическогоУчетаКт.Владелец;
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 1, Перечисления.ВидыПлатежейВГосБюджет.Налог); // статья доходов расходов
				БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 2, Справочники.ПодразделенияОрганизаций.НайтиПоНаименованию("2.00.00 CEO/АДМИНИСТРАЦИЯ").РегистрацияВНалоговомОргане); // process code			
				Подразделение = Справочники.ПодразделенияОрганизаций.НайтиПоНаименованию("2.00.00 CEO/АДМИНИСТРАЦИЯ");
			КонецЕсли; 
			
			Счет = pcru_УМФО.ПолучитьСчетПоАналитике("60312",Справочники.Контрагенты.НайтиПоНаименованию(строка(СтрокаЗП.ФизическоеЛицо)));
			Если  не ЗначениеЗаполнено(Счет)  Тогда
				Счет  =  справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6030681001000000000000000");	
			КонецЕсли; 
			НоваяЗапись.СчетАналитическогоУчетаДт  =  Счет;	
			НоваяЗапись.СчетДт = НоваяЗапись.СчетАналитическогоУчетаДт.Владелец;
			
			Если НоваяЗапись.СчетДт.УчетПоПодразделениям Тогда
				НоваяЗапись.ПодразделениеДт  =  Подразделение;
			КонецЕсли; 
			
			Если НоваяЗапись.СчетКт.УчетПоПодразделениям Тогда
				НоваяЗапись.ПодразделениеКт  =  Подразделение;
			КонецЕсли; 
			
			Если НоваяЗапись.СчетДт.НалоговыйУчет Тогда
				НоваяЗапись.СуммаНУДт = СтрокаЗП.Сумма;
			КонецЕсли; 
			
			Если НоваяЗапись.СчетКт.НалоговыйУчет Тогда
				НоваяЗапись.СуммаНУКт = СтрокаЗП.Сумма;
			КонецЕсли; 
		КонецЕсли;
		
		ОписаниеПроводок.Добавить("Ндфл строка "+НомерстрокиЗП+ " Сумма " + СтрокаЗП.Сумма); 
	КонецЦикла;
	
	#КонецОбласти
	
	#Область УдержаннаяЗарплата   
	Для каждого СтрокаЗП Из ЭтотОбъект.УдержаннаяЗарплата Цикл
		НоваяЗапись = НаборЗаписей.Добавить(); 
		НоваяЗапись.Активность = Истина;
		НоваяЗапись.Организация = ЭтотОбъект.Организация;
		НоваяЗапись.Период = Конецмесяца(ЭтотОбъект.ПериодРегистрации);
		НоваяЗапись.Регистратор = ЭтотОбъект.Ссылка;
		НоваяЗапись.Сумма = СтрокаЗП.Сумма;
		// получаем структуру проводок		
		//Если СтрокаЗП.ВидОперации = Перечисления.ВидыОперацийПоЗарплате.АлиментыПрочиеИсполнительныеЛисты Тогда
		Если СтрокаЗП.ВидОперации = Перечисления.ВидыОперацийПоЗарплате.АлиментыПрочиеИсполнительныеЛисты ИЛИ СтрокаЗП.ВидОперации = Перечисления.ВидыОперацийПоЗарплате.ПрочиеУдержания Тогда
			
			НоваяЗапись.СчетАналитическогоУчетаДт  =  справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6030681001000000000000000");	
			НоваяЗапись.СчетДт = НоваяЗапись.СчетАналитическогоУчетаДт.Владелец;
			
			НоваяЗапись.СчетАналитическогоУчетаКт  =  pcru_УМФО.ПолучитьСчетПоАналитике("60322",СтрокаЗП.Контрагент);
			
			ДокументРасчета = Ссылка;
			Если НЕ ЗначениеЗаполнено(НоваяЗапись.СчетАналитическогоУчетаКт) Тогда
				Если ЗначениеЗаполнено(СтрокаЗП.Контрагент.БНФОФизическоеЛицо) Тогда
					НоваяЗапись.СчетАналитическогоУчетаКт = pcru_УМФО.ПолучитьСчетПоАналитике("60332",СтрокаЗП.Контрагент.БНФОФизическоеЛицо);
					ПолучитьДокументРасчетаСФизЛицом(НоваяЗапись.СчетАналитическогоУчетаКт.Владелец, СтрокаЗП, ДокументРасчета);
				КонецЕсли;
			КонецЕсли;
				
			НоваяЗапись.СчетКт = НоваяЗапись.СчетАналитическогоУчетаКт.Владелец;
			БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 1, СтрокаЗП.Контрагент);
			БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 2, СтрокаЗП.БНФОДоговорКонтрагента);
			БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 3, ДокументРасчета);
			
			Если НоваяЗапись.СчетДт.УчетПоПодразделениям Тогда
				НоваяЗапись.ПодразделениеДт  =  СтрокаЗП.Подразделение;           
			КонецЕсли; 
			
			Если НоваяЗапись.СчетКт.УчетПоПодразделениям Тогда
				НоваяЗапись.ПодразделениеКт  =  СтрокаЗП.Подразделение;
			КонецЕсли; 
			
			Если НоваяЗапись.СчетДт.НалоговыйУчет Тогда
				НоваяЗапись.СуммаНУДт = СтрокаЗП.Сумма;
			КонецЕсли; 
			
			Если НоваяЗапись.СчетКт.НалоговыйУчет Тогда
				НоваяЗапись.СуммаНУКт = СтрокаЗП.Сумма;
			КонецЕсли; 
		КонецЕсли; 	
		
		
		Если СтрокаЗП.ВидОперации = Перечисления.ВидыОперацийПоЗарплате.УдержаниеПоПрочимОперациямСРаботниками или СтрокаЗП.ВидОперации = Перечисления.ВидыОперацийПоЗарплате.УдержаниеНеизрасходованныхПодотчетныхСумм Тогда
			НоваяЗапись.СчетАналитическогоУчетаДт  =  справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6030681001000000000000000");	
			НоваяЗапись.СчетДт = НоваяЗапись.СчетАналитическогоУчетаДт.Владелец;
			БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетДт, НоваяЗапись.СубконтоДт, 1, СтрокаЗП.ФизическоеЛицо); // статья доходов расходов
			
			НоваяЗапись.СчетАналитическогоУчетаКт  =  pcru_УМФО.ПолучитьСчетПоАналитике("60308",СтрокаЗП.ФизическоеЛицо);
			НоваяЗапись.СчетКт = НоваяЗапись.СчетАналитическогоУчетаКт.Владелец;
			БНФОБухгалтерскийУчет.УстановитьСубконто(НоваяЗапись.СчетКт, НоваяЗапись.СубконтоКт, 1, СтрокаЗП.ФизическоеЛицо); // статья доходов расходов
			
			Если НоваяЗапись.СчетДт.УчетПоПодразделениям Тогда
				НоваяЗапись.ПодразделениеДт  =  СтрокаЗП.Подразделение;
			КонецЕсли; 
			
			Если НоваяЗапись.СчетКт.УчетПоПодразделениям Тогда
				НоваяЗапись.ПодразделениеКт  =  СтрокаЗП.Подразделение;
			КонецЕсли; 
			
			Если НоваяЗапись.СчетДт.НалоговыйУчет Тогда
				НоваяЗапись.СуммаНУДт = СтрокаЗП.Сумма;
			КонецЕсли; 
			
			Если НоваяЗапись.СчетКт.НалоговыйУчет Тогда
				НоваяЗапись.СуммаНУКт = СтрокаЗП.Сумма;
			КонецЕсли; 
			
			
			Если не ЗначениеЗаполнено(НоваяЗапись.СчетКт)  Тогда
				сообщить("Строка удержаний"+Строка(СтрокаЗП.НомерСтроки)+"не обработана - для физлитца" +СТрока(СтрокаЗП.ФизическоеЛицо)+ "не открыт счет 60308!"); 
				
				Отказ = Истина;
				Возврат;				
				
			КонецЕсли; 
			
		КонецЕсли;
		
		ОписаниеПроводок.Добавить("Удержания строка "+СтрокаЗП.НомерСтроки+ " Сумма " + СтрокаЗП.Сумма); 
		
	КонецЦикла;
	#КонецОбласти
	
	попытка
		НаборЗаписей.Записать(Истина);
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		
		т1 = СтрЗаменить(СтрЗаменить(ТекстОшибки,Символы.ПС,""),"Номер строки: ",Символы.ПС);
		т2 = СтрПолучитьСтроку(т1,2);
		т3 = СтрЗаменить(т2,")",Символы.ПС);
		
		НомерС = Число( СтрЗаменить(Сокрлп(СтрПолучитьСтроку(т3,1)),Символы.НПП,"") );
		
		ТекстОшибки = ОписаниеПроводок[НомерС-1]+ Символы.ПС + ТекстОшибки;	
		Сообщить(ТекстОшибки,СтатусСообщения.ОченьВажное);
	Конецпопытки;
	//	Номер строки: 1579)
	
	//ПродолжитьВызов(Отказ, РежимПроведения);
КонецПроцедуры


// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
//&НаСервере
//Функция ЗАполнитьСубконто(СтруктураПроводки = Неопределено)
//	Если не ЗначениеЗаполнено(СтруктураПроводки)  Тогда
//		СтруктураПроводки = новый Структура;
//	КонецЕсли; 
//	Если  ЗначениеЗаполнено(СтруктураПроводки.СчетАналитическогоУчетаДт) Тогда
//		Для каждого СубконтоСчета Из СтруктураПроводки.СчетАналитическогоУчетаДт.Владелец.ВидыСубконто Цикл
//			Если СубконтоСчета.ВидСубконто.Идентификатор = "ProcessCode" Тогда
//				Значение = Неопределено;
//				Если СтруктураПроводки.ДтСк1 = "01113 Ежемесячное базовое вознаграждение членам Совета Директоров НЕ НБ" Тогда
//					СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.БНФОСубконто.НайтиПоНаименованию("9906-Company management"));
//				Иначе	
//					Если СтруктураПроводки.ДтСк1 = "01431 Резерв на отпуск НЕ НБ" Тогда
//						СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.БНФОСубконто.НайтиПоНаименованию("9905-Support processes"));
//					Иначе	
//						Если СтруктураПроводки.Свойство("ProcessCode",Значение) Тогда
//							СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.БНФОСубконто.НайтиПоНаименованию(Значение));
//						Иначе
//							Если СтруктураПроводки.Свойство("ДтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
//								СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.БНФОСубконто.НайтиПоНаименованию(Значение));	
//							Иначе	
//								СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.БНФОСубконто.ПустаяСсылка());	
//							КонецЕсли; 
//						КонецЕсли; 
//					КонецЕсли; 
//				КонецЕсли; 
//				//Если СтруктураПроводки.Свойство("ДтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
//				//	СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.БНФОСубконто.НайтиПоНаименованию(Значение));	
//				//Иначе	
//				//	СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.БНФОСубконто.ПустаяСсылка());	
//				//КонецЕсли; 
//			КонецЕсли;  
//			//			
//			Если СубконтоСчета.ВидСубконто.Идентификатор = "Контрагенты" Тогда
//				Значение = Неопределено;
//				Если СтруктураПроводки.Свойство("ДтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
//					СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.Контрагенты.НайтиПоНаименованию(Значение));	
//				Иначе	
//					СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.Контрагенты.ПустаяСсылка());	
//				КонецЕсли; 
//			КонецЕсли;  
//			//			
//			Если СубконтоСчета.ВидСубконто.Идентификатор = "Договоры" Тогда
//				Значение = Неопределено;
//				Если СтруктураПроводки.Свойство("ДтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
//					СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.ДоговорыКонтрагентов.НайтиПоНаименованию(Значение));	
//				Иначе	
//					СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.ДоговорыКонтрагентов.ПустаяСсылка());	
//				КонецЕсли; 
//			КонецЕсли;  
//			//			
//			Если СубконтоСчета.ВидСубконто.Идентификатор = "НоменклатурныеГруппы" Тогда
//				Значение = Неопределено;
//				Если СтруктураПроводки.Свойство("ДтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
//					СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.НоменклатурныеГруппы.НайтиПоНаименованию(Значение));	
//				Иначе	
//					СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.НоменклатурныеГруппы.ПустаяСсылка());	
//				КонецЕсли; 
//			КонецЕсли;  
//			//			
//			Если СубконтоСчета.ВидСубконто.Идентификатор = "ВидыПлатежейВГосБюджет" Тогда
//				Значение = Неопределено;
//				Если СтруктураПроводки.Свойство("ДтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
//					СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Перечисления.ВидыПлатежейВГосБюджет.ВидНалоговогоОбязательстваПоИмени(Значение));	
//				Иначе	
//					СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Перечисления.ВидыПлатежейВГосБюджет.ПустаяСсылка());	
//				КонецЕсли; 
//			КонецЕсли;	
//			//			
//			Если СубконтоСчета.ВидСубконто.Идентификатор = "ПрочиеДоходыИРасходы" Тогда
//				Значение = Неопределено;
//				Если СтруктураПроводки.Свойство("ДтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
//					СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.ПрочиеДоходыИРасходы.НайтиПоНаименованию(Значение));	
//				Иначе	
//					СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.ПрочиеДоходыИРасходы.ПустаяСсылка());	
//				КонецЕсли; 
//			КонецЕсли;	
//			//			
//			Если СубконтоСчета.ВидСубконто.Идентификатор = "ДокументыРасчетовСКонтрагентами" Тогда
//				СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Документы.СписаниеСРасчетногоСчета.ПустаяСсылка());	
//			КонецЕсли;	
//			//
//			Если СубконтоСчета.ВидСубконто.Идентификатор = "РаботникиОрганизаций" Тогда
//				Значение = Неопределено;
//				Если СтруктураПроводки.Свойство("ДтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
//					СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.ФизическиеЛица.НайтиПоНаименованию(Значение));	
//				Иначе	
//					Если СтруктураПроводки.Свойство("ФизическоеЛицо",Значение) Тогда
//						СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Значение);	
//					Иначе	
//						СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.ФизическиеЛица.ПустаяСсылка());	
//					КонецЕсли; 
//					
//				КонецЕсли; 
//			КонецЕсли;	
//			//
//			Если СубконтоСчета.ВидСубконто.Идентификатор = "ВидНачисленийОплатыТрудаПоСтатье255НК" Тогда
//				Значение = Неопределено;
//				Если СтруктураПроводки.Свойство("ВидНачисленияОплатыТрудаДляНУ",Значение) Тогда
//					СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Перечисления.ВидыНачисленийОплатыТрудаДляНУ.ВидыНачисленийОплатыТрудаПоИмени(Значение));	
//				Иначе	
//					Если СтруктураПроводки.Свойство("ДтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
//						СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Перечисления.ВидыНачисленийОплатыТрудаДляНУ.ВидыНачисленийОплатыТрудаПоИмени(Значение));	
//					Иначе	
//						СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Перечисления.ВидыНачисленийОплатыТрудаДляНУ.ПустаяСсылка());	
//					КонецЕсли; 
//				КонецЕсли; 
//			КонецЕсли;	
//		КонецЦикла; 
//	КонецЕсли; 
//	//*********************************************************************** 
//	Если  ЗначениеЗаполнено(СтруктураПроводки.СчетАналитическогоУчетаКт) Тогда
//		Для каждого СубконтоСчета Из СтруктураПроводки.СчетАналитическогоУчетаКт.Владелец.ВидыСубконто Цикл
//			Если СубконтоСчета.ВидСубконто.Идентификатор = "ProcessCode" Тогда
//				Значение = Неопределено;
//				Если СтруктураПроводки.Свойство("КтСк1",Значение) Тогда
//					Если Значение = "01113 Ежемесячное базовое вознаграждение членам Совета Директоров НЕ НБ" Тогда
//						СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Справочники.БНФОСубконто.НайтиПоНаименованию("9906-Company management"));
//					Иначе	
//						СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Справочники.БНФОСубконто.ПустаяСсылка());
//					КонецЕсли; 
//				Иначе	
//					Если СтруктураПроводки.Свойство("КтСк1",Значение) Тогда
//						Если Значение = "01431 Резерв на отпуск НЕ НБ" Тогда
//							СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Справочники.БНФОСубконто.НайтиПоНаименованию("9905-Support processes"));
//						Иначе	
//							СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Справочники.БНФОСубконто.ПустаяСсылка());
//						КонецЕсли; 
//					Иначе	
//						Если СтруктураПроводки.Свойство("ProcessCode",Значение) Тогда
//							СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Справочники.БНФОСубконто.НайтиПоНаименованию(Значение));
//						Иначе
//							Если СтруктураПроводки.Свойство("КтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
//								СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Справочники.БНФОСубконто.НайтиПоНаименованию(Значение));	
//							Иначе	
//								СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Справочники.БНФОСубконто.ПустаяСсылка());	
//							КонецЕсли; 
//						КонецЕсли; 
//					КонецЕсли; 
//				КонецЕсли;
//			КонецЕсли;  
//			//			
//			Если СубконтоСчета.ВидСубконто.Идентификатор = "Контрагенты" Тогда
//				Значение = Неопределено;
//				Если СтруктураПроводки.Свойство("КтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
//					СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Справочники.Контрагенты.НайтиПоНаименованию(Значение));	
//				Иначе	
//					СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Справочники.Контрагенты.ПустаяСсылка());	
//				КонецЕсли; 
//			КонецЕсли;  
//			//			
//			Если СубконтоСчета.ВидСубконто.Идентификатор = "Договоры" Тогда
//				Значение = Неопределено;
//				Если СтруктураПроводки.Свойство("КтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
//					СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Справочники.ДоговорыКонтрагентов.НайтиПоНаименованию(Значение));	
//				Иначе	
//					СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Справочники.ДоговорыКонтрагентов.ПустаяСсылка());	
//				КонецЕсли; 
//			КонецЕсли;  
//			//			
//			Если СубконтоСчета.ВидСубконто.Идентификатор = "НоменклатурныеГруппы" Тогда
//				Значение = Неопределено;
//				Если СтруктураПроводки.Свойство("КтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
//					СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Справочники.НоменклатурныеГруппы.НайтиПоНаименованию(Значение));	
//				Иначе	
//					СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Справочники.НоменклатурныеГруппы.ПустаяСсылка());	
//				КонецЕсли; 
//			КонецЕсли;  
//			//			
//			Если СубконтоСчета.ВидСубконто.Идентификатор = "ВидыПлатежейВГосБюджет" Тогда
//				Значение = Неопределено;
//				Если СтруктураПроводки.Свойство("КтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
//					СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Перечисления.ВидыПлатежейВГосБюджет.ВидНалоговогоОбязательстваПоИмени(Значение));	
//				Иначе	
//					СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Перечисления.ВидыПлатежейВГосБюджет.ПустаяСсылка());	
//				КонецЕсли; 
//			КонецЕсли;	
//			//			
//			Если СубконтоСчета.ВидСубконто.Идентификатор = "ПрочиеДоходыИРасходы" Тогда
//				Значение = Неопределено;
//				Если СтруктураПроводки.Свойство("КтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
//					СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Справочники.ПрочиеДоходыИРасходы.НайтиПоНаименованию(Значение));	
//				Иначе	
//					СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Справочники.ПрочиеДоходыИРасходы.ПустаяСсылка());	
//				КонецЕсли; 
//			КонецЕсли;	
//			//			
//			Если СубконтоСчета.ВидСубконто.Идентификатор = "ДокументыРасчетовСКонтрагентами" Тогда
//				СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Документы.СписаниеСРасчетногоСчета.ПустаяСсылка());	
//			КонецЕсли;	
//			//
//			
//			Если СубконтоСчета.ВидСубконто.Идентификатор = "ВидНачисленийОплатыТрудаПоСтатье255НК" Тогда
//				Значение = Неопределено;
//				Если СтруктураПроводки.Свойство("ВидНачисленияОплатыТрудаДляНУ",Значение) Тогда
//					СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Перечисления.ВидыНачисленийОплатыТрудаДляНУ.ВидыНачисленийОплатыТрудаПоИмени(Значение));	
//				Иначе	
//					Если СтруктураПроводки.Свойство("КтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
//						СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Перечисления.ВидыНачисленийОплатыТрудаДляНУ.ВидыНачисленийОплатыТрудаПоИмени(Значение));	
//					Иначе	
//						СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Перечисления.ВидыНачисленийОплатыТрудаДляНУ.ПустаяСсылка());	
//					КонецЕсли; 
//				КонецЕсли; 
//			КонецЕсли;
//			
//			
//			Если СубконтоСчета.ВидСубконто.Идентификатор = "РаботникиОрганизаций" Тогда
//				Значение = Неопределено;
//				Если СтруктураПроводки.Свойство("КтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
//					СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Справочники.ФизическиеЛица.НайтиПоНаименованию(Значение));	
//				Иначе	
//					СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Справочники.ФизическиеЛица.ПустаяСсылка());	
//				КонецЕсли; 
//			КонецЕсли;	
//		КонецЦикла; 
//	КонецЕсли;
//	
//	Возврат	 СтруктураПроводки;
//	
//КонецФункции // ЗАполнитьСубконто()

Процедура ПолучитьДокументРасчетаСФизЛицом(Счет, СтрокаДокумента, ДокументРасчета)	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БНФОБанковскийОстатки.Субконто3 КАК ДокументРасчета,
	|	БНФОБанковскийОстатки.СуммаОстаток КАК СуммаОстаток
	|ИЗ
	|	РегистрБухгалтерии.БНФОБанковский.Остатки(
	|			&Период,
	|			Счет = &Счет,
	|			,
	|			организация = &Организация
	|				И Субконто1 = &Контрагент
	|				И Субконто2 = &Договор
	|				И Подразделение = &Подразделение) КАК БНФОБанковскийОстатки
	|ГДЕ
	|	БНФОБанковскийОстатки.СуммаОстаток = &Сумма";
	
	Запрос.УстановитьПараметр("Период", МоментВремени());
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Счет", Счет);
	Запрос.УстановитьПараметр("Контрагент", СтрокаДокумента.Контрагент);
	Запрос.УстановитьПараметр("Договор", СтрокаДокумента.БНФОДоговорКонтрагента);
	Запрос.УстановитьПараметр("Подразделение", СтрокаДокумента.Подразделение);
	Запрос.УстановитьПараметр("Сумма", СтрокаДокумента.Сумма);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ДокументРасчета = Выборка.ДокументРасчета;
	КонецЕсли;
	
КонецПроцедуры

