
&После("ПередЗаписью")
Процедура pcru_ex_ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	//++ Севрюгин А.А  29.12.2020 11:58:28
	Если не ЭтотОбъект.pcru_ex_НеОчищатьРаспределениеПриПроведении Тогда
		ЭтотОбъект.пкру_РаспределениеЗатрат.Очистить();
	КонецЕсли; 
	//-- Севрюгин А.А  29.12.2020 11:59:33 Администратор
	Попытка
		Если ЭтотОбъект.ДокументОснование <> Неопределено Тогда
			ЭтотОбъект.pcru_ex_СтатьяДоходовРасходов  = ЭтотОбъект.ДокументОснование.pcru_ex_СтатьяДоходовРасходов;
			//ЭтотОбъект.пкру_РаспределениеЗатрат.Очистить();
			Если НЕ pcru_ex_НеМенятьРаспределениеПриПроведении Тогда
				Для каждого СтрокаТЧ Из ЭтотОбъект.ДокументОснование.пкру_РаспределениеЗатрат Цикл
					СтрокаРЗ =  ЭтотОбъект.пкру_РаспределениеЗатрат.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаРЗ,СтрокаТЧ);
				КонецЦикла; 
			КонецЕсли;
		КонецЕсли; 
	Исключение
	КонецПопытки; 
	//ЭтотОбъект.ПодразделениеОрганизации  = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
	//ЭтотОбъект.ПодразделениеДт  = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
	//
	Если ЭтотОбъект.СчетОрганизации.НомерСчета = "40702810400000000944" Тогда
		ЭтотОбъект.СчетБанк   = Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("2050181000000000000500000");
	КонецЕсли;
	
	Если ЭтотОбъект.СчетОрганизации.НомерСчета = "40702810603300479930" Тогда
		ЭтотОбъект.СчетБанк   = Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("2050181000000000000100000");
	КонецЕсли;
	
	Если ЭтотОбъект.СчетОрганизации.НомерСчета = "40702810703200479930" Тогда
		ЭтотОбъект.СчетБанк   = Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("2050181000000000000200000");
	КонецЕсли;
	
	Если ЭтотОбъект.СчетОрганизации.НомерСчета = "40702810803100479930" Тогда
		ЭтотОбъект.СчетБанк   = Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("2050181000000000000300000");
	КонецЕсли;
	
	Если ЭтотОбъект.СчетОрганизации.НомерСчета = "40702810903000479930" Тогда
		ЭтотОбъект.СчетБанк   = Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("2050181000000000000400000");
	КонецЕсли;
	
	Если ЭтотОбъект.СчетОрганизации.НомерСчета = "40702978803000479930" Тогда
		ЭтотОбъект.СчетБанк   = Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("2050197800000000000100000");
	КонецЕсли;
	
	
	Если СтрЧислоВхождений(ЭтотОбъект.НазначениеПлатежа,"@@") > 0 Тогда
		Возврат;
	КонецЕсли;  
	
	
	НазначениеПлатежаДляПоиска = ВРег(СокрЛП(НазначениеПлатежа));
	Пока Истина Цикл
		КоличествоДвухПробелов = СтрЧислоВхождений(НазначениеПлатежаДляПоиска, "  ");
		НазначениеПлатежаДляПоиска = СтрЗаменить(НазначениеПлатежаДляПоиска, "  ", " ");
		Если КоличествоДвухПробелов = 0 Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
		
	//	
	//	Оплата по счетам № SPOS/18/04981 от 22.08.2018г., SPOS/18/04982 от 22.08.2018г.за тонер. Сумма 17163-00 В т.ч. НДС  (18%) 2618-08
	//	Оплата по счету № 42 от 20.08.2018г. аренда за сентярь 2018г. Сумма 30000-00 Без налога (НДС)
	//	Оплата аренды за сентябрь 2018г. Сумма 30500-00 Без налога (НДС)
	//	Оплата по реестру № 38 от 29.08.2018г. за канцелярию Сумма 125490-69 В т.ч. НДС  (18%) 19142-65
	//	Оплата по договору 17-1.3/3051 за услуги по договору Бокс-сервис Сумма 1820-00 В т.ч. НДС  (18%) 277-63
	//	плата по счету № 18433 от 02.08.2018 г.  доплата за услуги по договору 01115/ПФ-П от 01.11.2015г. за июль 2018г. Сумма 116743-32 В т.ч. НДС  (18%) 17808-30
	//Оплата за телематические услуги связи по счету 3326 от 16.08.2018г. по договору IIS-1948A/2017 от 10.05.2017г. за август 2018г. Сумма 5000-00 В т.ч. НДС  (18%) 762-71	
	//++ Севрюгин А.А  Ticket#1021198
	
	Если  ЗначениеЗаполнено(ЭтотОбъект.Контрагент) Тогда
		Если ЭтотОбъект.СчетОрганизации.НомерСчета = "40702810903000479930" Тогда
			Если (СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("Оплата по счетам")) > 0
				ИЛИ СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("Оплата по счету")) > 0 
				ИЛИ СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("Оплата аренды")) > 0 
				ИЛИ СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("Оплата аренды")) > 0 
				ИЛИ СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("Оплата по реестру")) > 0 
				ИЛИ СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("Оплата по договору")) > 0
				ИЛИ СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("Оплата за")) > 0 
				ИЛИ СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("плата по счету")) > 0)
				И СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("алимент")) = 0
				И СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("ГПХ")) = 0 Тогда
				ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийСписаниеДенежныхСредств.ОплатаПоставщику;
				ЭтотОбъект.ПодразделениеДт = Справочники.ПодразделенияОрганизаций.НайтиПоКоду("000000003");
				ЭтотОбъект.ПодразделениеОрганизации = Справочники.ПодразделенияОрганизаций.НайтиПоКоду("000000003");
				Если ЭтотОбъект.РасшифровкаПлатежа.Количество()  > 0 Тогда
					Стр = ЭтотОбъект.РасшифровкаПлатежа[0];
				Иначе 
					Стр =  ЭтотОбъект.РасшифровкаПлатежа.Добавить();
				КонецЕсли;  
				_60311 = pcru_УМФО.ПолучитьСчетПоАналитике("60311",ЭтотОбъект.ДоговорКонтрагента);
				_60312 = pcru_УМФО.ПолучитьСчетПоАналитике("60312",ЭтотОбъект.ДоговорКонтрагента);
				
				Если _60311.Пустая() Тогда
					_60311 = pcru_УМФО.ПолучитьСчетПоАналитике("60311",ЭтотОбъект.Контрагент);
					_60312 = pcru_УМФО.ПолучитьСчетПоАналитике("60312",ЭтотОбъект.Контрагент);
					Если _60311.Пустая() Тогда					
						Если ЗначениеЗаполнено(ЭтотОбъект.ДоговорКонтрагента)  Тогда
							pcru_УМФО.Открыть60311(ЭтотОбъект.Контрагент,ЭтотОбъект.ДоговорКонтрагента,"121 MKT expenses");
						Иначе
							Запрос = Новый Запрос;
							Запрос.Текст = "ВЫБРАТЬ
							|	ДоговорыКонтрагентов.Ссылка КАК Ссылка
							|ИЗ
							|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
							|ГДЕ
							|	ДоговорыКонтрагентов.Владелец = &Владелец";
							Запрос.УстановитьПараметр("Владелец",ЭтотОбъект.Контрагент );
							Выборка = Запрос.Выполнить().Выбрать();
							Если Выборка.Следующий() Тогда
								ДоговорКонтрагента1  =  Выборка.Ссылка;
							Иначе 
								ДогОб = Справочники.ДоговорыКонтрагентов.СоздатьЭлемент();
								Если ТипЗнч(ЭтотОбъект.Контрагент) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
									ДогОб.Владелец = ЭтотОбъект.Контрагент.АЭ_Контрагент;	 
								Иначе	 	
									ДогОб.Владелец = ЭтотОбъект.Контрагент;	 
								КонецЕсли;  						
								
								ДогОб.Наименование = "ОСновной";
								ДогОб.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком;
								ДогОб.Записать();
								ДоговорКонтрагента1  =  ДогОб.Ссылка;
							КонецЕсли;
							pcru_УМФО.Открыть60311(ЭтотОбъект.Контрагент,ДоговорКонтрагента1,"121 MKT expenses");
							ЭтотОбъект.ДоговорКонтрагента =  ДоговорКонтрагента1;
						КонецЕсли; 
						
						_60311 = pcru_УМФО.ПолучитьСчетПоАналитике("60311",ЭтотОбъект.ДоговорКонтрагента);
						_60312 = pcru_УМФО.ПолучитьСчетПоАналитике("60312",ЭтотОбъект.ДоговорКонтрагента);
					КонецЕсли;  
				КонецЕсли;
				Стр.СчетУчетаРасчетовСКонтрагентом  =  _60312;
				Стр.СчетУчетаРасчетовПоАвансам  =  _60311;
			КонецЕсли;
		КонецЕсли;		
	КонецЕсли; 
	
	//-- Севрюгин А.А
	//	назанчение платежа	кост центр	статья	тип затрат	сумма
	//Перечисление заработной платы	2.03.00 HR DEPARTMENT/ОТДЕЛ ПЕРСОНАЛА	01111 Basic wage/ Другие виды расходов, произведенных в пользу работника, предусмотренных трудовым договором и (или) коллективным договором	Тип затрат 2	сумма списания
	//Оплата Отпускные на основании 				
	//Перечисление пособия				
	//Оплата Заработная плата на основании 				
	//Перечисление отпускных				
	//Перечисление по договору ГПХ				
	//Перечисление пособия по уходу за ребенком				
	//Налог на доходы физических лиц	если сверху статья доходов расходов 01111 Basic wage/ Другие виды расходов, произведенных в пользу работника, предусмотренных трудовым договором и (или) коллективным договором	то как зп (выше)		
	Если СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("Перечисление з/п")) > 0
		ИЛИ СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("Перечисление отпускных")) > 0
		ИЛИ СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("Перечисление заработной платы")) > 0
		ИЛИ СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("Перечисление аванса")) > 0
		ИЛИ СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("Перечисление премии")) > 0
		ИЛИ СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("Компенсация транспорта")) > 0
		ИЛИ СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("Расчет при увольнении")) > 0
		ИЛИ СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("Перечисление пособия")) > 0
		ИЛИ СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("Перечисление по больничному листу")) > 0
		ИЛИ СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("Оплата Отпускные на основании ПЛАТЕЖНАЯ ВЕДОМОСТЬ")) > 0
		ИЛИ СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("Оплата Заработная плата на основании ПЛАТЕЖНАЯ ВЕДОМОСТЬ")) > 0
		ИЛИ СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("Оплата Больничные на основании ПЛАТЕЖНАЯ ВЕДОМОСТЬ")) > 0 
		ИЛИ СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("Оплата Премия на основании ПЛАТЕЖНАЯ ВЕДОМОСТЬ")) > 0 
		ИЛИ СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("Оплата Аванс на основании ПЛАТЕЖНАЯ ВЕДОМОСТЬ")) > 0  Тогда
		ЭтотОбъект.ВидОперации                    = Перечисления.ВидыОперацийСписаниеДенежныхСредств.ПрочееСписание;
		ЭтотОбъект.РасшифровкаПлатежа.Очистить();
		ЭтотОбъект.ПодразделениеДт                = Справочники.ПодразделенияОрганизаций.НайтиПоКоду("000000005");
		ЭтотОбъект.ПодразделениеОрганизации       = ЭтотОбъект.ПодразделениеДт;
		ЭтотОбъект.СчетУчетаРасчетовСКонтрагентом = Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6030681001000000000000000");
		ЭтотОбъект.СтатьяДвиженияДенежныхСредств  = Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоНаименованию("04850 Рез-ФЛ_оплата труда");
		ЭтотОбъект.pcru_ex_СтатьяДоходовРасходов  = Справочники.ПрочиеДоходыИРасходы.НайтиПоНаименованию("01111 Basic wage/ Другие виды расходов, произведенных в пользу работника, предусмотренных трудовым договором и (или) коллективным договором");
		//
		//ЭтотОбъект.пкру_РаспределениеЗатрат.Очистить();
		Если НЕ pcru_ex_НеМенятьРаспределениеПриПроведении Тогда
			СтрокаРаспределения                     = ЭтотОбъект.пкру_РаспределениеЗатрат.Добавить();
			СтрокаРаспределения.пкру_CostCentr      = ЭтотОбъект.ПодразделениеДт;
			СтрокаРаспределения.пкру_СтатьяРасходов = Справочники.ПрочиеДоходыИРасходы.НайтиПоНаименованию("01111 Basic wage/ Другие виды расходов, произведенных в пользу работника, предусмотренных трудовым договором и (или) коллективным договором");
			СтрокаРаспределения.ТипЗатрат           = Справочники.БНФОСубконто.НайтиПоНаименованию("Тип затрат 2");
			СтрокаРаспределения.Сумма               = ЭтотОбъект.СуммаДокумента;
		КонецЕсли;
	КонецЕсли;
	//
	Если СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("Перечисление агентского вознаграждения")) > 0
		ИЛИ СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("Выплата агентского вознаграждения")) > 0
		ИЛИ СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("Оплата по договору ГПХ")) > 0 
		ИЛИ СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("по договору ГПХ")) > 0 Тогда
		ЭтотОбъект.ВидОперации	=  Перечисления.ВидыОперацийСписаниеДенежныхСредств.ПрочееСписание;
		ЭтотОбъект.СчетУчетаРасчетовСКонтрагентом  = Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6030681001000000000000000");
		ЭтотОбъект.СтатьяДвиженияДенежныхСредств  = Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("00-000028");
		Если СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("Перечисление агентского вознаграждения")) > 0
		 ИЛИ СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("Выплата агентского вознаграждения")) > 0 тогда
			ЭтотОбъект.pcru_ex_СтатьяДоходовРасходов = Справочники.ПрочиеДоходыИРасходы.НайтиПоНаименованию("71421  Comission CA-own business-new production-first part/Комиссия за выдачу займа");
			//ЭтотОбъект.пкру_РаспределениеЗатрат.Очистить();
			Если НЕ pcru_ex_НеМенятьРаспределениеПриПроведении Тогда
				СтрокаРаспределения                      = ЭтотОбъект.пкру_РаспределениеЗатрат.Добавить();
				СтрокаРаспределения.пкру_CostCentr       = Справочники.ПодразделенияОрганизаций.НайтиПоКоду("00-000005");
				ЭтотОбъект.ПодразделениеДт               = СтрокаРаспределения.пкру_CostCentr;
				ЭтотОбъект.ПодразделениеОрганизации      = СтрокаРаспределения.пкру_CostCentr;
				СтрокаРаспределения.пкру_СтатьяРасходов  = ЭтотОбъект.pcru_ex_СтатьяДоходовРасходов;
				СтрокаРаспределения.ТипЗатрат            = Справочники.БНФОСубконто.НайтиПоНаименованию("Тип затрат 2");
				СтрокаРаспределения.Сумма                = ЭтотОбъект.СуммаДокумента;
			КонецЕсли;
		Иначе	
			ЭтотОбъект.pcru_ex_СтатьяДоходовРасходов = Справочники.ПрочиеДоходыИРасходы.НайтиПоНаименованию("01111 Basic wage/ Другие виды расходов, произведенных в пользу работника, предусмотренных трудовым договором и (или) коллективным договором");
			//ЭтотОбъект.пкру_РаспределениеЗатрат.Очистить();
			Если НЕ pcru_ex_НеМенятьРаспределениеПриПроведении Тогда
				СтрокаРаспределения                      = ЭтотОбъект.пкру_РаспределениеЗатрат.Добавить();
				СтрокаРаспределения.пкру_CostCentr       = Справочники.ПодразделенияОрганизаций.НайтиПоКоду("000000005");
				ЭтотОбъект.ПодразделениеДт               = СтрокаРаспределения.пкру_CostCentr;
				ЭтотОбъект.ПодразделениеОрганизации      = СтрокаРаспределения.пкру_CostCentr;
				СтрокаРаспределения.пкру_СтатьяРасходов  = ЭтотОбъект.pcru_ex_СтатьяДоходовРасходов;
				СтрокаРаспределения.ТипЗатрат            = Справочники.БНФОСубконто.НайтиПоНаименованию("Тип затрат 2");
				СтрокаРаспределения.Сумма                = ЭтотОбъект.СуммаДокумента;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	//
	Если СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("Налог на доходы физических лиц")) > 0 Тогда
		ЭтотОбъект.ВидОперации	=  Перечисления.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеНалога;
		Запрос = Новый Запрос;
		Запрос.Текст ="ВЫБРАТЬ
		|	СписаниеСРасчетногоСчета.Ссылка КАК СписаниеСРасчетногоСчета,
		|	СписаниеСРасчетногоСчета.Контрагент КАК Контрагент,
		|	РегистрацииВНалоговомОргане.Ссылка КАК РегистрацияВНалоговомОргане,
		|	ПодразделенияОрганизаций.Ссылка КАК Подразделение,
		|  IsNull(БНФОСчетаАналитическогоУчета.Ссылка,Значение(Справочник.БНФОСчетаАналитическогоУчета.ПустаяСсылка)) КАК СчетАналитическогоУчета
		|	ИЗ
		|	Документ.СписаниеСРасчетногоСчета КАК СписаниеСРасчетногоСчета
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПодразделенияОрганизаций.ДополнительныеРеквизиты КАК ПодразделенияОрганизацийДополнительныеРеквизиты
		|					ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|					ПО (БНФОСчетаАналитическогоУчета.Код = ПодразделенияОрганизацийДополнительныеРеквизиты.Значение.Наименование)
		|				ПО (ПодразделенияОрганизаций.Ссылка = ПодразделенияОрганизацийДополнительныеРеквизиты.Ссылка)
		|			ПО (ПОДСТРОКА(ПодразделенияОрганизаций.Наименование, 1, 7) = ПОДСТРОКА(РегистрацииВНалоговомОргане.НаименованиеОбособленногоПодразделения, 1, 7))
		|		ПО (РегистрацииВНалоговомОргане.КПП = СписаниеСРасчетногоСчета.Контрагент.КПП)
		|ГДЕ
		|	СписаниеСРасчетногоСчета.Ссылка = &Ссылка";
		Запрос.УстановитьПараметр("Ссылка",ЭтотОбъект.Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Если ЗначениеЗаполнено(Выборка.СчетАналитическогоУчета)  Тогда
				ЭтотОбъект.СчетУчетаРасчетовСКонтрагентом = Выборка.СчетАналитическогоУчета;
			Иначе                                                                                                 //6030281000100000003800000
				ЭтотОбъект.СчетУчетаРасчетовСКонтрагентом = Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6030281000100000003800000");
				ЭтотОбъект.БНФОСубконтоДт1 = Перечисления.ВидыПлатежейВГосБюджет.Налог;
			КонецЕсли; 
			//
			Если ЗначениеЗаполнено(Выборка.РегистрацияВНалоговомОргане)  Тогда
				ЭтотОбъект.БНФОСубконтоДт2 = Выборка.РегистрацияВНалоговомОргане;
			Иначе 
				ЭтотОбъект.БНФОСубконтоДт2 = Справочники.РегистрацииВНалоговомОргане.НайтиПоНаименованию("ФНС 7810 КПП 781001001 (20000)");
			КонецЕсли;
			//
			Если ЗначениеЗаполнено(Выборка.Подразделение)  Тогда
				ЭтотОбъект.ПодразделениеОрганизации = Выборка.Подразделение;
				ЭтотОбъект.ПодразделениеДт = Выборка.Подразделение;
			Иначе 
				ЭтотОбъект.ПодразделениеОрганизации = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
				ЭтотОбъект.ПодразделениеДт = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
			КонецЕсли; 
		Иначе
			//			ЭтотОбъект.СчетУчетаРасчетовСКонтрагентом = Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6030281000100000003800000");
			ЭтотОбъект.СчетУчетаРасчетовСКонтрагентом = Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6030281000100000003800000");
			ЭтотОбъект.БНФОСубконтоДт1 = Перечисления.ВидыПлатежейВГосБюджет.Налог;
			ЭтотОбъект.БНФОСубконтоДт2 = Справочники.РегистрацииВНалоговомОргане.НайтиПоНаименованию("ФНС 7810 КПП 781001001 (20000)");
			ЭтотОбъект.ПодразделениеОрганизации = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
			ЭтотОбъект.ПодразделениеДт = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
		КонецЕсли;
		
		Если ЭтотОбъект.pcru_ex_СтатьяДоходовРасходов = Справочники.ПрочиеДоходыИРасходы.НайтиПоНаименованию("01111 Basic wage/ Другие виды расходов, произведенных в пользу работника, предусмотренных трудовым договором и (или) коллективным договором") Тогда
			Если НЕ pcru_ex_НеМенятьРаспределениеПриПроведении Тогда
				СтрокаРаспределения                     = ЭтотОбъект.пкру_РаспределениеЗатрат.Добавить();
				СтрокаРаспределения.пкру_CostCentr      = Справочники.ПодразделенияОрганизаций.НайтиПоКоду("000000005"); 
				СтрокаРаспределения.пкру_СтатьяРасходов = Справочники.ПрочиеДоходыИРасходы.НайтиПоНаименованию("01111 Basic wage/ Другие виды расходов, произведенных в пользу работника, предусмотренных трудовым договором и (или) коллективным договором");
				СтрокаРаспределения.ТипЗатрат           = Справочники.БНФОСубконто.НайтиПоНаименованию("Тип затрат 2");
				СтрокаРаспределения.Сумма               = ЭтотОбъект.СуммаДокумента;
			КонецЕсли; 
		КонецЕсли; 
	КонецЕсли; 
	
	//
	Если СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("Комиссия за исходящий платеж")) > 0
		ИЛИ СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("Комиссия за исходящие платежи")) > 0
		ИЛИ СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("Комиссия третьих банков за исходящий платеж")) > 0 Тогда
		Если НЕ ЗначениеЗаполнено(ЭтотОбъект.СчетУчетаРасчетовСКонтрагентом) Тогда
			ЭтотОбъект.СчетУчетаРасчетовСКонтрагентом  = Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("7170281000531030000114011");
			ЭтотОбъект.СтатьяДвиженияДенежныхСредств  = Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("00-000039");
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ЭтотОбъект.БНФОСтатьяДоходовИРасходов) Тогда
			ЭтотОбъект.БНФОСтатьяДоходовИРасходов  = Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("00-000078");
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ЭтотОбъект.БНФОСубконтоДт1) Тогда
			ЭтотОбъект.БНФОСубконтоДт1  = Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("00-000078");
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ЭтотОбъект.БНФОСубконтоДт2) Тогда
			ЭтотОбъект.БНФОСубконтоДт2  = Справочники.БНФОСубконто.НайтиПоКоду("000000053");
		КонецЕсли;
		Если ЭтотОбъект.СчетОрганизации.НомерСчета = "40702810603300479930" Тогда
			ЭтотОбъект.ПодразделениеДт  = Справочники.ПодразделенияОрганизаций.НайтиПоКоду("000000019");
			ЭтотОбъект.БНФОСубконтоДт2  = Справочники.БНФОСубконто.НайтиПоКоду("000000052");
			//
			Если НЕ pcru_ex_НеМенятьРаспределениеПриПроведении Тогда
				СтрокаРаспределения = ЭтотОбъект.пкру_РаспределениеЗатрат.Добавить();
				СтрокаРаспределения.пкру_CostCentr = Справочники.ПодразделенияОрганизаций.НайтиПоКоду("000000019");
				СтрокаРаспределения.пкру_СтатьяРасходов = Справочники.ПрочиеДоходыИРасходы.НайтиПоНаименованию("14011 Расходы по расчетному и кассовому обслуживанию");
				СтрокаРаспределения.ТипЗатрат =  Справочники.БНФОСубконто.НайтиПоНаименованию("Тип затрат 2");
				СтрокаРаспределения.Сумма = ЭтотОбъект.СуммаДокумента;
			КонецЕсли;
		КонецЕсли;
		Если ЭтотОбъект.СчетОрганизации.НомерСчета = "40702810903000479930" Тогда
			ЭтотОбъект.ПодразделениеДт  = Справочники.ПодразделенияОрганизаций.НайтиПоКоду("000000003");
			//Если не ЭтотОбъект.pcru_ex_НеОчищатьРаспределениеПриПроведении Тогда
			Если НЕ pcru_ex_НеМенятьРаспределениеПриПроведении Тогда
				СтрокаРаспределения = ЭтотОбъект.пкру_РаспределениеЗатрат.Добавить();
				СтрокаРаспределения.пкру_CostCentr = Справочники.ПодразделенияОрганизаций.НайтиПоКоду("000000019");
				СтрокаРаспределения.пкру_СтатьяРасходов = Справочники.ПрочиеДоходыИРасходы.НайтиПоНаименованию("14011 Расходы по расчетному и кассовому обслуживанию");
				СтрокаРаспределения.ТипЗатрат =  Справочники.БНФОСубконто.НайтиПоНаименованию("Тип затрат 2");
				СтрокаРаспределения.Сумма = ЭтотОбъект.СуммаДокумента/2;
				ЭтотОбъект.ПодразделениеДт  = Справочники.ПодразделенияОрганизаций.НайтиПоКоду("000000003");
				СтрокаРаспределения = ЭтотОбъект.пкру_РаспределениеЗатрат.Добавить();
				СтрокаРаспределения.пкру_CostCentr = Справочники.ПодразделенияОрганизаций.НайтиПоКоду("000000019");
				СтрокаРаспределения.пкру_СтатьяРасходов = Справочники.ПрочиеДоходыИРасходы.НайтиПоНаименованию("14011 Расходы по расчетному и кассовому обслуживанию");
				СтрокаРаспределения.ТипЗатрат =  Справочники.БНФОСубконто.НайтиПоНаименованию("Тип затрат 1");
				СтрокаРаспределения.Сумма = ЭтотОбъект.СуммаДокумента/2;
			КонецЕсли;		
		КонецЕсли;
	КонецЕсли;
	
	Если СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("Госпошлина по делам ,рассматриваемым в судах общей юрисдикции")) > 0
	 ИЛИ СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("Госпошлина по делам, рассматриваемым в судах общей юрисдикции")) > 0 Тогда
		ЭтотОбъект.ВидОперации                    = Перечисления.ВидыОперацийСписаниеДенежныхСредств.ПрочееСписание;
		ЭтотОбъект.СчетУчетаРасчетовСКонтрагентом = Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6031281000000056714000000");
		ЭтотОбъект.СтатьяДвиженияДенежныхСредств  = Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("00-000030");
		ЭтотОбъект.БНФОСубконтоДт1                = Справочники.Контрагенты.НайтиПоНаименованию("Уплата Госпошлины по судебным делам");
		ЭтотОбъект.ПодразделениеДт                = Справочники.ПодразделенияОрганизаций.НайтиПоКоду("000000100");
		ЭтотОбъект.pcru_ex_СтатьяДоходовРасходов = Справочники.ПрочиеДоходыИРасходы.НайтиПоНаименованию("01407 Госпошлина");
		Если НЕ pcru_ex_НеМенятьРаспределениеПриПроведении Тогда
			СтрокаРаспределения = ЭтотОбъект.пкру_РаспределениеЗатрат.Добавить();
			СтрокаРаспределения.пкру_CostCentr = ЭтотОбъект.ПодразделениеДт;
			СтрокаРаспределения.пкру_СтатьяРасходов = Справочники.ПрочиеДоходыИРасходы.НайтиПоНаименованию("01407 Госпошлина");
			СтрокаРаспределения.ТипЗатрат =  Справочники.БНФОСубконто.НайтиПоНаименованию("Тип затрат 1");
			СтрокаРаспределения.Сумма = ЭтотОбъект.СуммаДокумента;
		КонецЕсли; 
	КонецЕсли; 
	
	Если СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("Комиссия за ведение текущего (расчетного) счета")) > 0 Тогда
		Если НЕ ЗначениеЗаполнено(ЭтотОбъект.СчетУчетаРасчетовСКонтрагентом) Тогда
			ЭтотОбъект.СчетУчетаРасчетовСКонтрагентом  = Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("7170281000531010000114011");
			ЭтотОбъект.СтатьяДвиженияДенежныхСредств  = Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("00-000039");
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ЭтотОбъект.БНФОСтатьяДоходовИРасходов) Тогда
			ЭтотОбъект.БНФОСтатьяДоходовИРасходов  = Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("00-000078");
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ЭтотОбъект.БНФОСубконтоДт1) Тогда
			ЭтотОбъект.БНФОСубконтоДт1  = Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("00-000078");
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ЭтотОбъект.БНФОСубконтоДт2) Тогда
			ЭтотОбъект.БНФОСубконтоДт2  = Справочники.БНФОСубконто.НайтиПоКоду("000000053");
		КонецЕсли;
	КонецЕсли; 
	
	Если СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("Комиссия за подготовку копии")) > 0 Тогда
		Если НЕ ЗначениеЗаполнено(ЭтотОбъект.СчетУчетаРасчетовСКонтрагентом) Тогда
			ЭтотОбъект.СчетУчетаРасчетовСКонтрагентом  = Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("7170281000531020000114011");
			ЭтотОбъект.СтатьяДвиженияДенежныхСредств  = Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("00-000039");
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ЭтотОбъект.БНФОСтатьяДоходовИРасходов) Тогда
			ЭтотОбъект.БНФОСтатьяДоходовИРасходов  = Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("00-000078");
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ЭтотОбъект.БНФОСубконтоДт1) Тогда
			ЭтотОбъект.БНФОСубконтоДт1  = Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("00-000078");
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ЭтотОбъект.БНФОСубконтоДт2) Тогда
			ЭтотОбъект.БНФОСубконтоДт2  = Справочники.БНФОСубконто.НайтиПоКоду("000000045");
		КонецЕсли;
	КонецЕсли; 
		
	Если СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("Комиссия за заверение документов")) > 0
		ИЛИ СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("Возмещение суммы НДС")) > 0
		ИЛИ СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("Cумма НДС по комиссии")) > 0
		ИЛИ СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("Ком.за осуществ.вал.контроля")) > 0 Тогда
		Если НЕ ЗначениеЗаполнено(ЭтотОбъект.СчетУчетаРасчетовСКонтрагентом) Тогда
			ЭтотОбъект.СчетУчетаРасчетовСКонтрагентом  = Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6031281000000055814000000");
			ЭтотОбъект.СтатьяДвиженияДенежныхСредств  = Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("00-000039");
			ЭтотОбъект.ВидОперации	=  Перечисления.ВидыОперацийСписаниеДенежныхСредств.ОплатаПоставщику; 
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ЭтотОбъект.БНФОСтатьяДоходовИРасходов) Тогда
			ЭтотОбъект.БНФОСтатьяДоходовИРасходов  = Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("00-000078");
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ЭтотОбъект.БНФОСубконтоДт1) Тогда
			ЭтотОбъект.БНФОСубконтоДт1  = Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("00-000078");
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ЭтотОбъект.БНФОСубконтоДт2) Тогда
			ЭтотОбъект.БНФОСубконтоДт2  = Справочники.БНФОСубконто.НайтиПоКоду("000000053");
		КонецЕсли;
	КонецЕсли; 
		
	Если СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("Выдача займа по договору процентного займа")) > 0 Тогда
		ЭтотОбъект.ВидОперации =  Перечисления.ВидыОперацийСписаниеДенежныхСредств.ВыдачаЗаймаКонтрагенту;
		Темп = СтрПолучитьСтроку(СтрЗаменить(ЭтотОбъект.НазначениеПлатежа,"№",символы.ПС),2);
		Если Лев(Темп,1)= " " Тогда
			НомерДоговора	= Сред(Темп,2,10);
		КонецЕсли; 
		Если Лев(Темп,1)= "0" Тогда
			НомерДоговора	= Сред(Темп,1,10);
		КонецЕсли; 
		
		Стр = pcru_CRM.ЗагрузитьКонтрагентаИзНАВ(НомерДоговора);
		Если ТипЗнч(Стр) = Тип("Строка") Тогда
			Отказ = истина;
			Возврат;
		КонецЕсли; 
		Организация = Справочники.Организации.НайтиПоКоду("000000001");
		СтранаРегистрации = Справочники.СтраныМира.Россия;
		Родитель = Справочники.Контрагенты.НайтиПоКоду("000000096");
		ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо; 
		
		Если Стр.Контрагент.АЭ_ИндивидуальныйПредприниматель  Тогда
			СчетУчетаРасчетовСКонтрагентом  = Стр._49401_1;
		Иначе
			СчетУчетаРасчетовСКонтрагентом  = Стр._48801_1;
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(СчетУчетаРасчетовСКонтрагентом)  Тогда
			НовУслСС  = Стр.УсловиеЗайма;
			НовДогСС  = Стр.ДоговорКонтрагента;
			ЭтотОбъект.Контрагент  = Стр.Контрагент;
			ЭтотОбъект.СчетУчетаРасчетовСКонтрагентом = СчетУчетаРасчетовСКонтрагентом;
			
			ЭтотОбъект.РасшифровкаПлатежа.Очистить();
			СтрокаРасшифровки = ЭтотОбъект.РасшифровкаПлатежа.Добавить();
			СтрокаРасшифровки.СпособПогашенияЗадолженности = Перечисления.СпособыПогашенияЗадолженности.Автоматически; 
			СтрокаРасшифровки.СуммаПлатежа = ЭтотОбъект.СуммаДокумента;
			СтрокаРасшифровки.КурсВзаиморасчетов = 1;
			СтрокаРасшифровки.СуммаВзаиморасчетов=  ЭтотОбъект.СуммаДокумента;
			СтрокаРасшифровки.СчетУчетаРасчетовСКонтрагентом = СчетУчетаРасчетовСКонтрагентом;
			СтрокаРасшифровки.СчетУчетаРасчетовПоАвансам     = СчетУчетаРасчетовСКонтрагентом;
			СтрокаРасшифровки.КратностьВзаиморасчетов = 1;
			СтрокаРасшифровки.РаспределятьРасходыУСН = Ложь;
			СтрокаРасшифровки.ВидПлатежаПоКредитамЗаймам =  Перечисления.ВидыПлатежейПоКредитамЗаймам.ПогашениеДолга;
			СтрокаРасшифровки.БНФОДоговорКредитаДепозита = НовУслСС;
			Если Стр.Контрагент.АЭ_ИндивидуальныйПредприниматель  Тогда
				ЭтотОбъект.СтатьяДвиженияДенежныхСредств        = Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("00-000051");
				СтрокаРасшифровки.СтатьяДвиженияДенежныхСредств = Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("00-000051");
			Иначе
				ЭтотОбъект.СтатьяДвиженияДенежныхСредств        = Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("00-000037");
				СтрокаРасшифровки.СтатьяДвиженияДенежныхСредств = Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("00-000037");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли; 
	
	Если СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("Возврат излишне уплаченных средств")) > 0 Тогда		
		ЭтотОбъект.СчетУчетаРасчетовСКонтрагентом  = Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("4742281000000000000000001");
		ЭтотОбъект.СтатьяДвиженияДенежныхСредств  = Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("00-000037");
		ЭтотОбъект.ВидОперации	=  Перечисления.ВидыОперацийСписаниеДенежныхСредств.ПрочееСписание; 		
	КонецЕсли; 
	
	Если  СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("Возврат излишнее перечисленных денежных средств")) > 0 Тогда		
		ЭтотОбъект.СчетУчетаРасчетовСКонтрагентом  = Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("4742281000000000000100000");
		ЭтотОбъект.ВидОперации	=  Перечисления.ВидыОперацийСписаниеДенежныхСредств.ПрочееСписание; 
	КонецЕсли; 
		
	Если  СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("Перевод собственных средств")) > 0
	  ИЛИ СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("Перевод на другой счет организации")) > 0
	  ИЛИ СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("Перевод средств на основании")) > 0 Тогда
		ЭтотОбъект.СтатьяДвиженияДенежныхСредств  = Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("00-000043");
		ЭтотОбъект.СчетУчетаРасчетовСКонтрагентом = pcru_УМФО.ПолучитьСчетПоАналитике("20501",ЭтотОбъект.СчетКонтрагента);
	КонецЕсли; 
	
	Если  СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("Размещение средств во вклад (депозит)")) > 0  Тогда
		ЭтотОбъект.СтатьяДвиженияДенежныхСредств  = Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоНаименованию("04530 Рез-ЮЛ_депозиты");
		ЭтотОбъект.ВидОперации                    = Перечисления.ВидыОперацийСписаниеДенежныхСредств.БНФОПеречислениеНаДепозиты;
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	БНФОДоговорыКредитовИДепозитов.Номер КАК Номер,
		|	БНФОДоговорыКредитовИДепозитов.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОДоговорыКредитовИДепозитов КАК БНФОДоговорыКредитовИДепозитов
		|ГДЕ
		|	БНФОДоговорыКредитовИДепозитов.Контрагент = &Контрагент";
		Запрос.УстановитьПараметр("Контрагент",ЭтотОбъект.Контрагент );
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Если  СтрЧислоВхождений(НазначениеПлатежаДляПоиска, Выборка.Номер)>0 Тогда
				ЭтотОбъект.СубконтоДт1                    = Выборка.Ссылка;
				ЭтотОбъект.СтатьяДвиженияДенежныхСредств  = Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоНаименованию("04530 Рез-ЮЛ_депозиты");
				Для каждого Стррсш Из ЭтотОбъект.РасшифровкаПлатежа Цикл
					_20601                                    = pcru_УМФО.ПолучитьСчетПоАналитике("20601",Выборка.Ссылка);
					Если Не ЗначениеЗаполнено(Стррсш.БНФОДоговорКредитаДепозита) Тогда
						Стррсш.БНФОДоговорКредитаДепозита         = Выборка.Ссылка;
					КонецЕсли; 
					Если Не ЗначениеЗаполнено(Стррсш.СчетУчетаРасчетовСКонтрагентом) Тогда
						Стррсш.СчетУчетаРасчетовСКонтрагентом     = _20601;
					КонецЕсли; 
					Если Не ЗначениеЗаполнено(Стррсш.СтатьяДвиженияДенежныхСредств) Тогда
						Стррсш.СтатьяДвиженияДенежныхСредств      = Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоНаименованию("04530 Рез-ЮЛ_депозиты");
					КонецЕсли; 
					Если Не ЗначениеЗаполнено(Стррсш.СуммаВзаиморасчетов ) Тогда
						Стррсш.СуммаВзаиморасчетов                = ЭтотОбъект.СуммаДокумента;
					КонецЕсли; 
					
					Если Не ЗначениеЗаполнено(Стррсш.ВидПлатежаПоКредитамЗаймам) Тогда
						Стррсш.ВидПлатежаПоКредитамЗаймам         = Перечисления.ВидыПлатежейПоКредитамЗаймам.ПогашениеДолга;
					КонецЕсли; 
					
					Если Не ЗначениеЗаполнено(Стррсш.ВидПлатежаПоКредитамЗаймам) Тогда
						Стррсш.ДоговорКонтрагента         = ЭтотОбъект.ДоговорКонтрагента;
					КонецЕсли; 
					
					Если Не ЗначениеЗаполнено(Стррсш.СуммаПлатежа) Тогда
						Стррсш.СуммаПлатежа         = ЭтотОбъект.СуммаДокумента;
					КонецЕсли; 
				КонецЦикла; 
			КонецЕсли; 
		КонецЦикла;
	КонецЕсли; 
	
	Если СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("Оплата ВЫПЛАТА ИЗ БЮДЖЕТА РФ")) > 0 ИЛИ
		СтрЧислоВхождений(НазначениеПлатежаДляПоиска, ВРег("Выплата пособия по ходу за ребенком")) > 0 Тогда
		ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийСписаниеДенежныхСредств.ПрочееСписание;
		ЭтотОбъект.pcru_ex_СтатьяДоходовРасходов = Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("00-000235");
		ЭтотОбъект.СчетУчетаРасчетовСКонтрагентом = Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("6030681001000000000000000");
		ЭтотОбъект.СтатьяДвиженияДенежныхСредств = Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("00-000041");
		ЭтотОбъект.ПодразделениеДт = Справочники.ПодразделенияОрганизаций.НайтиПоКоду("000000005");
		
		Если НЕ pcru_ex_НеМенятьРаспределениеПриПроведении Тогда
			СтрокаРаспределения = ЭтотОбъект.пкру_РаспределениеЗатрат.Добавить();
			СтрокаРаспределения.пкру_CostCentr = ЭтотОбъект.ПодразделениеДт;
			СтрокаРаспределения.пкру_СтатьяРасходов = Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("00-000235");
			СтрокаРаспределения.ТипЗатрат =  Справочники.БНФОСубконто.НайтиПоНаименованию("Тип затрат 2");
			СтрокаРаспределения.Сумма = ЭтотОбъект.СуммаДокумента;
		КонецЕсли; 

	КонецЕсли;
		
		
	
	Если ВидОперации = Перечисления.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеНалога
	 ИЛИ ВидОперации = Перечисления.ВидыОперацийСписаниеДенежныхСредств.ПереводНаДругойСчет
	 ИЛИ ВидОперации = Перечисления.ВидыОперацийСписаниеДенежныхСредств.БНФОПеречислениеНаДепозиты Тогда
		Возврат;
	КонецЕсли;

	Если ДополнительныеСвойства.Свойство("ПропуститьПроверкуЗапретаИзменения") И ДополнительныеСвойства.ПропуститьПроверкуЗапретаИзменения = ИСТИНА Тогда
		Возврат;
	КонецЕсли;
	
	ЧастьСчетаОрганизации = Сред(СокрЛП(СчетОрганизации.НомерСчета), 7, 3);
	Если ЧастьСчетаОрганизации = "106" ИЛИ ЧастьСчетаОрганизации = "107" ИЛИ ЧастьСчетаОрганизации = "108" Тогда
		Возврат;
	КонецЕсли;
		
	Если СуммаДокумента <> пкру_РаспределениеЗатрат.Итог("Сумма") Тогда
		ОбщегоНазначения.СообщитьПользователю("Общая сумма по всем типам затрат НЕ совпадает с общей суммой по документу");
		Отказ = Истина;
		Возврат;
	КонецЕсли;

КонецПроцедуры

&Перед("ОбработкаПроведения")
Процедура pcru_ex_ОбработкаПроведения(Отказ, Режим)
	Если НЕ ЗначениеЗаполнено(ЭтотОбъект.СчетУчетаРасчетовСКонтрагентом) Тогда
		Отказ = Истина;
		Для каждого СтрокаРасшифровки Из ЭтотОбъект.РасшифровкаПлатежа Цикл
			Если ЗначениеЗаполнено(СтрокаРасшифровки.СчетУчетаРасчетовСКонтрагентом) Тогда
				Отказ = Ложь;
			Иначе
				Отказ = Истина;
			КонецЕсли;
		КонецЦикла; 
	КонецЕсли;
	
КонецПроцедуры

//&Вместо("БНФОПодготовитьПроведениеПоДаннымИБСформироватьДвиженияПоРегистрам")
Процедура pcru_ex_БНФОПодготовитьПроведениеПоДаннымИБСформироватьДвиженияПоРегистрам(Отказ)
	ПараметрыПроведения = Документы.СписаниеСРасчетногоСчета.БНФОПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// Подготовка проведения по данным информационной базы.
	ТаблицаВзаиморасчеты = БНФОУчетВзаиморасчетов.ПодготовитьТаблицуВзаиморасчетовПогашениеЗадолженности(
	ПараметрыПроведения.РасшифровкаПлатежа, ПараметрыПроведения.Реквизиты, Отказ);
	
	ТаблицаВзаиморасчетыСПодотчетнымиЛицами = БНФОУчетВзаиморасчетов.ПодготовитьТаблицуВзаиморасчетовПогашениеЗадолженностиСПодотчетнымиЛицами(
	ПараметрыПроведения.РасшифровкаПлатежаСПодотчетнымиЛицами,
	ПараметрыПроведения.Реквизиты, Отказ);			
	
	// Таблицы НДС с авансов.
	ТаблицаНДСсАвансов = БНФОУчетНДС.ПолучитьТаблицуСписанныйНДСсАвансов(ТаблицаВзаиморасчеты, 
	ПараметрыПроведения.Реквизиты);		
	
	ТаблицаНДСПодлежащийВычетуСАвансов = БНФОУчетНДС.ПодготовитьТаблицуНДСПодлежащийВычетуСАвансов(ПараметрыПроведения.Реквизиты, ТаблицаВзаиморасчеты, ТаблицаНДСсАвансов);
	
	ТаблицыУплатаНалогов = Новый Структура("ПеречислениеНалогов, ПеречислениеНДФЛ",
	ПараметрыПроведения.РасшифровкаПлатежаПрочее, ПараметрыПроведения.ПеречислениеНДФЛ);
	
	
	// {++НФО}
	
	// Структура таблиц для отражения в налоговом учете УСН
	ТаблицаВыплатаЗарплаты   = УчетЗарплаты.ПолучитьТаблицуВыплатыЗарплатыДляУСН(ПараметрыПроведения.ПеречислениеЗарплаты);
	ТаблицаВыплатаДепонентов = УчетЗарплаты.ПолучитьТаблицуВыплатыЗарплатыДляУСН(ПараметрыПроведения.ПеречислениеДепонентов);
	
	СтруктураТаблицУСН = Новый Структура;
	// Начало изменений (Аудит-Эскорт, СИМ, 04.12.2017) >>
	//СтруктураТаблицУСН.Вставить("ТаблицаРасчетов",          ТаблицаВзаиморасчеты);
	АЭ_ТаблицаВзаиморасчеты = АЭ_КредитныйПотребительскийКооператив.ИсключитьДоговорыПоЧленскимВзносамИзТаблицыНДС(ТаблицаВзаиморасчеты);	
	СтруктураТаблицУСН.Вставить("ТаблицаРасчетов",          АЭ_ТаблицаВзаиморасчеты);
	// Конец изменений (Аудит-Эскорт, СИМ, 04.12.2017) <<
	СтруктураТаблицУСН.Вставить("ТаблицаВыплатаЗарплаты",   ТаблицаВыплатаЗарплаты);
	СтруктураТаблицУСН.Вставить("ТаблицаПеречислениеНДФЛ",  ПараметрыПроведения.ПеречислениеНДФЛ);
	СтруктураТаблицУСН.Вставить("ТаблицаВыплатаДепонентов", ТаблицаВыплатаДепонентов);
	СтруктураТаблицУСН.Вставить("ТаблицаРасчетовСПодотчетнымиЛицами",  ТаблицаВзаиморасчетыСПодотчетнымиЛицами);
	
	// {/++НФО}	
	
	Если Не ПроведениеСервер.ГрупповоеПерепроведение(ЭтотОбъект) Тогда
		ТаблицаСтатусовСчетов = СтатусыДокументов.ПодготовитьТаблицуСтатусовОплатыСчетов(
		ПараметрыПроведения.ОплатаСчетов, ПараметрыПроведения.Реквизиты);
	КонецЕсли;
	
	// Формирование движений.
	БНФОУчетВзаиморасчетов.СформироватьДвиженияПогашениеЗадолженности(ТаблицаВзаиморасчеты,
	ПараметрыПроведения.Реквизиты, Движения, Отказ);
	
	БНФОУчетДенежныхСредств.СформироватьДвиженияПрочееСписание(ПараметрыПроведения.РасшифровкаПлатежаПрочее,
	ПараметрыПроведения.Реквизиты, Движения, Отказ);			
	
	// Начало изменений (Аудит-Эскорт, СИМ, 04.12.2017) >>
	АЭ_ТаблицаНДСсАвансов = АЭ_КредитныйПотребительскийКооператив.ИсключитьДоговорыПоЧленскимВзносамИзТаблицыНДС(ТаблицаНДСсАвансов);
	АЭ_ТаблицаНДСПодлежащийВычетуСАвансов = АЭ_КредитныйПотребительскийКооператив.ИсключитьДоговорыПоЧленскимВзносамИзТаблицыНДС(ТаблицаНДСПодлежащийВычетуСАвансов);
	// Конец изменений (Аудит-Эскорт, СИМ, 04.12.2017) <<
	
	// Учет НДС. Движения по зачету полученного аванса.		
	БНФОУчетНДС.СформироватьДвиженияНДСсАвансовЗачетПолученногоАванса(
	ПараметрыПроведения.Реквизиты,
	// Начало изменений (Аудит-Эскорт, СИМ, 04.12.2017) >>
	//ТаблицаНДСсАвансов, Движения, Отказ, Истина);
	АЭ_ТаблицаНДСсАвансов, Движения, Отказ, Истина);
	// Конец изменений (Аудит-Эскорт, СИМ, 04.12.2017) <<
	
	// Учет НДС. Движения по зачету задолженности для целей учета НДС уплаченного.
	// Начало изменений (Аудит-Эскорт, СИМ, 04.12.2017) >>
	//БНФОУчетНДС.СформироватьНДСОплаченныйПриПогашенииЗадолженности(ТаблицаВзаиморасчеты,
	БНФОУчетНДС.СформироватьНДСОплаченныйПриПогашенииЗадолженности(АЭ_ТаблицаВзаиморасчеты,
	// Конец изменений (Аудит-Эскорт, СИМ, 04.12.2017) <<
	ПараметрыПроведения.Реквизиты, Движения, Отказ);
	
	// Учет НДС. Движения по зачету задолженности для целей учета НДС уплаченного (подотчетники).		
	БНФОУчетНДС.СформироватьНДСОплаченныйПриПогашенииЗадолженности(ТаблицаВзаиморасчетыСПодотчетнымиЛицами,
	ПараметрыПроведения.Реквизиты, Движения, Отказ);
	
	БНФОУчетНДС.СформироватьДвиженияРеализацияТоваровУслугНДСПодлежащийВычетуСАвансов(
	// Начало изменений (Аудит-Эскорт, СИМ, 04.12.2017) >>
	//ТаблицаНДСПодлежащийВычетуСАвансов,
	АЭ_ТаблицаНДСПодлежащийВычетуСАвансов,
	// Конец изменений (Аудит-Эскорт, СИМ, 04.12.2017) <<
	ТаблицаНДСсАвансов,
	ПараметрыПроведения.Реквизиты,
	Движения, Отказ);
	
	БНФОУчетВзаиморасчетов.СформироватьДвиженияПогашениеЗадолженностиСПодотчетнымиЛицами(ТаблицаВзаиморасчетыСПодотчетнымиЛицами,
	ПараметрыПроведения.Реквизиты, Движения, Отказ);
	
	БНФОУчетНДС.СформироватьДвиженияКурсовыеРазницыНалоговыйАгент(
	ПараметрыПроведения.Реквизиты, ТаблицаВзаиморасчеты, Движения, Отказ);
	
	БНФОУчетНДСРаздельный.СформироватьДвиженияКурсовыеРазницыНалоговыйАгент(
	ПараметрыПроведения.Реквизиты, ТаблицаВзаиморасчеты, Движения, Отказ);
	
	
	// {++НФО}
	
	БНФОУчетЗарплаты.СформироватьДвиженияПеречислениеВыплатаЗарплаты(ЭтотОбъект, ПараметрыПроведения.ПеречислениеЗарплаты,
	ПараметрыПроведения.Реквизиты, Движения, Отказ);
	
	// УСН
	БНФОНалоговыйУчетУСН.СформироватьДвиженияУСН(ЭтотОбъект, СтруктураТаблицУСН);
	
	// Переоценка валютных остатков - после формирования проводок всеми другими механизмами
	ТаблицаПереоценка = БНФОУчетДоходовРасходов.ПодготовитьТаблицуПереоценкаВалютныхОстатковПоПроводкамДокумента(
	ПараметрыПроведения.Реквизиты, Движения, Отказ);
	
	БНФОУчетДоходовРасходов.СформироватьДвиженияПереоценкаВалютныхОстатков(ТаблицаПереоценка,
	ПараметрыПроведения.Реквизиты, Движения, Отказ);	
	
	БНФОУчетЗарплаты.СформироватьДвиженияПоНалогамИВзносамСФОТ(ТаблицыУплатаНалогов,
	ПараметрыПроведения.Реквизиты, Движения, Отказ);
	// {/++НФО}
	
	// Вспомогательные регистры. Заполнение счета учета взаиморасчетов в регистре Значение параметров операций.
	Попытка
		БНФОЗначенияПараметровОпераций.ЗаписатьСчетУчетаВзаиморасчетовСписаниеСРасчетногоСчета(ПараметрыПроведения.ДокументСсылка,
		ТаблицаВзаиморасчеты);
	Исключение
	КонецПопытки; 
	
	Если НЕ ПроведениеСервер.ГрупповоеПерепроведение(ЭтотОбъект) Тогда
		СтатусыДокументов.СформироватьДвиженияСтатусовДокументов(
		ТаблицаСтатусовСчетов, ПараметрыПроведения.Реквизиты);
	КонецЕсли;
	
	ПроведениеСервер.УстановитьЗаписьОчищаемыхНаборовЗаписей(ЭтотОбъект);
	
	Движения.Записать();
	
КонецПроцедуры

