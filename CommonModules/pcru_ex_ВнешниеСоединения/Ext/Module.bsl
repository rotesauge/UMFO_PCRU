Функция ПолучитьCOMОбъектПоВерсииПлатформы() Экспорт
	
	// Определяем имя COM-объекта по версии платформы
	ИмяComОбъекта = "";
	Инфо = Новый СистемнаяИнформация;
	Если СтрНайти(Инфо.ВерсияПриложения, "8.3") > 0 Тогда
		ИмяComОбъекта = "V83.COMConnector";
	ИначеЕсли СтрНайти(Инфо.ВерсияПриложения, "8.2") > 0 Тогда
		ИмяComОбъекта = "V82.COMConnector";
	Иначе
		ВызватьИсключение "Не удалось определить версию платформы";
	КонецЕсли;
	
	// Инициализируем COM-объект и соединение
	COMConnector = Новый COMОбъект(ИмяComОбъекта);
	
	Возврат COMConnector;
	
КонецФункции


// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция СоздатьВнешнееСоединение(Тип,ИмяБазы) Экспорт
	
	Если Тип = "1S" Тогда
		СтрокаПодключения = СтрокаПодключения(Тип,ИмяБазы);
		ComConnector = ПолучитьCOMОбъектПоВерсииПлатформы();
		СообщениеПользователю = Новый СообщениеПользователю;
		Попытка
			ComConnection = COMConnector.Connect(СтрокаПодключения);
		Исключение
			СообщениеПользователю.Текст = "Ошибка подключения: " + ОписаниеОшибки();
			СообщениеПользователю.Сообщить();
		КонецПопытки;
		Возврат ComConnection;
	КонецЕсли; 
	
	Если Тип = "SQL" Тогда
		СтрокаПодключения = СтрокаПодключения(Тип,ИмяБазы);
		Connection= Новый COMОбъект("ADODB.Connection");
		Command= Новый COMОбъект("ADODB.Command");
		Connection.ConnectionString =СтрокаПодключения;	 
		Connection.Open();
		Command.ActiveConnection = Connection;
		Возврат Command;
	КонецЕсли; 
	
КонецФункции // ()


// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция СтрокаПодключения(Тип,ИмяБазы) Экспорт
	
	СтруктруктураПараметровБазы = ПолучитьСтруктруктуруПараметровБазы(ИмяБазы);
	
	Если Тип = "1S" Тогда
		//		СтрокаПодключения = "srvr='RUSPBPACC01'; ref='1c_zup'; usr='user'; pwd='1Cadmin';";
		СтрокаПодключения = "srvr='"+СтруктруктураПараметровБазы.Сервер+"'; ref='"+СтруктруктураПараметровБазы.База+"'; usr='"+СтруктруктураПараметровБазы.Пользователь+"'; pwd='"+СтруктруктураПараметровБазы.Пароль+"';";
		Возврат СтрокаПодключения;
	КонецЕсли; 
	
	Если Тип = "SQL" Тогда
		СтрокаПодключения = 
		"Provider=MSDASQL.1;
		|UID="+СтруктруктураПараметровБазы.Пользователь+";
		|Pwd="+СтруктруктураПараметровБазы.Пароль+";
		|Extended Properties=""DRIVER=SQL Server;
		|SERVER="+СтруктруктураПараметровБазы.Сервер+";
		|APP=1С Reglament Job;
		|DATABASE="+СтруктруктураПараметровБазы.База+"""";
		Возврат СтрокаПодключения;
	КонецЕсли; 
	
КонецФункции // ()


// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ПолучитьСтруктруктуруПараметровБазы(ИмяБазы) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	pcru_ex_ВнешниеИнформационныеБазы.Сервер КАК Сервер,
	|	pcru_ex_ВнешниеИнформационныеБазы.База КАК База,
	|	pcru_ex_ВнешниеИнформационныеБазы.Пользователь КАК Пользователь,
	|	pcru_ex_ВнешниеИнформационныеБазы.Пароль КАК Пароль
	|ИЗ
	|	Справочник.pcru_ex_ВнешниеИнформационныеБазы КАК pcru_ex_ВнешниеИнформационныеБазы
	|ГДЕ
	|	pcru_ex_ВнешниеИнформационныеБазы.Наименование = &Наименование";
	Запрос.УстановитьПараметр("Наименование",ИмяБазы);
	Выборка = Запрос.Выполнить().Выбрать();
	Стк = Новый Структура;
	Пока Выборка.Следующий() Цикл
		Стк.Вставить("База",Выборка.База);
		Стк.Вставить("Сервер",Выборка.Сервер);
		Стк.Вставить("Пользователь",Выборка.Пользователь);
		Стк.Вставить("Пароль",Выборка.Пароль);
		Возврат Стк;
	КонецЦикла;
	Стк.Вставить("База","");
	Стк.Вставить("Сервер","");
	Стк.Вставить("Пользователь","");
	Стк.Вставить("Пароль","");
	Возврат Стк;
КонецФункции // ()


//Функция ПолучитьПараметрыПодключенияКВнешнейИБ() Экспорт 
//	
//	Запрос = Новый Запрос; 
//	Запрос.Текст = "ВЫБРАТЬ
//	|	pcru_ex_ВнешниеИнформационныеБазы.Сервер КАК Сервер,
//	|	pcru_ex_ВнешниеИнформационныеБазы.База КАК ИмяВнешнейБД,
//	|	pcru_ex_ВнешниеИнформационныеБазы.Пользователь КАК Логин,
//	|	pcru_ex_ВнешниеИнформационныеБазы.Пароль КАК Пароль,
//	|	ЛОЖЬ КАК АутентификацияОС
//	|ИЗ
//	|	Справочник.pcru_ex_ВнешниеИнформационныеБазы КАК pcru_ex_ВнешниеИнформационныеБазы
//	|ГДЕ
//	|	pcru_ex_ВнешниеИнформационныеБазы.Наименование = &Наименование"; 
//	
//	
//	Запрос.УстановитьПараметр("Наименование","NAV");
//	
//	Результат = Запрос.Выполнить(); 
//	
//	Если Результат.Пустой() Тогда 
//		Сообщить("Не указаны настройки для подключения к внешнему источнику данных"); 
//		Возврат Неопределено;
//		
//	КонецЕсли; 
//	Выборка = Результат.Выбрать(); 
//	Выборка.Следующий(); 
//	ПараметрыПодключения = Новый Структура; 
//	
//	Если Выборка.АутентификацияОС Тогда 
//		ПараметрыПодключения.Вставить("СтрокаСоединения", "DRIVER={SQL Server};SERVER="+Выборка.Сервер+";Trusted_Connection=yes;DATABASE="+Выборка.ИмяВнешнейБД+";LANGUAGE=русский"); 
//		ПараметрыПодключения.Вставить("Логин", ""); 
//		ПараметрыПодключения.Вставить("Пароль", ""); 
//	Иначе
//		ПараметрыПодключения.Вставить("СтрокаСоединения", "DRIVER={SQL Server};SERVER="+Выборка.Сервер+";"+"UID="+Выборка.Логин+";PWD="+Выборка.Пароль+";DATABASE="+Выборка.ИмяВнешнейБД+";LANGUAGE=русский"); 
//		ПараметрыПодключения.Вставить("Логин", Выборка.Логин); 
//		ПараметрыПодключения.Вставить("Пароль", Выборка.Пароль); 
//	КонецЕсли; 
//	ПараметрыПодключения.Вставить("АутентификацияОС", Выборка.АутентификацияОС); 
//	Возврат ПараметрыПодключения;
//	
//КонецФункции 

Процедура ПодключитьсяКВнешнемуИсточникуДанныхMSSqlServer(СтрокаСоединения, Логин, Пароль, АутентификацияОС) Экспорт 
	ПараметрыСоединения = ВнешниеИсточникиДанных.Демо.ПолучитьОбщиеПараметрыСоединения(); 
	ПараметрыСоединения.АутентификацияСтандартная = Не АутентификацияОС; 
	ПараметрыСоединения.АутентификацияОС = АутентификацияОС; 
	ПараметрыСоединения.ИмяПользователя = Логин; 
	ПараметрыСоединения.Пароль = Пароль; 
	ПараметрыСоединения.СтрокаСоединения = СтрокаСоединения; 
	ПараметрыСоединения.СУБД = "MSSQLServer"; 
	Попытка ВнешниеИсточникиДанных.Демо.УстановитьОбщиеПараметрыСоединения(ПараметрыСоединения); 
		ВнешниеИсточникиДанных.Демо.УстановитьПараметрыСоединенияПользователя(ИмяПользователя(),ПараметрыСоединения); 
		ВнешниеИсточникиДанных.Демо.УстановитьПараметрыСоединенияСеанса(ПараметрыСоединения); 
		ВнешниеИсточникиДанных.Демо.УстановитьСоединение(); 
		Сообщить("Подключение к внешнему источнику данных выполнено успешно"); 
	Исключение Сообщить("Не удалось подключиться к внешнему источнику данных"); 
	КонецПопытки;
КонецПроцедуры

Процедура ПодключитьИБ()Экспорт
	
	Сост = ВнешниеИсточникиДанных.NAV.ПолучитьСостояние();
	
	Если Сост = СостояниеВнешнегоИсточникаДанных.Отключен Тогда
		Запрос = Новый Запрос; 
		Запрос.Текст = "ВЫБРАТЬ
		|	pcru_ex_ВнешниеИнформационныеБазы.Сервер КАК Сервер,
		|	pcru_ex_ВнешниеИнформационныеБазы.База КАК ИмяВнешнейБД,
		|	pcru_ex_ВнешниеИнформационныеБазы.Пользователь КАК Логин,
		|	pcru_ex_ВнешниеИнформационныеБазы.Пароль КАК Пароль,
		|	ЛОЖЬ КАК АутентификацияОС
		|ИЗ
		|	Справочник.pcru_ex_ВнешниеИнформационныеБазы КАК pcru_ex_ВнешниеИнформационныеБазы
		|ГДЕ
		|	pcru_ex_ВнешниеИнформационныеБазы.Наименование = &Наименование"; 
		Запрос.УстановитьПараметр("Наименование","NAV");
		Результат = Запрос.Выполнить(); 
		Если Результат.Пустой() Тогда 
			Сообщить("Не указаны настройки для подключения к внешнему источнику данных"); 
			Возврат;
		КонецЕсли; 
		Выборка = Результат.Выбрать(); 
		Выборка.Следующий(); 
		
		ПараметрыСоединения = ВнешниеИсточникиДанных.NAV.ПолучитьОбщиеПараметрыСоединения(); 
		ПараметрыСоединения.АутентификацияСтандартная = Истина; 
		ПараметрыСоединения.АутентификацияОС = Ложь; 
		ПараметрыСоединения.ИмяПользователя = Выборка.Логин; 
		ПараметрыСоединения.Пароль = Выборка.Пароль; 
		ПараметрыСоединения.СтрокаСоединения = "DRIVER={SQL Server Native Client 11.0};SERVER=RUSPBSQL01\CRMRU;UID=1c_test;PWD=tset_c1;APP={1С Reglament Job};DATABASE=PROFICREDIT;LANGUAGE=русский"; 
		ПараметрыСоединения.СУБД = Выборка.ИмяВнешнейБД; 
		
		ВнешниеИсточникиДанных.NAV.УстановитьОбщиеПараметрыСоединения(ПараметрыСоединения);
		ВнешниеИсточникиДанных.NAV.УстановитьПараметрыСоединенияПользователя(ИмяПользователя(),ПараметрыСоединения); 
		ВнешниеИсточникиДанных.NAV.УстановитьПараметрыСоединенияСеанса(ПараметрыСоединения); 
		ВнешниеИсточникиДанных.NAV.УстановитьСоединение();
	КонецЕсли; 
	
	
	//ПараметрыПодключения = ПолучитьПараметрыПодключенияКВнешнейИБ();
	//Если ПараметрыПодключения <> Неопределено	Тогда 
	//	ПодключитьсяКВнешнемуИсточникуДанныхMSSqlServer(ПараметрыПодключения.СтрокаСоединения, ПараметрыПодключения.Логин, ПараметрыПодключения.Пароль, ПараметрыПодключения.АутентификацияОС); 
	//КонецЕсли;
	
	
КонецПроцедуры // ПОдключитьИБ()
