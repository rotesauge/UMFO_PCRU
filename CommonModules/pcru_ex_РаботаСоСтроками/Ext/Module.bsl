Функция УдаляемНечисла(НашаСтрокаДляРазбора)
	ОбработаннаяСтрокаСтр = СокрЛП(НашаСтрокаДляРазбора);
	РезультатРаботы = ОбработаннаяСтрокаСтр;
	Для н=1 по СтрДлина(ОбработаннаяСтрокаСтр) Цикл
		ТекСимвол = Сред(ОбработаннаяСтрокаСтр,н,1);
		Если Найти("0123456789",ТекСимвол) = 0 Тогда
			РезультатРаботы = СтрЗаменить(РезультатРаботы,ТекСимвол,""); 
		КонецЕсли; 
	КонецЦикла; 
	Возврат РезультатРаботы;
КонецФункции

// Возвращает массив цифр в виде стоковых символов
//
Функция ПолучитьМассивЦифровыхСимволов() Экспорт
	
	МассивЦифр = Новый Массив();
	
	МассивЦифр.Добавить("0");
	МассивЦифр.Добавить("1");
	МассивЦифр.Добавить("2");
	МассивЦифр.Добавить("3");
	МассивЦифр.Добавить("4");
	МассивЦифр.Добавить("5");
	МассивЦифр.Добавить("6");
	МассивЦифр.Добавить("7");
	МассивЦифр.Добавить("8");
	МассивЦифр.Добавить("9");
	
	Возврат МассивЦифр;
	
КонецФункции

// Возвращает Истину, если в передаваемой строке есть что-то кроме цифр
//
Функция ЕстьНеЦифры(Строка) Экспорт
	
	МассивЦифр = ПолучитьМассивЦифровыхСимволов();
	
	ЕстьНеЦифры = Ложь;
	Для ъ = 1 По СтрДлина(Строка) Цикл
		Символ = Сред(Строка, ъ, 1);
		Если МассивЦифр.Найти(Символ) = Неопределено Тогда
			ЕстьНеЦифры = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ЕстьНеЦифры;
	
КонецФункции

// Возвращает строку, в которой убирает любые символы, кроме цифр
//
Функция ПолучитьТолькоЦифры(Строка) Экспорт
	
	//МассивЦифр = ПолучитьМассивЦифровыхСимволов();
	//
	//Для ъ = 1 По СтрДлина(Строка) Цикл
	//	Символ = Сред(Строка, ъ, 1);
	//	Если МассивЦифр.Найти(Символ) = Неопределено Тогда
	//		Строка = СтрЗаменить(Строка, Символ, " ");
	//	КонецЕсли;
	//КонецЦикла;
	//Строка = СтрЗаменить(Строка, " ", "");
	
	
	ВозвращаемаяСтрока = ""; 
	МассивЦифр = ПолучитьМассивЦифровыхСимволов();
	
	Для ъ = 1 По СтрДлина(Строка) Цикл
		Символ = Сред(Строка, ъ, 1);
		
		Если МассивЦифр.Найти(Символ) = Неопределено Тогда
			Продолжить;
		КонецЕсли; 
		
		ВозвращаемаяСтрока = ВозвращаемаяСтрока + Сред(Строка, ъ, 1);
	КонецЦикла;
	
	Возврат ВозвращаемаяСтрока;

	
КонецФункции

// Возвращает Истину, если в передаваемой строке есть буквы
//
Функция ЕстьБуква(Строка) Экспорт
	
	МассивБукв = ПолучитьМассивБукв();
	ЕстьБуква = Ложь;
	Для ъ=1 По СтрДлина(Строка) Цикл
		Буква = ВРег(Сред(Строка, ъ, 1));
		Если МассивБукв.Найти(Буква) <> Неопределено Тогда
			ЕстьБуква = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Возврат ЕстьБуква;
	
КонецФункции

// Просто возвращает массив наших и латинских букв
//
Функция ПолучитьМассивБукв() Экспорт
	
	МассивБукв = Новый Массив;
	
	МассивБукв.Добавить("А");
	МассивБукв.Добавить("Б");
	МассивБукв.Добавить("В");
	МассивБукв.Добавить("Г");
	МассивБукв.Добавить("Д");
	МассивБукв.Добавить("Е");
	МассивБукв.Добавить("Ё");
	МассивБукв.Добавить("Ж");
	МассивБукв.Добавить("З");
	МассивБукв.Добавить("И");
	МассивБукв.Добавить("Й");
	МассивБукв.Добавить("К");
	МассивБукв.Добавить("Л");
	МассивБукв.Добавить("М");
	МассивБукв.Добавить("Н");
	МассивБукв.Добавить("О");
	МассивБукв.Добавить("П");
	МассивБукв.Добавить("Р");
	МассивБукв.Добавить("С");
	МассивБукв.Добавить("Т");
	МассивБукв.Добавить("У");
	МассивБукв.Добавить("Ф");
	МассивБукв.Добавить("Х");
	МассивБукв.Добавить("Ц");
	МассивБукв.Добавить("Ч");
	МассивБукв.Добавить("Ш");
	МассивБукв.Добавить("Щ");
	МассивБукв.Добавить("Ъ");
	МассивБукв.Добавить("Ы");
	МассивБукв.Добавить("Ь");
	МассивБукв.Добавить("Э");
	МассивБукв.Добавить("Ю");
	МассивБукв.Добавить("Я");
	МассивБукв.Добавить("І");
	МассивБукв.Добавить("Ї");
	МассивБукв.Добавить("Є");
	МассивБукв.Добавить("Ґ");
	
	МассивБукв.Добавить("A");
	МассивБукв.Добавить("B");
	МассивБукв.Добавить("C");
	МассивБукв.Добавить("D");
	МассивБукв.Добавить("E");
	МассивБукв.Добавить("F");
	МассивБукв.Добавить("G");
	МассивБукв.Добавить("H");
	МассивБукв.Добавить("I");
	МассивБукв.Добавить("J");
	МассивБукв.Добавить("K");
	МассивБукв.Добавить("L");
	МассивБукв.Добавить("M");
	МассивБукв.Добавить("N");
	МассивБукв.Добавить("O");
	МассивБукв.Добавить("P");
	МассивБукв.Добавить("Q");
	МассивБукв.Добавить("R");
	МассивБукв.Добавить("S");
	МассивБукв.Добавить("T");
	МассивБукв.Добавить("U");
	МассивБукв.Добавить("V");
	МассивБукв.Добавить("W");
	МассивБукв.Добавить("X");
	МассивБукв.Добавить("Y");
	МассивБукв.Добавить("Z");
	
	Возврат МассивБукв;
	
КонецФункции

// Из передаваемой строки убираются любые не буквенные символы
//
Функция ПолучитьТолькоБуквы(Строка) Экспорт
	
	ВозвращаемаяСтрока = ""; 
	МассивБукв = ПолучитьМассивБукв();
	
	Для ъ = 1 По СтрДлина(Строка) Цикл
		Буква = ВРег(Сред(Строка, ъ, 1));
		
		Если МассивБукв.Найти(Буква) = Неопределено Тогда
			Продолжить;
		КонецЕсли; 
		
		ВозвращаемаяСтрока = ВозвращаемаяСтрока + Сред(Строка, ъ, 1);
	КонецЦикла;
	
	Возврат ВозвращаемаяСтрока;
	
КонецФункции


// Из передаваемого месяца строкой 
// получаем число
// 
//
// Параметры:
//  СтрокаМесяц  - <Тип.Строка> - Наименование месяца строкой
//  в любом падеже
// Возвращаемое значение:
//   <Тип.Число>   - Месяц числом
//
Функция МесяцИзСтрокиВЧисло(СтрокаМесяц) Экспорт
	ЧислоМесяц = Неопределено;
	Если СтрЧислоВхождений(ВРЕГ(СтрокаМесяц),"ЯНВ") > 0 Тогда
		ЧислоМесяц = 1; 
	КонецЕсли;
	Если СтрЧислоВхождений(ВРЕГ(СтрокаМесяц),"ФЕР") > 0 Тогда
		ЧислоМесяц = 2; 
	КонецЕсли;
	Если СтрЧислоВхождений(ВРЕГ(СтрокаМесяц),"МАР") > 0 Тогда
		ЧислоМесяц = 3; 
	КонецЕсли;
	Если СтрЧислоВхождений(ВРЕГ(СтрокаМесяц),"АПР") > 0 Тогда
		ЧислоМесяц = 4; 
	КонецЕсли;
	Если СтрЧислоВхождений(ВРЕГ(СтрокаМесяц),"МАЯ") > 0 Тогда
		ЧислоМесяц = 5; 
	КонецЕсли;
	Если СтрЧислоВхождений(ВРЕГ(СтрокаМесяц),"МАЙ") > 0 Тогда
		ЧислоМесяц = 5; 
	КонецЕсли;
	Если СтрЧислоВхождений(ВРЕГ(СтрокаМесяц),"ИЮН") > 0 Тогда
		ЧислоМесяц = 6; 
	КонецЕсли;
	Если СтрЧислоВхождений(ВРЕГ(СтрокаМесяц),"ИЮЛ") > 0 Тогда
		ЧислоМесяц = 7; 
	КонецЕсли;
	Если СтрЧислоВхождений(ВРЕГ(СтрокаМесяц),"АВГ") > 0 Тогда
		ЧислоМесяц = 8; 
	КонецЕсли;
	Если СтрЧислоВхождений(ВРЕГ(СтрокаМесяц),"СЕН") > 0 Тогда
		ЧислоМесяц = 9; 
	КонецЕсли;
	Если СтрЧислоВхождений(ВРЕГ(СтрокаМесяц),"ОКТ") > 0 Тогда
		ЧислоМесяц = 10; 
	КонецЕсли;
	Если СтрЧислоВхождений(ВРЕГ(СтрокаМесяц),"НОЯ") > 0 Тогда
		ЧислоМесяц = 11; 
	КонецЕсли;
	Если СтрЧислоВхождений(ВРЕГ(СтрокаМесяц),"ДЕК") > 0 Тогда
		ЧислоМесяц = 12; 
	КонецЕсли;
	возврат	ЧислоМесяц; 
КонецФункции // МесяцИзСтрокиВЧисло()

Функция ПолучитьДатуИзСтроки(Стр,Амер=Ложь)Экспорт 
	Д = Дата("00010101000000");
	Если ПустаяСтрока(Стр) Тогда
		Возврат Д;
	КонецЕсли;
	Если Найти(Стр,".") > 0 Тогда
		Если Найти(Стр,":") > 0 И Найти(Стр," ") > 0 Тогда 
			М = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Стр," ");
			Возврат ПолучитьДатуИзСтроки(М[0]);
		КонецЕсли;
		М = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Стр,".");
	ИначеЕсли Найти(Стр,"/")>0 Тогда
		М = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Стр,"/");
	ИначеЕсли Найти(Стр,",")>0 Тогда
		М = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Стр,",");
	ИначеЕсли Найти(Стр,"-")>0 Тогда
		М = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Стр,"-");
	КонецЕсли; 
	Попытка
		Если М.Количество() = 3 Тогда //"01.02.13" или "01.02.2013"
			//Год = ?(СтрДлина(М[2]) = 2,2000 + М[2],М[2]);
			
			СтрокаГода = ?(СтрДлина(М[2]) = 2,2000 + М[2],М[2]);
			МассивГодов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрокаГода, " ");
			Год = МассивГодов[0];
			Д = ?(Амер,Дата(Год,М[0],М[1]),Дата(Год,М[1],М[0]));
		ИначеЕсли М.Количество() = 2 Тогда //"02.13" или "02.2013";
			//Год = ?(СтрДлина(М[1]) = 2,2000 + М[1],М[1]);
			СтрокаГода = ?(СтрДлина(М[1]) = 2,2000 + М[1],М[1]);
			МассивГодов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрокаГода, " ");
			Год = МассивГодов[0];
			
			Д = Дата(Год,М[0],1);
		КонецЕсли;
	Исключение
	КонецПопытки; 
	Возврат Д; 
КонецФункции

//Разбивает строку на несколько строк по разделителю. Разделитель может иметь любую длину.
//
//Параметры:
//	Строка                 - Строка - текст с разделителями;
//	Разделитель            - Строка - разделитель строк текста, минимум 1 символ;
//	ПропускатьПустыеСтроки - Булево - признак необходимости включения в результат пустых строк.
//    Если параметр не задан, то функция работает в режиме совместимости со своей предыдущей версией:
//     - для разделителя-пробела пустые строки не включаются в результат, для остальных разделителей пустые строки
//       включаются в результат.
//     - если параметр Строка не содержит значащих символов или не содержит ни одного символа (пустая строка), то в
//       случае разделителя-пробела результатом функции будет массив, содержащий одно значение "" (пустая строка), а
//       при других разделителях результатом функции будет пустой массив.
//
// Возвращаемое значение:
//	Массив - массив строк.
//
//Примеры:
//	РазложитьСтрокуВМассивПодстрок(",один,,два,", ",") - возвратит массив из 5 элементов, три из которых  - пустые строки;
//	РазложитьСтрокуВМассивПодстрок(",один,,два,", ",", Истина) - возвратит массив из двух элементов;
//	РазложитьСтрокуВМассивПодстрок(" один   два  ", " ") - возвратит массив из двух элементов;
//	РазложитьСтрокуВМассивПодстрок("") - возвратит пустой массив;
//	РазложитьСтрокуВМассивПодстрок("",,Ложь) - возвратит массив с одним элементом "" (пустой строкой);
//	РазложитьСтрокуВМассивПодстрок("", " ") - возвратит массив с одним элементом "" (пустой строкой);
//
Функция РазложитьСтрокуВМассивПодстрок(Знач Строка, Знач Разделитель = ",", Знач ПропускатьПустыеСтроки = Неопределено, СокращатьНепечатаемыеСимволы = Ложь)Экспорт
	
	Результат = Новый Массив;
	
	// Для обеспечения обратной совместимости.
	Если ПропускатьПустыеСтроки = Неопределено Тогда
		ПропускатьПустыеСтроки = ?(Разделитель = " ", Истина, Ложь);
		Если ПустаяСтрока(Строка) Тогда 
			Если Разделитель = " " Тогда
				Результат.Добавить("");
			КонецЕсли;
			Возврат Результат;
		КонецЕсли;
	КонецЕсли;
	
	Позиция = Найти(Строка, Разделитель);
	Пока Позиция > 0 Цикл
		Подстрока = Лев(Строка, Позиция - 1);
		Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Подстрока) Тогда
			Если СокращатьНепечатаемыеСимволы Тогда
				Результат.Добавить(СокрЛП(Подстрока));
			Иначе
				Результат.Добавить(Подстрока);
			КонецЕсли;
		КонецЕсли;
		Строка = Сред(Строка, Позиция + СтрДлина(Разделитель));
		Позиция = Найти(Строка, Разделитель);
	КонецЦикла;
	
	Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Строка) Тогда
		Если СокращатьНепечатаемыеСимволы Тогда
			Результат.Добавить(СокрЛП(Строка));
		Иначе
			Результат.Добавить(Строка);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции


