Функция НайтиУсловияКредитаВСтроке(СтрокаСНомером)Экспорт
	УстановитьПривилегированныйРежим(Истина);
	ИсходныйТекст = СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрокаСНомером," ",Символы.ПС),"№",Символы.ПС),"N",Символы.ПС);
	Для Счетчик = 1 По СтрЧислоСтрок(ИсходныйТекст) Цикл
		ТекСтрока = СтрПолучитьСтроку(ИсходныйТекст, Счетчик);
		Если СтрДлина(ТекСтрока) = 10 Тогда
			НовУслСС  = Справочники.БНФОДоговорыКредитовИДепозитов.НайтиПоРеквизиту("Номер",ТекСтрока);
			Если ЗначениеЗаполнено(НовУслСС) Тогда
				Возврат НовУслСС;
			КонецЕсли; 
		КонецЕсли; 
	КонецЦикла;
	ВОзврат Неопределено;
КонецФункции // ()

Функция НайтиСписаниеВСтроке(СтрокаСНомером)Экспорт
	УстановитьПривилегированныйРежим(Истина);
	ИсходныйТекст = СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрокаСНомером," ",Символы.ПС),"№",Символы.ПС),"N",Символы.ПС),"No ",Символы.ПС);
	Для Счетчик = 1 По СтрЧислоСтрок(ИсходныйТекст) Цикл
		ТекСтрока = СтрПолучитьСтроку(ИсходныйТекст, Счетчик);
		НовУслСС  =  Документы.СписаниеСРасчетногоСчета.НайтиПоРеквизиту("НомерВходящегоДокумента",ТекСтрока);
		Если ЗначениеЗаполнено(НовУслСС) Тогда
			Возврат НовУслСС;
		КонецЕсли; 
	КонецЦикла;
	ВОзврат Неопределено;
КонецФункции // ()


// Поиск счета по аналитике
//
// Параметры:
//  Счет  - <Строка> - Счет 2 порядка
//  Аналитика1  - <СправочникСсылка> - Аналитика
//
// Возвращаемое значение:
//   <СправочникСсылка.БНФОСчетаАналитическогоУчета>   - Открытый счет 60401
//
Функция ПолучитьСчетПоАналитике(Счет,Аналитика1,Аналитика2=Неопределено,Аналитика3=Неопределено,Аналитика4=Неопределено,Аналитика5=Неопределено,Аналитика6=Неопределено) Экспорт
	//
	УстановитьПривилегированныйРежим(Истина);
	Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//|	БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета.СчетАналитическогоУчета КАК СчетАналитическогоУчета
	//|ИЗ
	//|	Документ.БНФООткрытиеСчетовАналитическогоУчета.СчетаУчета КАК БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета
	//|		ПОЛНОЕ СОЕДИНЕНИЕ Документ.БНФООткрытиеСчетовАналитическогоУчета.ВидыАналитик КАК БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик
	//|		ПО БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета.Ссылка = БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик.Ссылка,
	//|	Документ.БНФООткрытиеСчетовАналитическогоУчета.ВидыАналитик КАК БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик1,
	//|	Документ.БНФООткрытиеСчетовАналитическогоУчета.ВидыАналитик КАК БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик2,
	//|	Документ.БНФООткрытиеСчетовАналитическогоУчета.ВидыАналитик КАК БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик3,
	//|	Документ.БНФООткрытиеСчетовАналитическогоУчета.ВидыАналитик КАК БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик4,
	//|	Документ.БНФООткрытиеСчетовАналитическогоУчета.ВидыАналитик КАК БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик5
	//|ГДЕ
	//|	БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик.ЗначениеАналитики = &ЗначениеАналитики
	//|	И БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета.СчетУчета.Код = &Код
	//|	И БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик1.ЗначениеАналитики = &ЗначениеАналитики1
	//|	И БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик2.ЗначениеАналитики = &ЗначениеАналитики2
	//|	И БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик3.ЗначениеАналитики = &ЗначениеАналитики3
	//|	И БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик4.ЗначениеАналитики = &ЗначениеАналитики4
	//|	И БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик5.ЗначениеАналитики = &ЗначениеАналитики5";
	Запрос.УстановитьПараметр("Код",Счет );
	Запрос.УстановитьПараметр("ЗначениеАналитики",Аналитика1 );
	Запрос.УстановитьПараметр("ЗначениеАналитики1",Аналитика2 );
	Запрос.УстановитьПараметр("ЗначениеАналитики2",Аналитика3 );
	//Запрос.УстановитьПараметр("ЗначениеАналитики3",Аналитика4 );
	//Запрос.УстановитьПараметр("ЗначениеАналитики4",Аналитика5 );
	//Запрос.УстановитьПараметр("ЗначениеАналитики5",Аналитика6 );
	//Выборка = Запрос.Выполнить().Выбрать();
	//Пока Выборка.Следующий() Цикл
	//	Возврат Выборка.СчетАналитическогоУчета;			
	//КонецЦикла;
	////
	//Запрос.Текст = "ВЫБРАТЬ
	//|	БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета.СчетАналитическогоУчета КАК СчетАналитическогоУчета
	//|ИЗ
	//|	Документ.БНФООткрытиеСчетовАналитическогоУчета.СчетаУчета КАК БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета
	//|		ПОЛНОЕ СОЕДИНЕНИЕ Документ.БНФООткрытиеСчетовАналитическогоУчета.ВидыАналитик КАК БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик
	//|		ПО БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета.Ссылка = БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик.Ссылка,
	//|	Документ.БНФООткрытиеСчетовАналитическогоУчета.ВидыАналитик КАК БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик1,
	//|	Документ.БНФООткрытиеСчетовАналитическогоУчета.ВидыАналитик КАК БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик2,
	//|	Документ.БНФООткрытиеСчетовАналитическогоУчета.ВидыАналитик КАК БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик3,
	//|	Документ.БНФООткрытиеСчетовАналитическогоУчета.ВидыАналитик КАК БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик4
	//|ГДЕ
	//|	БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик.ЗначениеАналитики = &ЗначениеАналитики
	//|	И БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета.СчетУчета.Код = &Код
	//|	И БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик1.ЗначениеАналитики = &ЗначениеАналитики1
	//|	И БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик2.ЗначениеАналитики = &ЗначениеАналитики2
	//|	И БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик3.ЗначениеАналитики = &ЗначениеАналитики3
	//|	И БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик4.ЗначениеАналитики = &ЗначениеАналитики4";
	//Выборка = Запрос.Выполнить().Выбрать();
	//Пока Выборка.Следующий() Цикл
	//	Возврат Выборка.СчетАналитическогоУчета;			
	//КонецЦикла;
	//Запрос.Текст = "ВЫБРАТЬ
	//|	БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета.СчетАналитическогоУчета КАК СчетАналитическогоУчета
	//|ИЗ
	//|	Документ.БНФООткрытиеСчетовАналитическогоУчета.СчетаУчета КАК БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета
	//|		ПОЛНОЕ СОЕДИНЕНИЕ Документ.БНФООткрытиеСчетовАналитическогоУчета.ВидыАналитик КАК БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик
	//|		ПО БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета.Ссылка = БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик.Ссылка,
	//|	Документ.БНФООткрытиеСчетовАналитическогоУчета.ВидыАналитик КАК БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик1,
	//|	Документ.БНФООткрытиеСчетовАналитическогоУчета.ВидыАналитик КАК БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик2,
	//|	Документ.БНФООткрытиеСчетовАналитическогоУчета.ВидыАналитик КАК БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик3
	//|ГДЕ
	//|	БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик.ЗначениеАналитики = &ЗначениеАналитики
	//|	И БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета.СчетУчета.Код = &Код
	//|	И БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик1.ЗначениеАналитики = &ЗначениеАналитики1
	//|	И БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик2.ЗначениеАналитики = &ЗначениеАналитики2
	//|	И БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик3.ЗначениеАналитики = &ЗначениеАналитики3";
	//Выборка = Запрос.Выполнить().Выбрать();
	//Пока Выборка.Следующий() Цикл
	//	Возврат Выборка.СчетАналитическогоУчета;			
	//КонецЦикла;
	//Запрос.Текст = "ВЫБРАТЬ
	//|	БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета.СчетАналитическогоУчета КАК СчетАналитическогоУчета
	//|ИЗ
	//|	Документ.БНФООткрытиеСчетовАналитическогоУчета.СчетаУчета КАК БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета
	//|		ПОЛНОЕ СОЕДИНЕНИЕ Документ.БНФООткрытиеСчетовАналитическогоУчета.ВидыАналитик КАК БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик
	//|		ПО БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета.Ссылка = БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик.Ссылка,
	//|	Документ.БНФООткрытиеСчетовАналитическогоУчета.ВидыАналитик КАК БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик1,
	//|	Документ.БНФООткрытиеСчетовАналитическогоУчета.ВидыАналитик КАК БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик2
	//|ГДЕ
	//|	БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик.ЗначениеАналитики = &ЗначениеАналитики
	//|	И БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета.СчетУчета.Код = &Код
	//|	И БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик1.ЗначениеАналитики = &ЗначениеАналитики1
	//|	И БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик2.ЗначениеАналитики = &ЗначениеАналитики2";
	//Выборка = Запрос.Выполнить().Выбрать();
	//Пока Выборка.Следующий() Цикл
	//	Возврат Выборка.СчетАналитическогоУчета;			
	//КонецЦикла;
	Если Аналитика3=Неопределено Тогда
		Если Аналитика2=Неопределено Тогда
			Запрос.Текст = "ВЫБРАТЬ
			|	БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета.СчетАналитическогоУчета КАК СчетАналитическогоУчета
			|ИЗ
			|	Документ.БНФООткрытиеСчетовАналитическогоУчета.СчетаУчета КАК БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.БНФООткрытиеСчетовАналитическогоУчета.ВидыАналитик КАК БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик
			|		ПО БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета.Ссылка = БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик.Ссылка
			|			И БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета.КлючСтроки = БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик.КлючСтроки
			|ГДЕ
			|	БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик.ЗначениеАналитики = &ЗначениеАналитики
			|	И НЕ БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик.Ссылка.ПометкаУдаления
			|	И БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик.Ссылка.Проведен
			|	И БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета.СчетАналитическогоУчета.Код <> """"
			|	И БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета.СчетУчета.Код = &Код";
			Выборка = Запрос.Выполнить().Выбрать();
			Пока Выборка.Следующий() Цикл
				Возврат Выборка.СчетАналитическогоУчета;			
			КонецЦикла;
		Иначе	
			Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
			|	БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета.СчетАналитическогоУчета КАК СчетАналитическогоУчета
			|ИЗ
			|	Документ.БНФООткрытиеСчетовАналитическогоУчета.СчетаУчета КАК БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.БНФООткрытиеСчетовАналитическогоУчета.ВидыАналитик КАК БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик
			|		ПО БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета.Ссылка = БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик.Ссылка
			|			И БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета.КлючСтроки = БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик.КлючСтроки
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.БНФООткрытиеСчетовАналитическогоУчета.ВидыАналитик КАК БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик1
			|		ПО БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета.Ссылка = БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик1.Ссылка
			|			И БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета.КлючСтроки = БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик1.КлючСтроки
			|ГДЕ
			|	БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик.ЗначениеАналитики = &ЗначениеАналитики
			|	И НЕ БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик.Ссылка.ПометкаУдаления
			|	И БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик.Ссылка.Проведен
			|	И БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета.СчетАналитическогоУчета.Код <> """"
			|	И БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета.СчетУчета.Код = &Код
			|	И БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик1.ЗначениеАналитики = &ЗначениеАналитики1";
			Выборка = Запрос.Выполнить().Выбрать();
			Пока Выборка.Следующий() Цикл
				Возврат Выборка.СчетАналитическогоУчета;			
			КонецЦикла;
			Запрос.Текст = "ВЫБРАТЬ
			|	ИспользуемыеСчетаАналитическогоУчета.СчетАналитическогоУчета КАК СчетАналитическогоУчета,
			|	АналитикаУчетаСчетов.Значение КАК Аналитика
			|ПОМЕСТИТЬ ВТ_А1
			|ИЗ
			|	РегистрСведений.БНФОСоответствиеСчетовАналитическогоУчетаИАналитики КАК ИспользуемыеСчетаАналитическогоУчета
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.БНФОШаблоныОткрытияСчетовАналитическогоУчета.ВидыАналитикОткрытия КАК ВидыАналитикОткрытия
			|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.БНФООсновнаяАналитикаСчетовАналитическогоУчета КАК АналитикаУчетаСчетов
			|			ПО ВидыАналитикОткрытия.ВидАналитики = АналитикаУчетаСчетов.ВидАналитики
			|		ПО ИспользуемыеСчетаАналитическогоУчета.ШаблонОткрытия = ВидыАналитикОткрытия.Ссылка
			|			И (ИспользуемыеСчетаАналитическогоУчета.СчетАналитическогоУчета = АналитикаУчетаСчетов.СчетАналитическогоУчета)
			|ГДЕ
			|	АналитикаУчетаСчетов.Значение = &ЗначениеАналитики
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ИспользуемыеСчетаАналитическогоУчета.СчетАналитическогоУчета КАК СчетАналитическогоУчета,
			|	АналитикаУчетаСчетов.Значение КАК Аналитика
			|ПОМЕСТИТЬ ВТ_А2
			|ИЗ
			|	РегистрСведений.БНФОСоответствиеСчетовАналитическогоУчетаИАналитики КАК ИспользуемыеСчетаАналитическогоУчета
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.БНФОШаблоныОткрытияСчетовАналитическогоУчета.ВидыАналитикОткрытия КАК ВидыАналитикОткрытия
			|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.БНФООсновнаяАналитикаСчетовАналитическогоУчета КАК АналитикаУчетаСчетов
			|			ПО ВидыАналитикОткрытия.ВидАналитики = АналитикаУчетаСчетов.ВидАналитики
			|		ПО ИспользуемыеСчетаАналитическогоУчета.ШаблонОткрытия = ВидыАналитикОткрытия.Ссылка
			|			И (ИспользуемыеСчетаАналитическогоУчета.СчетАналитическогоУчета = АналитикаУчетаСчетов.СчетАналитическогоУчета)
			|ГДЕ
			|	АналитикаУчетаСчетов.Значение = &ЗначениеАналитики1
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ первые 1
			|	ВТ_А1.СчетАналитическогоУчета КАК СчетАналитическогоУчета
			|ИЗ
			|	ВТ_А1 КАК ВТ_А1
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_А2 КАК ВТ_А2
			|		ПО ВТ_А1.СчетАналитическогоУчета = ВТ_А2.СчетАналитическогоУчета
			|ГДЕ
			|	ВТ_А1.СчетАналитическогоУчета.Владелец.Код = &Код";
			Результат = Запрос.Выполнить();
			Выборка = Результат.Выбрать();
			Пока Выборка.Следующий() Цикл
				Возврат Выборка.СчетАналитическогоУчета;
			КонецЦикла;
		КонецЕсли;
	Иначе
		Запрос.Текст = "ВЫБРАТЬ
		|	БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета.СчетАналитическогоУчета КАК СчетАналитическогоУчета
		|ИЗ
		|	Документ.БНФООткрытиеСчетовАналитическогоУчета.СчетаУчета КАК БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.БНФООткрытиеСчетовАналитическогоУчета.ВидыАналитик КАК БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик
		|		ПО БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета.Ссылка = БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик.Ссылка
		|			И БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета.КлючСтроки = БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик.КлючСтроки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.БНФООткрытиеСчетовАналитическогоУчета.ВидыАналитик КАК БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик1
		|		ПО БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета.Ссылка = БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик1.Ссылка
		|			И БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета.КлючСтроки = БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик1.КлючСтроки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.БНФООткрытиеСчетовАналитическогоУчета.ВидыАналитик КАК БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик2
		|		ПО БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета.Ссылка = БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик2.Ссылка
		|			И БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета.КлючСтроки = БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик2.КлючСтроки
		|ГДЕ
		|	БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик.ЗначениеАналитики = &ЗначениеАналитики
		|	И БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета.СчетУчета.Код = &Код
		|	И БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета.СчетАналитическогоУчета.Код <> """"
		|	И НЕ БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик.Ссылка.ПометкаУдаления
		|	И БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик1.ЗначениеАналитики = &ЗначениеАналитики1
		|	И БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик2.ЗначениеАналитики = &ЗначениеАналитики2";
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Возврат Выборка.СчетАналитическогоУчета;			
		КонецЦикла;
	КонецЕсли;
	Возврат Справочники.БНФОСчетаАналитическогоУчета.ПустаяСсылка();
КонецФункции

Функция ПолучитьСчетКонтрактаПоАналитике(Счет,КОнтракт,Субконто) Экспорт
	//
	УстановитьПривилегированныйРежим(Истина);
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Код",Счет );
	Запрос.УстановитьПараметр("ЗначениеАналитики",КОнтракт );
	Запрос.УстановитьПараметр("ЗначениеАналитики1",Субконто );
	Запрос.Текст = "ВЫБРАТЬ
	|	БНФОСоответствиеСчетовАналитическогоУчетаИАналитики.СчетАналитическогоУчета КАК СчетАналитическогоУчета
	|ИЗ
	|	РегистрСведений.БНФОАналитикаСчетовАналитическогоУчета КАК БНФОАналитикаСчетовАналитическогоУчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БНФОСоответствиеСчетовАналитическогоУчетаИАналитики КАК БНФОСоответствиеСчетовАналитическогоУчетаИАналитики
	|		ПО БНФОАналитикаСчетовАналитическогоУчета.КлючАналитики = БНФОСоответствиеСчетовАналитическогоУчетаИАналитики.Аналитика
	|ГДЕ
	|	БНФОСоответствиеСчетовАналитическогоУчетаИАналитики.СчетАналитическогоУчета.Владелец.Код = &Код
	|	И БНФОАналитикаСчетовАналитическогоУчета.Аналитика2 = &ЗначениеАналитики
	|	И БНФОАналитикаСчетовАналитическогоУчета.Аналитика3 = &ЗначениеАналитики1";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Возврат Выборка.СчетАналитическогоУчета;			
	КонецЦикла;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета.СчетАналитическогоУчета КАК СчетАналитическогоУчета
	|ИЗ
	|	Документ.БНФООткрытиеСчетовАналитическогоУчета.СчетаУчета КАК БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.БНФООткрытиеСчетовАналитическогоУчета.ВидыАналитик КАК БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик
	|		ПО БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета.Ссылка = БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик.Ссылка
	|			И БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета.КлючСтроки = БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик.КлючСтроки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.БНФООткрытиеСчетовАналитическогоУчета.ВидыАналитик КАК БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик1
	|		ПО БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета.Ссылка = БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик1.Ссылка
	|			И БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета.КлючСтроки = БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик1.КлючСтроки
	|ГДЕ
	|	БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик.ЗначениеАналитики = &ЗначениеАналитики
	|	И НЕ БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик.Ссылка.ПометкаУдаления
	|	И БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета.СчетУчета.Код = &Код
	|	И БНФООткрытиеСчетовАналитическогоУчетаВидыАналитик1.ЗначениеАналитики = &ЗначениеАналитики1
	|	И НЕ БНФООткрытиеСчетовАналитическогоУчетаСчетаУчета.Ссылка.ПометкаУдаления";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Возврат Выборка.СчетАналитическогоУчета;			
	КонецЦикла;
	Возврат Справочники.БНФОСчетаАналитическогоУчета.ПустаяСсылка();
КонецФункции


// <Описание функции>
//
//
// Возвращаемое значение:
//   <СправочникСсылка.Организации>   - <описание возвращаемого значения>
//
Функция Организация() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	Возврат  Справочники.Организации.НайтиПоКоду("000000001");
	
КонецФункции // pcru_Организация()

Функция ФинОтдел()Экспорт
	Возврат Справочники.ПодразделенияОрганизаций.НайтиПоКоду("000000003");
КонецФункции

Функция ВалютаРубль() Экспорт
	Возврат  Справочники.Валюты.НайтиПоКоду("643");	
КонецФункции

Функция Открыть60311(Контрагент,ДоговорКонтрагента,СчетСинтУчета)Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	Дата2 = ТекущаяДата();
	
	Если ТипЗнч(СчетСинтУчета) = Тип("СправочникСсылка.БНФОСубконто") Тогда
		Аналитика3 = СчетСинтУчета;	
	КонецЕсли;  
	
	Если ТипЗнч(СчетСинтУчета) = Тип("Строка") Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	БНФОСубконто.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСубконто КАК БНФОСубконто
		|ГДЕ
		|	БНФОСубконто.Наименование ПОДОБНО &Наименование
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	БНФОСубконто.Ссылка
		|ИЗ
		|	Справочник.БНФОСубконто КАК БНФОСубконто
		|ГДЕ
		|	БНФОСубконто.Код = &Наименование";
		Запрос.УстановитьПараметр("Наименование",СчетСинтУчета);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Аналитика3 = Выборка.Ссылка;	
		Иначе	
			Синт = Справочники.БНФОСубконто.СоздатьЭлемент();
			Синт.Владелец = ПланыВидовХарактеристик.БНФОВидыСубконтоБанковские.НайтиПоКоду("90009");
			Синт.Наименование = СчетСинтУчета;
			Синт.Организация = pcru_УМФО.Организация(); 
			Синт.Записать();
			Аналитика3 = Синт.Ссылка;;	
		КонецЕсли;
	КонецЕсли; 
	
	ДокументОбъект = Документы.БНФООткрытиеСчетовАналитическогоУчета.СоздатьДокумент();
	ДокументОбъект.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
	ДокументОбъект.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаРасчетов.НайтиПоНаименованию("60312-60311 Расчеты с поставщиками и подрядчиками");
	ДокументОбъект.Организация  = pcru_УМФО.Организация() ;
	ДокументОбъект.Валюта = Справочники.Валюты.НайтиПоКоду("643");									
	ДокументОбъект.Дата =  Дата2;
	////////////////////////////////////////////////////////////////////////////////////////////////////////////
	КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
	Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
	Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
	Нстр.КлючеваяАналитика = Истина;
	Нстр.ЗаполнятьОбязательно = Ложь;
	Нстр.ЗначениеАналитики = Контрагент;
	Нстр.ЭтоОбъект = Истина;
	Нстр.КлючСтроки = КлючСтроки;//0;
	////////////////////////////////////////////////////////////////////////////////////////////////////////////
	Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
	Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКонтрагента;
	Нстр.КлючеваяАналитика = Истина;
	Нстр.ЗаполнятьОбязательно = Ложь;
	Нстр.ЗначениеАналитики = ДоговорКонтрагента;
	Нстр.ЭтоОбъект = Истина;
	Нстр.КлючСтроки = КлючСтроки;//0;
	
	Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
	Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоКоду("0000000010");
	Нстр.КлючеваяАналитика = Ложь;
	Нстр.ЗаполнятьОбязательно = Ложь;
	Нстр.ЗначениеАналитики = Неопределено;
	Нстр.ЭтоОбъект = Истина;
	Нстр.КлючСтроки = КлючСтроки;//1;
	
	////////////////////////////////////////////////////////////////////////////////////////////////////////////
	Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
	Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоКоду("0000000039");
	Нстр.КлючеваяАналитика = Истина;
	Нстр.ЗаполнятьОбязательно = Ложь;
	Нстр.ЗначениеАналитики = Аналитика3;
	Нстр.ЭтоОбъект = Истина;
	Нстр.КлючСтроки = КлючСтроки;//0;
	////////////////////////////////////////////////////////////////////////////////////////////////////////////
	Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
	Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаПассивный;
	Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000004");
	Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаРасчетов.НайтиПоНаименованию("60312-60311 Расчеты с поставщиками и подрядчиками");
	Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60311");
	Нстр.ОткрыватьСчет = Истина;
	Нстр.КлючСтроки = КлючСтроки;//0;
	Нстр.ДатаОткрытия = ТекущаяДата();
	Нстр.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(ДоговорКонтрагента);
	////////////////////////////////////////////////////////////////////////////////////////////////////////////
	КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
	Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
	Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
	Нстр.КлючеваяАналитика = Истина;
	Нстр.ЗаполнятьОбязательно = Ложь;
	Нстр.ЗначениеАналитики = Контрагент;
	Нстр.ЭтоОбъект = Истина;
	Нстр.КлючСтроки = КлючСтроки;//1;
	////////////////////////////////////////////////////////////////////////////////////////////////////////////
	Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
	Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКонтрагента;
	Нстр.КлючеваяАналитика = Истина;
	Нстр.ЗаполнятьОбязательно = Ложь;
	Нстр.ЗначениеАналитики = ДоговорКонтрагента;
	Нстр.ЭтоОбъект = Истина;
	Нстр.КлючСтроки = КлючСтроки;//1;
	Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
	Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоКоду("0000000010");
	Нстр.КлючеваяАналитика = Ложь;
	Нстр.ЗаполнятьОбязательно = Ложь;
	Нстр.ЗначениеАналитики = Неопределено;
	Нстр.ЭтоОбъект = Истина;
	Нстр.КлючСтроки = КлючСтроки;//1;
	////////////////////////////////////////////////////////////////////////////////////////////////////////////
	Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
	Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоКоду("0000000039");
	Нстр.КлючеваяАналитика = Истина;
	Нстр.ЗаполнятьОбязательно = Ложь;
	Нстр.ЗначениеАналитики = Аналитика3;
	Нстр.ЭтоОбъект = Истина;
	Нстр.КлючСтроки = КлючСтроки;//1;
	//////////////////1//////////////////////////////////////////////////////////////////////////////////////////
	Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
	Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаАктивный;
	Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000004");
	Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаРасчетов.НайтиПоНаименованию("60312-60311 Расчеты с поставщиками и подрядчиками");
	Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60312");
	Нстр.ОткрыватьСчет = Истина;
	Нстр.КлючСтроки = КлючСтроки;//1;
	Нстр.ДатаОткрытия = ТекущаяДата();
	Нстр.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(ДоговорКонтрагента);
	////////////////////////////////////////////////////////////////////////////////////////////////////////////
	Попытка
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		оо = ОписаниеОшибки();
		ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
	КонецПопытки; 
	////////////////////////////////////////////////////////////////////////////////////////////////////////////
	Возврат  ДокументОбъект.СчетаУчета[0].СчетАналитическогоУчета;
	
	
КонецФункции // pcru_Открыть60311()

// Открывает Счета 60401 60414 60415
//
// Параметры:
//  ОССсылка  - <СправочникСсылка.ОсновныеСредства> - Аналитика в разрезе ОС
//
// Возвращаемое значение:
//   <СправочникСсылка.БНФОСчетаАналитическогоУчета>   - Открытый счет 60401
//
Функция Открыть60401(ОССсылка) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	Дата2 = ТекущаяДата();
	ДокументОбъект = Документы.БНФООткрытиеСчетовАналитическогоУчета.СоздатьДокумент();
	ДокументОбъект.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
	//Справочники.БНФОГруппыФинансовогоУчетаАктивов.НайтиПоНаименованию("Основные средства (кроме земля)");
	ДокументОбъект.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаАктивов.НайтиПоКоду("00060401");
	ДокументОбъект.Организация  = pcru_УМФО.Организация() ;
	ДокументОбъект.Валюта = Справочники.Валюты.НайтиПоКоду("643");									
	ДокументОбъект.Дата =  Дата2;
	////////////////////////////////////////////////////////////////////////////////////////////////////////////0
	КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
	Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
	Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ОбъектЭксплуатации;
	Нстр.КлючеваяАналитика = Истина;
	Нстр.ЗаполнятьОбязательно = Ложь;
	Нстр.ЗначениеАналитики = ОССсылка;
	Нстр.ЭтоОбъект = Истина;
	Нстр.КлючСтроки = КлючСтроки;//0;
	
	Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
	Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоКоду("0000000038");
	Нстр.КлючеваяАналитика = Истина;
	Нстр.ЗаполнятьОбязательно = Ложь;
	Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000070");//Цена приобретения
	Нстр.ЭтоОбъект = Истина;
	Нстр.КлючСтроки = КлючСтроки;//0;
	
	Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
	Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.НаСкладе;
	Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000024");
	Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаАктивов.НайтиПоКоду("00060401");
	Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60415");
	Нстр.ОткрыватьСчет = Истина;
	Нстр.КлючСтроки = КлючСтроки;//0;
	Нстр.ДатаОткрытия = Дата2;
	Нстр.Наименование = ОССсылка.Наименование;
	////////////////////////////////////////////////////////////////////////////////////////////////////////////1
	КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
	Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
	Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ОбъектЭксплуатации;
	Нстр.КлючеваяАналитика = Истина;
	Нстр.ЗаполнятьОбязательно = Ложь;
	Нстр.ЗначениеАналитики = ОССсылка;
	Нстр.ЭтоОбъект = Истина;
	Нстр.КлючСтроки = КлючСтроки;//1;
	
	Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
	Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.ВыбытиеАктивов;
	Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000021");
	Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаАктивов.НайтиПоКоду("00060401");
	Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("61209");
	Нстр.ОткрыватьСчет = Истина;
	Нстр.КлючСтроки = КлючСтроки;//1;
	Нстр.ДатаОткрытия = Дата2;
	Нстр.Наименование = ОССсылка.Наименование;
	////////////////////////////////////////////////////////////////////////////////////////////////////////////2
	КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
	Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
	Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ОбъектЭксплуатации;
	Нстр.КлючеваяАналитика = Истина;
	Нстр.ЗаполнятьОбязательно = Ложь;
	Нстр.ЗначениеАналитики = ОССсылка;
	Нстр.ЭтоОбъект = Истина;
	Нстр.КлючСтроки = КлючСтроки;//2;
	
	Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
	Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.ВЭксплуатации;
	Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000021");
	Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаАктивов.НайтиПоКоду("00060401");
	Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60401");
	Нстр.ОткрыватьСчет = Истина;
	Нстр.КлючСтроки = КлючСтроки;//2;
	Нстр.ДатаОткрытия = Дата2;
	Нстр.Наименование = ОССсылка.Наименование;
	////////////////////////////////////////////////////////////////////////////////////////////////////////////3
	КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
	Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
	Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ОбъектЭксплуатации;
	Нстр.КлючеваяАналитика = Истина;
	Нстр.ЗаполнятьОбязательно = Ложь;
	Нстр.ЗначениеАналитики = ОССсылка;
	Нстр.ЭтоОбъект = Истина;
	Нстр.КлючСтроки = КлючСтроки;//3;
	
	Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
	Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.Амортизация;
	Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000021");
	Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаАктивов.НайтиПоКоду("00060401");
	Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60414");
	Нстр.ОткрыватьСчет = Истина;
	Нстр.КлючСтроки = КлючСтроки;//3;
	Нстр.ДатаОткрытия = Дата2;
	Нстр.Наименование = ОССсылка.Наименование;
	////////////////////////////////////////////////////////////////////////////////////////////////////////////4
	КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
	Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
	Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ОбъектЭксплуатации;
	Нстр.КлючеваяАналитика = Истина;
	Нстр.ЗаполнятьОбязательно = Ложь;
	Нстр.ЗначениеАналитики = ОССсылка;
	Нстр.ЭтоОбъект = Истина;
	Нстр.КлючСтроки = КлючСтроки;//4;
	
	Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
	Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.РезервыПереоценки;
	Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000021");
	Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаАктивов.НайтиПоКоду("00060401");
	Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("10601");
	Нстр.ОткрыватьСчет = Истина;
	Нстр.КлючСтроки = КлючСтроки;//4;
	Нстр.ДатаОткрытия = Дата2;
	Нстр.Наименование = ОССсылка.Наименование;
	////////////////////////////////////////////////////////////////////////////////////////////////////////////
	ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	////////////////////////////////////////////////////////////////////////////////////////////////////////////
	Возврат ДокументОбъект.СчетаУчета[2].СчетАналитическогоУчета;
	
	
КонецФункции // pcru_Открыть60401()


// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция Открыть48801(Контрагент,Договор) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	Если ТипЗнч(Договор) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
		pcru_CRM.ЗагрузитьКонтрагента(Контрагент.АЭ_Идентификатор,Договор.НомерДоговора,Контрагент.Наименование,"","","");
	Иначе
		pcru_CRM.ЗагрузитьКонтрагента(Контрагент.АЭ_Идентификатор,Договор.Код,Контрагент.Наименование,"","","");
	КонецЕсли; 
	Возврат  pcru_УМФО.ПолучитьСчетПоАналитике("48801",Контрагент);
КонецФункции // Открыть48801()


Функция Открыть61217(Контрагент,УсловияДоговора)Экспорт
	УстановитьПривилегированныйРежим(Истина);
	Дата2 = НачалоДня(ТекущаяДата());
	
	ДокументОбъект                                 = Документы.БНФООткрытиеСчетовАналитическогоУчета.СоздатьДокумент();
	ДокументОбъект.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
	ДокументОбъект.ГруппаФинансовогоУчета          = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Выбытие займов");
	ДокументОбъект.Организация                     = pcru_УМФО.Организация();
	ДокументОбъект.Валюта                          = Справочники.Валюты.НайтиПоКоду("643");									
	ДокументОбъект.Дата                            = Дата2;
	////////////////////////////////////////////////////////////////////////////////////////////////////////////
	Нстр                                           = ДокументОбъект.ВидыАналитик.Добавить();
	Нстр.ВидАналитики                              = ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
	Нстр.КлючеваяАналитика                         = Истина;
	Нстр.ЗаполнятьОбязательно                      = Ложь;
	Нстр.ЗначениеАналитики                         = Контрагент;
	Нстр.ЭтоОбъект                                 = Истина;
	Нстр.КлючСтроки                                = 0;
	////////////////////////////////////////////////////////////////////////////////////////////////////////////
	Нстр                                           = ДокументОбъект.ВидыАналитик.Добавить();
	Нстр.ВидАналитики                              = ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
	Нстр.КлючеваяАналитика                         = Истина;
	Нстр.ЗаполнятьОбязательно                      = Ложь;
	Нстр.ЗначениеАналитики                         = УсловияДоговора;
	Нстр.ЭтоОбъект                                 = Истина;
	Нстр.КлючСтроки                                = 0;
	////////////////////////////////////////////////////////////////////////////////////////////////////////////
	
	НСчет = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
	НСчет.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60901");	
	НСчет.Код = "61217"+"81000"+СокрЛП(Прав(УсловияДоговора.номер,10))+"00000";
	НСчет.ПроизвольныйСегмент =  "0"+СокрЛП(Прав(УсловияДоговора.номер,10))+"00000"; //0005500006600000
	НСчет.Наименование =  ПланыСчетов.БНФОБанковский.НайтиПоКоду("61217").Наименование+" Контрагент "+Контрагент+" Договор "+ УсловияДоговора;
	НСчет.Валюта  = Справочники.Валюты.НайтиПоКоду("643");
	НСчет.Организация  = pcru_УМФО.Организация();
	НСчет.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
	НСчет.ТребуетсяПереоценка = ложь;
	НСчет.ТребуетсяСверка = ложь;
	НСчет.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000014");
	НСчет.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаАктивов.НайтиПоКоду("НМА");
	НСчет.ПовторноеИспользованиеНомераСчета = Истина;
	НСчет.Комментарий = "Сгенерирован загрузкой нма"; 
	НСчет.СпособХранения = 1;
	НСчет.Записать();
	////////////////////////////////////////////////////////////////////////////////////////////////////////////
	Нстр                                           = ДокументОбъект.СчетаУчета.Добавить();
	Нстр.ВидСчетаУчета                             = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
	Нстр.ШаблонОткрытия                            = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000014");
	Нстр.ГруппаФинансовогоУчета                    = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Выбытие займов");
	Нстр.СчетУчета                                 = ПланыСчетов.БНФОБанковский.НайтиПоКоду("61217");
	Нстр.ОткрыватьСчет                             = Истина;
	Нстр.КлючСтроки                                = 0;
	Нстр.ДатаОткрытия                              = Дата2;
	Нстр.Наименование                              = ПланыСчетов.БНФОБанковский.НайтиПоКоду("61217").Наименование+" Контрагент "+Контрагент+" Договор "+ УсловияДоговора;
	////////////////////////////////////////////////////////////////////////////////////////////////////////////
	ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	////////////////////////////////////////////////////////////////////////////////////////////////////////////
	Возврат  ДокументОбъект.СчетаУчета[0].СчетАналитическогоУчета;
	
	
КонецФункции // pcru_Открыть60311()

// Функция открывает пакет счетов контрагента
//БалансСч	Ключ	НАВ	САУ	Аналитика	Символ	Код	СобствОперации	Валюта	ГрФинанУучета	ГрФинанУучетаНимен	ГрФинанУучетаКод	ВидСчетаУчета	ШаблонОткрытия	ШаблонОткрКод	Субконто1	Субконто2	Субконто3
//48801	1	48801.1	48801 810 0 1 ХХХХХХХХХХ PPPPP	Срочная	1	000000023	0	руб.	Группы финансового учета финансовых инструментов	Займы выданные		Счет учета	Займы предоставленные	000000014	Контрагенты	Условия займов, кредитов и депозитов	
//48801	2	48801.2	48801 810 0 2 ХХХХХХХХХХ PPPPP	Просроченная	2	000000024	0	руб.	Группы финансового учета финансовых инструментов	Займы выданные		Счет учета	Займы предоставленные	000000014	Контрагенты	Условия займов, кредитов и депозитов	
//48802	1	48802.1	48802 810 0 1 ХХХХХХХХХХ PPPPP	Срочная	1	000000023	0	руб.	Группы финансового учета финансовых инструментов	Начисленные проценты по займам выданным		Счет учета	Займы предоставленные	000000014	Контрагенты	Условия займов, кредитов и депозитов	
//48802	2	48802.2	48802 810 0 2 ХХХХХХХХХХ PPPPP	Просроченная	2	000000024	0	руб.	Группы финансового учета финансовых инструментов	Начисленные проценты по займам выданным		Счет учета	Займы предоставленные	000000014	Контрагенты	Условия займов, кредитов и депозитов	
//48803	1	48803.1	48803 810 0 1 ХХХХХХХХХХ PPPPP	Срочная	1	000000023	0	руб.	Группы финансового учета финансовых инструментов	Начисленные прочие доходы по займам выданным		Счет учета	Займы предоставленные	000000014	Контрагенты	Условия займов, кредитов и депозитов	
//48804	1	48804.1	48804 810 0 1 ХХХХХХХХХХ PPPPP	Срочная	1	000000023	0	руб.	Группы финансового учета финансовых инструментов	Расчеты по прочим доходам по займам выданным		Счет учета	Займы предоставленные	000000014	Контрагенты	Условия займов, кредитов и депозитов	
//48805	1	48805.1	48805 810 0 1 ХХХХХХХХХХ PPPPP	Срочная	1	000000023	0	руб.	Группы финансового учета финансовых инструментов	Начисленные расходы по займам выданным		Счет учета	Займы предоставленные	000000014	Контрагенты	Условия займов, кредитов и депозитов	
//48806	1	48806.1	48806 810 0 1 ХХХХХХХХХХ PPPPP	Срочная	1	000000023	0	руб.	Группы финансового учета финансовых инструментов	Расчеты по расходам по займам выданным		Счет учета	Займы предоставленные	000000014	Контрагенты	Условия займов, кредитов и депозитов	
//48807	1	48807.1	48807 810 0 1 ХХХХХХХХХХ PPPPP	Срочная	1	000000023	0	руб.	Группы финансового учета финансовых инструментов	Корректировки по займам выданным		Счет активный (парный)	Займы предоставленные	000000014	Контрагенты	Условия займов, кредитов и депозитов	
//48808	1	48808.1	48808 810 0 1 ХХХХХХХХХХ PPPPP	Срочная	1	000000023	0	руб.	Группы финансового учета финансовых инструментов	Корректировки по займам выданным		Счет пассивный (парный)	Займы предоставленные	000000014	Контрагенты	Условия займов, кредитов и депозитов	
//48809	1	48809.1	48809 810 0 1 ХХХХХХХХХХ PPPPP	Срочная	1	000000023	0	руб.	Группы финансового учета финансовых инструментов	Расчеты по процентам по займам выданным		Счет учета	Займы предоставленные	000000014	Контрагенты	Условия займов, кредитов и депозитов	
//48809	2	48809.2	48809 810 0 2 ХХХХХХХХХХ PPPPP	Просроченная	2	000000024	0	руб.	Группы финансового учета финансовых инструментов	Расчеты по процентам по займам выданным		Счет учета	Займы предоставленные	000000014	Контрагенты	Условия займов, кредитов и депозитов	
//48810	1	48810.1	48810 810 0 1 ХХХХХХХХХХ PPPPP	Беспроблемная	1	000000025	0	руб.	Группы финансового учета финансовых инструментов	Резервы под обесценение по займам выданным		Счет учета	Резервы под обеспечение займа	000000015	Контрагенты	Условия займов, кредитов и депозитов	
//48810	2	48810.2	48810 810 0 2 ХХХХХХХХХХ PPPPP	Со значительным увеличением кредитного риска	2	000000026	0	руб.	Группы финансового учета финансовых инструментов	Резервы под обесценение по займам выданным		Счет учета	Резервы под обеспечение займа	000000015	Контрагенты	Условия займов, кредитов и депозитов	
//60322	1	60322.1	60322 810 0 0 ХХХХХХХХХХ PPPPP	Прочие операции	0	000000028	0	руб.	Группы финансового учета финансовых инструментов	Резервы под обесценение по займам выданным		Счет пассивный (парный)	Расчеты с прочими дебиторами и кредиторами	000000007	Контрагенты	Договоры	Документы расчетов с контрагентами
//60322	2	60322.2	60322 810 0 2 ХХХХХХХХХХ PPPPP	Госпошлина, присужденная судом к возмещению	2	000000029	0	руб.	Группы финансового учета финансовых инструментов	Резервы под обесценение по займам выданным		Счет пассивный (парный)	Расчеты с прочими дебиторами и кредиторами	000000007	Контрагенты	Договоры	Документы расчетов с контрагентами
//60322	3	60322.3	60322 810 0 3 ХХХХХХХХХХ PPPPP	Судебные издержки, присужденные судом к возмещению	3	000000030	0	руб.	Группы финансового учета финансовых инструментов	Резервы под обесценение по займам выданным		Счет пассивный (парный)	Расчеты с прочими дебиторами и кредиторами	000000007	Контрагенты	Договоры	Документы расчетов с контрагентами
//60322	4	60322.4	60322 810 0 4 ХХХХХХХХХХ PPPPP	Пени, начисленные до расторжения договора займа	4	000000031	0	руб.	Группы финансового учета финансовых инструментов	Резервы под обесценение по займам выданным		Счет пассивный (парный)	Расчеты с прочими дебиторами и кредиторами	000000007	Контрагенты	Договоры	Документы расчетов с контрагентами
//60322	5	60322.5	60322 810 0 5 ХХХХХХХХХХ PPPPP	Задолженность по RI после досрочного расторжения	5	000000032	0	руб.	Группы финансового учета финансовых инструментов	Резервы под обесценение по займам выданным		Счет пассивный (парный)	Расчеты с прочими дебиторами и кредиторами	000000007	Контрагенты	Договоры	Документы расчетов с контрагентами
//60322	6	60322.6	60322 810 0 6 ХХХХХХХХХХ PPPPP	Штрафы за досрочное расторжение договора	6	000000033	0	руб.	Группы финансового учета финансовых инструментов	Резервы под обесценение по займам выданным		Счет пассивный (парный)	Расчеты с прочими дебиторами и кредиторами	000000007	Контрагенты	Договоры	Документы расчетов с контрагентами
//60322	7	60322.7	60322 810 0 7 ХХХХХХХХХХ PPPPP	Задолженность по процентам после досрочного расторжения договора	7	000000034	0	руб.	Группы финансового учета финансовых инструментов	Резервы под обесценение по займам выданным		Счет пассивный (парный)	Расчеты с прочими дебиторами и кредиторами	000000007	Контрагенты	Договоры	Документы расчетов с контрагентами
//60322	8	60322.8	60322 810 0 8 ХХХХХХХХХХ PPPPP	Задолженность по основному долгу после досрочного расторжения договора	8	000000035	0	руб.	Группы финансового учета финансовых инструментов	Резервы под обесценение по займам выданным		Счет пассивный (парный)	Расчеты с прочими дебиторами и кредиторами	000000007	Контрагенты	Договоры	Документы расчетов с контрагентами
//60322	9	60322.9	60322 810 0 9 ХХХХХХХХХХ PPPPP	Задолженность по Пакету услуг после досрочного расторжения договора	9	000000036	0	руб.	Группы финансового учета финансовых инструментов	Резервы под обесценение по займам выданным		Счет пассивный (парный)	Расчеты с прочими дебиторами и кредиторами	000000007	Контрагенты	Договоры	Документы расчетов с контрагентами
//60323	1	60323.1	60323 810 0 0 ХХХХХХХХХХ PPPPP	Прочие операции	0	000000028	0	руб.	Группы финансового учета финансовых инструментов	Резервы под обесценение по займам выданным		Счет активный (парный)	Расчеты с прочими дебиторами и кредиторами	000000007	Контрагенты	Договоры	Документы расчетов с контрагентами
//60323	2	60323.2	60323 810 0 2 ХХХХХХХХХХ PPPPP	Госпошлина, присужденная судом к возмещению	2	000000029	0	руб.	Группы финансового учета финансовых инструментов	Резервы под обесценение по займам выданным		Счет активный (парный)	Расчеты с прочими дебиторами и кредиторами	000000007	Контрагенты	Договоры	Документы расчетов с контрагентами
//60323	3	60323.3	60323 810 0 3 ХХХХХХХХХХ PPPPP	Судебные издержки, присужденные судом к возмещению	3	000000030	0	руб.	Группы финансового учета финансовых инструментов	Резервы под обесценение по займам выданным		Счет активный (парный)	Расчеты с прочими дебиторами и кредиторами	000000007	Контрагенты	Договоры	Документы расчетов с контрагентами
//60323	4	60323.4	60323 810 0 4 ХХХХХХХХХХ PPPPP	Пени, начисленные до расторжения договора займа	4	000000031	0	руб.	Группы финансового учета финансовых инструментов	Резервы под обесценение по займам выданным		Счет активный (парный)	Расчеты с прочими дебиторами и кредиторами	000000007	Контрагенты	Договоры	Документы расчетов с контрагентами
//60323	5	60323.5	60323 810 0 5 ХХХХХХХХХХ PPPPP	Задолженность по RI после досрочного расторжения	5	000000032	0	руб.	Группы финансового учета финансовых инструментов	Резервы под обесценение по займам выданным		Счет активный (парный)	Расчеты с прочими дебиторами и кредиторами	000000007	Контрагенты	Договоры	Документы расчетов с контрагентами
//60323	6	60323.6	60323 810 0 6 ХХХХХХХХХХ PPPPP	Штрафы за досрочное расторжение договора	6	000000033	0	руб.	Группы финансового учета финансовых инструментов	Резервы под обесценение по займам выданным		Счет активный (парный)	Расчеты с прочими дебиторами и кредиторами	000000007	Контрагенты	Договоры	Документы расчетов с контрагентами
//60323	7	60323.7	60323 810 0 7 ХХХХХХХХХХ PPPPP	Задолженность по процентам после досрочного расторжения договора	7	000000034	0	руб.	Группы финансового учета финансовых инструментов	Резервы под обесценение по займам выданным		Счет активный (парный)	Расчеты с прочими дебиторами и кредиторами	000000007	Контрагенты	Договоры	Документы расчетов с контрагентами
//60323	8	60323.8	60323 810 0 8 ХХХХХХХХХХ PPPPP	Задолженность по основному долгу после досрочного расторжения договора	8	000000035	0	руб.	Группы финансового учета финансовых инструментов	Резервы под обесценение по займам выданным		Счет активный (парный)	Расчеты с прочими дебиторами и кредиторами	000000007	Контрагенты	Договоры	Документы расчетов с контрагентами
//60323	9	60323.9	60323 810 0 9 ХХХХХХХХХХ PPPPP	Задолженность по Пакету услуг после досрочного расторжения договора	9	000000036	0	руб.	Группы финансового учета финансовых инструментов	Резервы под обесценение по займам выданным		Счет активный (парный)	Расчеты с прочими дебиторами и кредиторами	000000007	Контрагенты	Договоры	Документы расчетов с контрагентами
//60324	1	60324.1	60324 810 0 1 ХХХХХХХХХХ PPPPP	Выбытие активов (займов) в связи с ПДП	1	000000085	0	руб.	Группы финансового учета финансовых инструментов	Резервы под обесценение по займам выданным		Счет активный (парный)	Расчеты с прочими дебиторами и кредиторами	000000007	#Н/Д	#Н/Д	#Н/Д
//61217	1	61217.1	61217 810 0 1 ХХХХХХХХХХ PPPPP	Выбытие активов (займов) в связи с ПДП	1	000000085	0	руб.	Группы финансового учета финансовых инструментов	Выбытие займов		Счет учета	Выбытие займов	000000033	Контрагенты	Условия займов, кредитов и депозитов	
//61217	2	61217.2	61217 810 0 2 ХХХХХХХХХХ PPPPP	Выбытие займа при досрочном расторжении договора (Дефолт)	2	000000086	0	руб.	Группы финансового учета финансовых инструментов	Выбытие займов		Счет учета	Выбытие займов	000000033	Контрагенты	Условия займов, кредитов и депозитов	
//61217	3	61217.3	61217 810 0 3 ХХХХХХХХХХ PPPPP	Списание с баланса за счет резерва	3	000000087	0	руб.	Группы финансового учета финансовых инструментов	Выбытие займов		Счет учета	Выбытие займов	000000033	Контрагенты	Условия займов, кредитов и депозитов	
//
// Параметры:
//  Аналитика  - Контрагент, договор, условие займа или строка
//
// Возвращаемое значение:
//  Структура   - ссылки на счета
//Стр._48801_1 - счет 48801 Аналитика: 000000023
//Стр._48802_1 - счет 48802 Аналитика: 000000023
//Стр._48803_1 - счет 48803 Аналитика: Универсальный справочник код: 000000023   
//Стр._48804_1 - счет 48804 Аналитика: Универсальный справочник код: 000000023   
//Стр._48805_1 - счет 48805 Аналитика: Универсальный справочник код: 000000023   
//Стр._48806_1 - счет 48806 Аналитика: Универсальный справочник код: 000000023   
//Стр._48807_1 - счет 48807 Аналитика: Универсальный справочник код: 000000023   
//Стр._48808_1 - счет 48808 Аналитика: Универсальный справочник код: 000000023   
//Стр._48809_1 - счет 48809 Аналитика: Универсальный справочник код: 000000023   
//Стр._48810_1 - счет 48810 Аналитика: Универсальный справочник код: 000000025   
//Стр._48801_2 - счет 48801 Аналитика: Универсальный справочник код: 000000024   
//Стр._48802_2 - счет 48802 Аналитика: Универсальный справочник код: 000000024   
//Стр._48803_2 - счет 48803 Аналитика: Универсальный справочник код: 000000024   
//Стр._48804_2 - счет 48804 Аналитика: Универсальный справочник код: 000000024   
//Стр._48805_2 - счет 48805 Аналитика: Универсальный справочник код: 000000024   
//Стр._48806_2 - счет 48806 Аналитика: Универсальный справочник код: 000000024   
//Стр._48807_2 - счет 48807 Аналитика: Универсальный справочник код: 000000024   
//Стр._48808_2 - счет 48808 Аналитика: Универсальный справочник код: 000000024   
//Стр._48809_2 - счет 48809 Аналитика: Универсальный справочник код: 000000024   
//Стр._48810_2 - счет 48810 Аналитика: Универсальный справочник код: 000000026   
//Стр._60322_1 - счет 60322 Аналитика: Универсальный справочник код: 000000028   
//Стр._60323_1 - счет 60323 Аналитика: Универсальный справочник код: 000000028   
//Стр._60322_2 - счет 60322 Аналитика: Универсальный справочник код: 000000029   
//Стр._60323_2 - счет 60323 Аналитика: Универсальный справочник код: 000000029   
//Стр._60322_3 - счет 60322 Аналитика: Универсальный справочник код: 000000030   
//Стр._60323_3 - счет 60323 Аналитика: Универсальный справочник код: 000000030   
//Стр._60322_4 - счет 60322 Аналитика: Универсальный справочник код: 000000031   
//Стр._60323_4 - счет 60323 Аналитика: Универсальный справочник код: 000000031   
//Стр._60322_5 - счет 60322 Аналитика: Универсальный справочник код: 000000032   
//Стр._60323_5 - счет 60323 Аналитика: Универсальный справочник код: 000000032   
//Стр._60322_6 - счет 60322 Аналитика: Универсальный справочник код: 000000033   
//Стр._60323_6 - счет 60323 Аналитика: Универсальный справочник код: 000000033   
//Стр._60322_7 - счет 60322 Аналитика: Универсальный справочник код: 000000034   
//Стр._60323_7 - счет 60323 Аналитика: Универсальный справочник код: 000000034   
//Стр._60322_8 - счет 60322 Аналитика: Универсальный справочник код: 000000035   
//Стр._60323_8 - счет 60323 Аналитика: Универсальный справочник код: 000000035   
//Стр._60322_9 - счет 60322 Аналитика: Универсальный справочник код: 000000036   
//Стр._60323_9 - счет 60323 Аналитика: Универсальный справочник код: 000000036   
//Стр._60324_1
//Стр._61217_1 - счет 61217 Аналитика: Универсальный справочник код: 000000085   
//Стр._61217_2 - счет 61217 Аналитика: Универсальный справочник код: 000000086   
//Стр._61217_3 - счет 61217 Аналитика: Универсальный справочник код: 000000087   
//                         
Функция ОткрытьСчетаКонтрагента(Аналитика)Экспорт
	
	
	Работаем = Ложь;
	Запрос = Новый Запрос;
	Стр = Новый Структура;
	Стр.Вставить("УсловиеЗайма",Справочники.БНФОДоговорыКредитовИДепозитов.ПустаяСсылка());
	Стр.Вставить("Контрагент",Справочники.Контрагенты.ПустаяСсылка());
	Стр.Вставить("ДоговорКонтрагента",Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
	
	Запрос.Текст = "ВЫБРАТЬ
	|	БНФОДоговорыКредитовИДепозитов.Ссылка КАК УсловиеЗайма,
	|	БНФОДоговорыКредитовИДепозитов.Контрагент.Ссылка КАК Контрагент,
	|	БНФОДоговорыКредитовИДепозитов.ДоговорКонтрагента.Ссылка КАК ДоговорКонтрагента,
	|	БНФОДоговорыКредитовИДепозитов.Номер КАК НомерДоговора,
	|	БНФОДоговорыКредитовИДепозитов.Контрагент.Наименование КАК ФИО
	|ИЗ
	|	Справочник.БНФОДоговорыКредитовИДепозитов КАК БНФОДоговорыКредитовИДепозитов
	|ГДЕ
	|	БНФОДоговорыКредитовИДепозитов.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БНФОДоговорыКредитовИДепозитов.Ссылка КАК УсловиеЗайма,
	|	БНФОДоговорыКредитовИДепозитов.Контрагент.Ссылка КАК Контрагент,
	|	БНФОДоговорыКредитовИДепозитов.ДоговорКонтрагента.Ссылка КАК ДоговорКонтрагента,
	|	БНФОДоговорыКредитовИДепозитов.Номер КАК НомерДоговора,
	|	БНФОДоговорыКредитовИДепозитов.Контрагент.Наименование КАК ФИО
	|ИЗ
	|	Справочник.БНФОДоговорыКредитовИДепозитов КАК БНФОДоговорыКредитовИДепозитов
	|ГДЕ
	|	БНФОДоговорыКредитовИДепозитов.Контрагент = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БНФОДоговорыКредитовИДепозитов.Ссылка КАК УсловиеЗайма,
	|	БНФОДоговорыКредитовИДепозитов.Контрагент.Ссылка КАК Контрагент,
	|	БНФОДоговорыКредитовИДепозитов.ДоговорКонтрагента.Ссылка КАК ДоговорКонтрагента,
	|	БНФОДоговорыКредитовИДепозитов.Номер КАК НомерДоговора,
	|	БНФОДоговорыКредитовИДепозитов.Контрагент.Наименование КАК ФИО
	|ИЗ
	|	Справочник.БНФОДоговорыКредитовИДепозитов КАК БНФОДоговорыКредитовИДепозитов
	|ГДЕ
	|	БНФОДоговорыКредитовИДепозитов.ДоговорКонтрагента = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БНФОДоговорыКредитовИДепозитов.Ссылка КАК УсловиеЗайма,
	|	БНФОДоговорыКредитовИДепозитов.Контрагент.Ссылка КАК Контрагент,
	|	БНФОДоговорыКредитовИДепозитов.ДоговорКонтрагента.Ссылка КАК ДоговорКонтрагента,
	|	БНФОДоговорыКредитовИДепозитов.Номер КАК НомерДоговора,
	|	БНФОДоговорыКредитовИДепозитов.Контрагент.Наименование КАК ФИО
	|ИЗ
	|	Справочник.БНФОДоговорыКредитовИДепозитов КАК БНФОДоговорыКредитовИДепозитов
	|ГДЕ
	|	БНФОДоговорыКредитовИДепозитов.Номер = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка",Аналитика );
	Масрез = Запрос.ВыполнитьПакет();
	//*********************************************************************** 
	Выборка = Масрез[0].Выбрать();
	Пока Выборка.Следующий() Цикл
		Контрагент    = Выборка.Контрагент;
		ФИО           = Выборка.ФИО;
		НомерДоговора = Выборка.НомерДоговора;
		ДоговорКонтрагента = Выборка.ДоговорКонтрагента;
		НовУслСС      = Выборка.УсловиеЗайма;
		Работаем      = Истина;  
	КонецЦикла;
	Если не Работаем Тогда
		Выборка = Масрез[1].Выбрать();
		Пока Выборка.Следующий() Цикл
			Контрагент    = Выборка.Контрагент;
			ФИО           = Выборка.ФИО;
			НомерДоговора = Выборка.НомерДоговора;
			ДоговорКонтрагента = Выборка.ДоговорКонтрагента;
			НовУслСС      = Выборка.УсловиеЗайма;
			Работаем      = Истина;  
		КонецЦикла;
	КонецЕсли; 
	Если не Работаем Тогда
		Выборка = Масрез[2].Выбрать();
		Пока Выборка.Следующий() Цикл
			Контрагент    = Выборка.Контрагент;
			ФИО           = Выборка.ФИО;
			ДоговорКонтрагента = Выборка.ДоговорКонтрагента;
			НомерДоговора = Выборка.НомерДоговора;
			НовУслСС      = Выборка.УсловиеЗайма;
			Работаем      = Истина;  
		КонецЦикла;
	КонецЕсли; 
	Если не Работаем Тогда
		Выборка = Масрез[3].Выбрать();
		Пока Выборка.Следующий() Цикл
			Контрагент    = Выборка.Контрагент;
			ФИО           = Выборка.ФИО;
			НомерДоговора = Выборка.НомерДоговора;
			ДоговорКонтрагента = Выборка.ДоговорКонтрагента;
			НовУслСС      = Выборка.УсловиеЗайма;
			Работаем      = Истина;  
		КонецЦикла;
	КонецЕсли; 
	//
	Если не Работаем Тогда
		
		pcru_CRM.ЗагрузитьКонтрагентаИзНАВ(Аналитика);
	КонецЕсли;
	
	Работаем = Ложь;
	Запрос = Новый Запрос;
	Стр = Новый Структура;
	Запрос.Текст = "ВЫБРАТЬ
	|	БНФОДоговорыКредитовИДепозитов.Ссылка КАК УсловиеЗайма,
	|	БНФОДоговорыКредитовИДепозитов.Контрагент.Ссылка КАК Контрагент,
	|	БНФОДоговорыКредитовИДепозитов.ДоговорКонтрагента.Ссылка КАК ДоговорКонтрагента,
	|	БНФОДоговорыКредитовИДепозитов.Номер КАК НомерДоговора,
	|	БНФОДоговорыКредитовИДепозитов.Контрагент.Наименование КАК ФИО
	|ИЗ
	|	Справочник.БНФОДоговорыКредитовИДепозитов КАК БНФОДоговорыКредитовИДепозитов
	|ГДЕ
	|	БНФОДоговорыКредитовИДепозитов.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БНФОДоговорыКредитовИДепозитов.Ссылка КАК УсловиеЗайма,
	|	БНФОДоговорыКредитовИДепозитов.Контрагент.Ссылка КАК Контрагент,
	|	БНФОДоговорыКредитовИДепозитов.ДоговорКонтрагента.Ссылка КАК ДоговорКонтрагента,
	|	БНФОДоговорыКредитовИДепозитов.Номер КАК НомерДоговора,
	|	БНФОДоговорыКредитовИДепозитов.Контрагент.Наименование КАК ФИО
	|ИЗ
	|	Справочник.БНФОДоговорыКредитовИДепозитов КАК БНФОДоговорыКредитовИДепозитов
	|ГДЕ
	|	БНФОДоговорыКредитовИДепозитов.Контрагент = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БНФОДоговорыКредитовИДепозитов.Ссылка КАК УсловиеЗайма,
	|	БНФОДоговорыКредитовИДепозитов.Контрагент.Ссылка КАК Контрагент,
	|	БНФОДоговорыКредитовИДепозитов.ДоговорКонтрагента.Ссылка КАК ДоговорКонтрагента,
	|	БНФОДоговорыКредитовИДепозитов.Номер КАК НомерДоговора,
	|	БНФОДоговорыКредитовИДепозитов.Контрагент.Наименование КАК ФИО
	|ИЗ
	|	Справочник.БНФОДоговорыКредитовИДепозитов КАК БНФОДоговорыКредитовИДепозитов
	|ГДЕ
	|	БНФОДоговорыКредитовИДепозитов.ДоговорКонтрагента = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БНФОДоговорыКредитовИДепозитов.Ссылка КАК УсловиеЗайма,
	|	БНФОДоговорыКредитовИДепозитов.Контрагент.Ссылка КАК Контрагент,
	|	БНФОДоговорыКредитовИДепозитов.ДоговорКонтрагента.Ссылка КАК ДоговорКонтрагента,
	|	БНФОДоговорыКредитовИДепозитов.Номер КАК НомерДоговора,
	|	БНФОДоговорыКредитовИДепозитов.Контрагент.Наименование КАК ФИО
	|ИЗ
	|	Справочник.БНФОДоговорыКредитовИДепозитов КАК БНФОДоговорыКредитовИДепозитов
	|ГДЕ
	|	БНФОДоговорыКредитовИДепозитов.Номер = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка",Аналитика );
	Масрез = Запрос.ВыполнитьПакет();
	//*********************************************************************** 
	Выборка = Масрез[0].Выбрать();
	Пока Выборка.Следующий() Цикл
		Контрагент    = Выборка.Контрагент;
		ФИО           = Выборка.ФИО;
		НомерДоговора = Выборка.НомерДоговора;
		ДоговорКонтрагента = Выборка.ДоговорКонтрагента;
		НовУслСС      = Выборка.УсловиеЗайма;
		Работаем      = Истина;  
	КонецЦикла;
	Если не Работаем Тогда
		Выборка = Масрез[1].Выбрать();
		Пока Выборка.Следующий() Цикл
			Контрагент    = Выборка.Контрагент;
			ФИО           = Выборка.ФИО;
			НомерДоговора = Выборка.НомерДоговора;
			ДоговорКонтрагента = Выборка.ДоговорКонтрагента;
			НовУслСС      = Выборка.УсловиеЗайма;
			Работаем      = Истина;  
		КонецЦикла;
	КонецЕсли; 
	Если не Работаем Тогда
		Выборка = Масрез[2].Выбрать();
		Пока Выборка.Следующий() Цикл
			Контрагент    = Выборка.Контрагент;
			ФИО           = Выборка.ФИО;
			ДоговорКонтрагента = Выборка.ДоговорКонтрагента;
			НомерДоговора = Выборка.НомерДоговора;
			НовУслСС      = Выборка.УсловиеЗайма;
			Работаем      = Истина;  
		КонецЦикла;
	КонецЕсли; 
	Если не Работаем Тогда
		Выборка = Масрез[3].Выбрать();
		Пока Выборка.Следующий() Цикл
			Контрагент    = Выборка.Контрагент;
			ФИО           = Выборка.ФИО;
			НомерДоговора = Выборка.НомерДоговора;
			ДоговорКонтрагента = Выборка.ДоговорКонтрагента;
			НовУслСС      = Выборка.УсловиеЗайма;
			Работаем      = Истина;  
		КонецЦикла;
	КонецЕсли; 
	//
	
	
	Если Работаем Тогда
		//
		Если Контрагент.АЭ_ИндивидуальныйПредприниматель Тогда
			Возврат ОткрытьСчетаИП_БыстрыйАлгоритм(Стр,Контрагент,ФИО,НомерДоговора,ДоговорКонтрагента,НовУслСС);	
		КонецЕсли; 
		//
		ДатаКонтракта = НачалоДня(ТекущаяДата()); 
		Стр.Вставить("УсловиеЗайма",НовУслСС);
		Стр.Вставить("Контрагент",Контрагент);
		Стр.Вставить("ДоговорКонтрагента",ДоговорКонтрагента);
		
		//Сначала создадим счета
		#Область ЗапросСчетовУчета 
		Запрос1 = Новый Запрос;
		Запрос1.Текст = "ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""4880181001""+&Номер+""00000""
		|;
		|
		|//////////////////////////////////////////////////////////////////////////////// 0
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""4880281001""+&Номер+""00000""
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////  1
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""4880381001""+&Номер+""00000""
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////   2
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""4880481001""+&Номер+""00000""
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////   3
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""4880581001""+&Номер+""00000""
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////   4
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""4880681001""+&Номер+""00000""
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////   5
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""4880781001""+&Номер+""00000""
		|;
		|////////////////////////////////////////////////////////////////////////////////  6
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""4880881001""+&Номер+""00000""
		|;
		|////////////////////////////////////////////////////////////////////////////////  7
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""4880981001""+&Номер+""00000""
		|;
		|////////////////////////////////////////////////////////////////////////////////  8
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""4881081001""+&Номер+""00000""
		|;
		|//////////////////////////////////////////////////////////////////////////////// 9
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""4880181002""+&Номер+""00000""
		|;
		|
		|//////////////////////////////////////////////////////////////////////////////// 10
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""4880281002""+&Номер+""00000""
		|;
		|
		|//////////////////////////////////////////////////////////////////////////////// 11
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""4880381002""+&Номер+""00000""
		|;
		|
		|//////////////////////////////////////////////////////////////////////////////// 12
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""4880481002""+&Номер+""00000""
		|;
		|
		|//////////////////////////////////////////////////////////////////////////////// 13
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""4880581002""+&Номер+""00000""
		|;
		|
		|//////////////////////////////////////////////////////////////////////////////// 14
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""4880681002""+&Номер+""00000""
		|;
		|
		|//////////////////////////////////////////////////////////////////////////////// 15
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""4880781002""+&Номер+""00000""
		|;
		|////////////////////////////////////////////////////////////////////////////////  16
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""4880881002""+&Номер+""00000""
		|;
		|////////////////////////////////////////////////////////////////////////////////  17
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""4880981002""+&Номер+""00000""
		|;
		|//////////////////////////////////////////////////////////////////////////////// 18
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""4881081002""+&Номер+""00000""
		|;
		
		|////////////////////////////////////////////////////////////////////////////////  19
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""6032281000""+&Номер+""00000""
		|;
		
		|////////////////////////////////////////////////////////////////////////////////   20
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""6032281002""+&Номер+""00000""
		|;
		|////////////////////////////////////////////////////////////////////////////////  21
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""6032281003""+&Номер+""00000""
		|;
		|////////////////////////////////////////////////////////////////////////////////  22
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""6032281004""+&Номер+""00000""
		|;
		|////////////////////////////////////////////////////////////////////////////////   23
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""6032281005""+&Номер+""00000""
		|;
		|////////////////////////////////////////////////////////////////////////////////  24
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""6032281006""+&Номер+""00000""
		|;
		|////////////////////////////////////////////////////////////////////////////////   25
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""6032281007""+&Номер+""00000""
		|;
		|////////////////////////////////////////////////////////////////////////////////   26
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""6032281008""+&Номер+""00000""
		|;
		|////////////////////////////////////////////////////////////////////////////////   27
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""6032281009""+&Номер+""00000""
		|;
		|////////////////////////////////////////////////////////////////////////////////   28
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""6032381000""+&Номер+""00000""
		|;
		|////////////////////////////////////////////////////////////////////////////////   29
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""6032381002""+&Номер+""00000""
		|;
		|////////////////////////////////////////////////////////////////////////////////   30
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""6032381003""+&Номер+""00000""
		|;
		|////////////////////////////////////////////////////////////////////////////////   31
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""6032381004""+&Номер+""00000""
		|;
		|////////////////////////////////////////////////////////////////////////////////   32
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""6032381005""+&Номер+""00000""
		|;
		|////////////////////////////////////////////////////////////////////////////////    33
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""6032381006""+&Номер+""00000""
		|;
		|////////////////////////////////////////////////////////////////////////////////    34
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""6032381007""+&Номер+""00000""
		|;
		|////////////////////////////////////////////////////////////////////////////////    35
		|ВЫБРАТЬ                                                                             
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""6032381008""+&Номер+""00000""
		|;
		|////////////////////////////////////////////////////////////////////////////////    36
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""6032381009""+&Номер+""00000""
		|;
		|////////////////////////////////////////////////////////////////////////////////    37
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""6032481000""+&Номер+""00000""
		|;
		|////////////////////////////////////////////////////////////////////////////////    38
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""6121781001""+&Номер+""00000""
		|;
		|////////////////////////////////////////////////////////////////////////////////    39
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""6121781002""+&Номер+""00000""
		|;
		|////////////////////////////////////////////////////////////////////////////////     40
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""6121781003""+&Номер+""00000"" 
		|;
		|////////////////////////////////////////////////////////////////////////////////    41
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""4742281000""+&Номер+""00000""
		|;
		|////////////////////////////////////////////////////////////////////////////////     42
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""4742381000""+&Номер+""00000"" 		
		|;
		|////////////////////////////////////////////////////////////////////////////////     43
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""4880181003""+&Номер+""00000"" 
		|;
		|////////////////////////////////////////////////////////////////////////////////    44
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""4880281003""+&Номер+""00000""
		|;
		|////////////////////////////////////////////////////////////////////////////////     45
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""4881081003""+&Номер+""00000"" ///////////    46
		|;
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""4880281004""+&Номер+""00000"" ///////////    47
		| ;
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета   //6032281012хххххххххх00000
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""6032281012""+&Номер+""00000"" ///////////    48 
		|;
		|ВЫБРАТЬ
		|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
		|ГДЕ
		|	БНФОСчетаАналитическогоУчета.Код = ""6032381012""+&Номер+""00000"" ///////////    49                                                                                     ";
		Запрос1.УстановитьПараметр("Номер",		НовУслСС.Номер );
		МассРез = Запрос1.ВыполнитьПакет();
		МассивдляСоздания = новый Массив;
		#КонецОбласти
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 
		#Область СозданиеСчктовАналитическогоУчета 
		ВыборкаИзМасРез = МассРез[0].Выбрать();
		Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_48801_1",ВыборкаИзМасРез.Ссылка);//0].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "4880181001"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "1"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48801");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
			НовыйСчетАналитики.Комментарий = "_48801_1";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "48801.1";
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//        
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_48801_1",НовыйСчетАналитики.Ссылка);//0].Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;  				
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 
		ВыборкаИзМасРез = МассРез[1].Выбрать(); 
		Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_48802_1",ВыборкаИзМасРез.Ссылка);//1].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "4880281001"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "1"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48802");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
			НовыйСчетАналитики.Комментарий = "_48802_1";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "48802.1";
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_48802_1",НовыйСчетАналитики.Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли; 
		
		ВыборкаИзМасРез = МассРез[2].Выбрать(); 
		Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_48803_1",ВыборкаИзМасРез.Ссылка);//2].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "4880381001"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "1"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48803");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
			НовыйСчетАналитики.Комментарий = "_48803_1";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "48803.1";
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_48803_1",НовыйСчетАналитики.Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;  
		
		ВыборкаИзМасРез = МассРез[3].Выбрать(); 
		Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_48804_1",ВыборкаИзМасРез.Ссылка);//3].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "4880481001"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "1"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48804");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
			НовыйСчетАналитики.Комментарий = "_48804_1";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "48804.1";
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_48804_1",НовыйСчетАналитики.Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;  
		
		ВыборкаИзМасРез = МассРез[4].Выбрать();
		Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_48805_1",ВыборкаИзМасРез.Ссылка);//4].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "4880581001"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "1"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48805");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
			НовыйСчетАналитики.Комментарий = "_48805_1";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "48805.1";
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_48805_1",НовыйСчетАналитики.Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;  
		
		ВыборкаИзМасРез = МассРез[5].Выбрать(); 
		Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_48806_1",ВыборкаИзМасРез.Ссылка);//5].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "4880681001"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "1"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48806");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
			НовыйСчетАналитики.Комментарий = "_48806_1";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "48806.1";
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_48806_1",НовыйСчетАналитики.Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;  
		
		ВыборкаИзМасРез = МассРез[6].Выбрать(); 
		Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_48807_1",ВыборкаИзМасРез.Ссылка);//6].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "4880781001"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "1"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48807");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
			НовыйСчетАналитики.Комментарий = "_48807_1";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "48807.1";
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_48807_1",НовыйСчетАналитики.Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;  
		
		ВыборкаИзМасРез = МассРез[7].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_48808_1",ВыборкаИзМасРез.Ссылка);//7].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "4880881001"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "1"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48808");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
			НовыйСчетАналитики.Комментарий = "_48808_1";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "48808.1";
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_48808_1",НовыйСчетАналитики.Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;  
		
		ВыборкаИзМасРез = МассРез[8].Выбрать();
		Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_48809_1",ВыборкаИзМасРез.Ссылка);//8].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "4880981001"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "1"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48809");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
			НовыйСчетАналитики.Комментарий = "_48809_1";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "48809.1";
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_48809_1",НовыйСчетАналитики.Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;  
		
		ВыборкаИзМасРез = МассРез[9].Выбрать();
		Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_48810_1",ВыборкаИзМасРез.Ссылка);//9].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "4881081001"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "1"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48810");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000035");
			НовыйСчетАналитики.Комментарий = "_48810_1";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "48810.1";
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_48810_1",НовыйСчетАналитики.Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;   
		
		ВыборкаИзМасРез = МассРез[10].Выбрать(); 
		Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_48801_2",ВыборкаИзМасРез.Ссылка);//10].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "4880181002"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "2"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48801");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
			НовыйСчетАналитики.Комментарий = "_48801_2";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "_48801.2";
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_48801_2",НовыйСчетАналитики.Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;  
		
		ВыборкаИзМасРез = МассРез[11].Выбрать(); 
		Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_48802_2",ВыборкаИзМасРез.Ссылка);//11].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "4880281002"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "2"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48802");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
			НовыйСчетАналитики.Комментарий = "_48802_2";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "48802.2";
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_48802_2",НовыйСчетАналитики.Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;  
		
		ВыборкаИзМасРез = МассРез[12].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_48803_2",ВыборкаИзМасРез.Ссылка);//12].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "4880381002"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "2"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48803");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
			НовыйСчетАналитики.Комментарий = "_48803_2";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "48803.2";
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_48803_2",НовыйСчетАналитики.Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;  
		
		ВыборкаИзМасРез = МассРез[13].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_48804_2",ВыборкаИзМасРез.Ссылка);//13].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "4880481002"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "2"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48804");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
			НовыйСчетАналитики.Комментарий = "_48804_2";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "48804.2";
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_48804_2",НовыйСчетАналитики.Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;  
		
		ВыборкаИзМасРез = МассРез[14].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_48805_2",ВыборкаИзМасРез.Ссылка);//14].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "4880581002"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "2"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48805");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
			НовыйСчетАналитики.Комментарий = "_48805_2";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "48805.2";
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_48805_2",НовыйСчетАналитики.Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;  
		
		ВыборкаИзМасРез = МассРез[15].Выбрать(); 
		Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_48806_2",ВыборкаИзМасРез.Ссылка);//15].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "4880681002"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "2"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48806");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
			НовыйСчетАналитики.Комментарий = "_48806_2";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "48806.2";
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//¶           
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_48806_2",НовыйСчетАналитики.Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;  
		
		ВыборкаИзМасРез = МассРез[16].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_48807_2",ВыборкаИзМасРез.Ссылка);//16].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "4880781002"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "2"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48807");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
			НовыйСчетАналитики.Комментарий = "_48807_2";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "48807.2";
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_48807_2",НовыйСчетАналитики.Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;  
		
		ВыборкаИзМасРез = МассРез[17].Выбрать();
		Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_48808_2",ВыборкаИзМасРез.Ссылка);//17].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "4880881002"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "2"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48808");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
			НовыйСчетАналитики.Комментарий = "_48808_2";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "48808.2";
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_48808_2",НовыйСчетАналитики.Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;  
		
		ВыборкаИзМасРез = МассРез[18].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_48809_2",ВыборкаИзМасРез.Ссылка);//18].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "4880981002"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "2"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48809");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
			НовыйСчетАналитики.Комментарий = "_48809_2";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "48809.2";
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_48808_2",НовыйСчетАналитики.Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;  
		
		ВыборкаИзМасРез = МассРез[19].Выбрать(); 
		Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_48810_2",ВыборкаИзМасРез.Ссылка);//19].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "4881081002"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "2"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48810");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000035");
			НовыйСчетАналитики.Комментарий = "_48810_2";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "48810.2";
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_48810_2",НовыйСчетАналитики.Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;   
		
		ВыборкаИзМасРез = МассРез[20].Выбрать();
		Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_60322_1",ВыборкаИзМасРез.Ссылка);//20].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "6032281000"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "0"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
			НовыйСчетАналитики.Комментарий = "_60322_1";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "60322.1";
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_60322_1",НовыйСчетАналитики.Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;    
		
		ВыборкаИзМасРез = МассРез[21].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_60322_2",ВыборкаИзМасРез.Ссылка);//21].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "6032281002"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "2"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
			НовыйСчетАналитики.Комментарий = "_60322_2";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "60322.2";
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;	
			//
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_60322_2",НовыйСчетАналитики.Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;     
		
		ВыборкаИзМасРез = МассРез[22].Выбрать();
		Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_60322_3",ВыборкаИзМасРез.Ссылка);//22].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "6032281003"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "3"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
			НовыйСчетАналитики.Комментарий = "_60322_3";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "61217.3";	
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_60322_3",НовыйСчетАналитики.Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;     
		
		ВыборкаИзМасРез = МассРез[23].Выбрать();
		Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_60322_4",ВыборкаИзМасРез.Ссылка);//23].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "6032281004"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "4"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
			НовыйСчетАналитики.Комментарий = "_60322_4";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "60322.4";
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//
			НовыйСчетАналитики.Записать();
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;     
		
		ВыборкаИзМасРез = МассРез[24].Выбрать();
		Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_60322_5",ВыборкаИзМасРез.Ссылка);//24].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "6032281005"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "5"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
			НовыйСчетАналитики.Комментарий = "_60322_5";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "60322.5";
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_60322_5",НовыйСчетАналитики.Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;     
		
		ВыборкаИзМасРез = МассРез[25].Выбрать(); 
		Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_60322_6",ВыборкаИзМасРез.Ссылка);//25].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "6032281006"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "6"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
			НовыйСчетАналитики.Комментарий = "_60322_6";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "60322.6";
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_60322_6",НовыйСчетАналитики.Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;     
		
		ВыборкаИзМасРез = МассРез[26].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_60322_7",ВыборкаИзМасРез.Ссылка);//26].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "6032281007"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "7"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
			НовыйСчетАналитики.Комментарий = "_60322_7";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "60322.7";
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//¶ 
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_60322_7",НовыйСчетАналитики.Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;     
		
		ВыборкаИзМасРез = МассРез[27].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_60322_8",ВыборкаИзМасРез.Ссылка);//27].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "6032281008"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "8"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
			НовыйСчетАналитики.Комментарий = "_60322_8";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "61217.3";
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//¶ 
			НовыйСчетАналитики.Записать();
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;    
		
		ВыборкаИзМасРез = МассРез[28].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_60322_9",ВыборкаИзМасРез.Ссылка);//28].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "6032281009"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "9"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
			НовыйСчетАналитики.Комментарий = "_60322_9";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "60322.9";
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_60322_9",НовыйСчетАналитики.Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;     
		
		ВыборкаИзМасРез = МассРез[29].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_60323_1",ВыборкаИзМасРез.Ссылка);//29].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "6032381000"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "0"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
			НовыйСчетАналитики.Комментарий = "_60323_1";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "60323.1";	
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_60323_1",НовыйСчетАналитики.Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;     
		
		ВыборкаИзМасРез = МассРез[30].Выбрать(); 
		Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_60323_2",ВыборкаИзМасРез.Ссылка);//30].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "6032381002"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "2"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
			НовыйСчетАналитики.Комментарий = "_60323_2";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "60323.2";
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_60323_2",НовыйСчетАналитики.Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;     
		
		ВыборкаИзМасРез = МассРез[31].Выбрать(); 
		Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_60323_3",ВыборкаИзМасРез.Ссылка);//31].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "6032381003"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "3"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
			НовыйСчетАналитики.Комментарий = "_60323_3";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "60323.3";
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_60323_3",НовыйСчетАналитики.Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;     
		
		ВыборкаИзМасРез = МассРез[32].Выбрать();
		Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_60323_4",ВыборкаИзМасРез.Ссылка);//32].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "6032381004"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "4"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
			НовыйСчетАналитики.Комментарий = "_60323_4";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "60323.4";
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_60323_4",НовыйСчетАналитики.Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;     
		
		ВыборкаИзМасРез = МассРез[33].Выбрать(); 
		Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_60323_5",ВыборкаИзМасРез.Ссылка);//33].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "6032381005"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "5"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
			НовыйСчетАналитики.Комментарий = "_60323_5";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "60323.5";
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_60323_5",НовыйСчетАналитики.Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;     
		ВыборкаИзМасРез = МассРез[34].Выбрать(); 
		Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_60323_6",ВыборкаИзМасРез.Ссылка);//34].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "6032381006"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "6"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
			НовыйСчетАналитики.Комментарий = "_60323_6";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "60323.6";	
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_60323_6",НовыйСчетАналитики.Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;     
		ВыборкаИзМасРез = МассРез[35].Выбрать();
		Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_60323_7",ВыборкаИзМасРез.Ссылка);//35].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "6032381007"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "7"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
			НовыйСчетАналитики.Комментарий = "_60323_7";
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "60323.7";
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_60323_7",НовыйСчетАналитики.Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;     
		ВыборкаИзМасРез = МассРез[36].Выбрать(); 
		Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_60323_8",ВыборкаИзМасРез.Ссылка);//36].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "6032381008"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "8"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
			НовыйСчетАналитики.Комментарий = "_60323_8";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "61217.3";
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_60323_8",НовыйСчетАналитики.Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;     
		ВыборкаИзМасРез = МассРез[37].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_60323_9",ВыборкаИзМасРез.Ссылка);//37].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "6032381009"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "9"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
			НовыйСчетАналитики.Комментарий = "_60323_9";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "60323.9";
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_60323_9",НовыйСчетАналитики.Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;      
		ВыборкаИзМасРез = МассРез[38].Выбрать();
		Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_60324_1",ВыборкаИзМасРез.Ссылка);//38].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "6032481000"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "0"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60324");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
			НовыйСчетАналитики.Комментарий = "_60324_1";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "60324.1";
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//         
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_60324_1",НовыйСчетАналитики.Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли; 
		ВыборкаИзМасРез = МассРез[39].Выбрать();
		Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_61217_1",ВыборкаИзМасРез.Ссылка);//39].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "6121781001"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "1"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("61217");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
			НовыйСчетАналитики.Комментарий = "_61217_1";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "61217.1";
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_61217_1",НовыйСчетАналитики.Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;  
		ВыборкаИзМасРез = МассРез[40].Выбрать();
		Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_61217_2",ВыборкаИзМасРез.Ссылка);//40].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "6121781002"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "2"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("61217");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
			НовыйСчетАналитики.Комментарий = "_61217_2";
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "61217.2";
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_61217_2",НовыйСчетАналитики.Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;  
		ВыборкаИзМасРез = МассРез[41].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_61217_3",ВыборкаИзМасРез.Ссылка);//41].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "6121781003"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "3"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("61217");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
			НовыйСчетАналитики.Комментарий = "_61217_3";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "61217.3";
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_61217_3",НовыйСчетАналитики.Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;
		////////////////////////////////
		ВыборкаИзМасРез = МассРез[42].Выбрать(); 
		Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_47422_9",ВыборкаИзМасРез.Ссылка);//41].Ссылка);
			Стр.Вставить("_47422_8",ВыборкаИзМасРез.Ссылка);//41].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "4742281000"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "0"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("47422");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
			НовыйСчетАналитики.Комментарий = "_47422_9";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "47422.9";
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_47422_9",НовыйСчетАналитики.Ссылка);
			Стр.Вставить("_47422_8",НовыйСчетАналитики.Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;
		//////////////////////////////////////
		ВыборкаИзМасРез = МассРез[43].Выбрать();
		Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_47423_9",ВыборкаИзМасРез.Ссылка);//41].Ссылка);
			Стр.Вставить("_47423_8",ВыборкаИзМасРез.Ссылка);//41].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "4742381000"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "0"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("47423");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
			НовыйСчетАналитики.Комментарий = "_47423_9";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "_47423_9";
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_47423_9",НовыйСчетАналитики.Ссылка);
			Стр.Вставить("_47423_8",НовыйСчетАналитики.Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;
		
		
		
		
		ВыборкаИзМасРез = МассРез[44].Выбрать(); 
		Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_48801_3",ВыборкаИзМасРез.Ссылка);//19].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "4880181003"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "3"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48801");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000035");
			НовыйСчетАналитики.Комментарий = "_48801_3";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "48801.3";
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_48801_3",НовыйСчетАналитики.Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;   
		
		
		ВыборкаИзМасРез = МассРез[45].Выбрать(); 
		Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_48802_3",ВыборкаИзМасРез.Ссылка);//19].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "4880281003"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "3"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48802");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000035");
			НовыйСчетАналитики.Комментарий = "_48802_3";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "48802.3";
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_48802_3",НовыйСчетАналитики.Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;   
		
		ВыборкаИзМасРез = МассРез[46].Выбрать(); 
		Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_48810_3",ВыборкаИзМасРез.Ссылка);//19].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "4881081003"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "3"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48810");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000035");
			НовыйСчетАналитики.Комментарий = "_48810_3";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "48810.3";
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_48810_3",НовыйСчетАналитики.Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;   
		
		
		
		
		ВыборкаИзМасРез = МассРез[47].Выбрать(); 
		Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_48802_4",ВыборкаИзМасРез.Ссылка);//19].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "4880281004"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "4"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48802");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000035");
			НовыйСчетАналитики.Комментарий = "_48802_4";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "48802.4";
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_48802_4",НовыйСчетАналитики.Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;
		
		//6032281012хххххххххх00000
		
		ВыборкаИзМасРез = МассРез[48].Выбрать(); 
		Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_60322_12",ВыборкаИзМасРез.Ссылка);//19].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "6032281012"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "12"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
			НовыйСчетАналитики.Комментарий = "_60322_12";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "60322.12";
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_60322_12",НовыйСчетАналитики.Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;
		
		ВыборкаИзМасРез = МассРез[49].Выбрать(); 
		Если ВыборкаИзМасРез.Следующий()   Тогда
			Стр.Вставить("_60323_12",ВыборкаИзМасРез.Ссылка);//19].Ссылка);
		Иначе 
			НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
			НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
			НовыйСчетАналитики.Код = "6032381012"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
			НовыйСчетАналитики.ПроизвольныйСегмент = "12"+НовУслСС.Номер+"00000";
			НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
			НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
			НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
			НовыйСчетАналитики.Комментарий = "_60323_12";
			//
			НовыйСчетАналитики.pcru_ex_КодСчетаНАВ = "60323.12";
			НовыйСчетАналитики.pcru_ex_Контрагент = Контрагент;
			НовыйСчетАналитики.pcru_ex_Контракт = НовУслСС;
			//
			НовыйСчетАналитики.Записать();
			Стр.Вставить("_60323_12",НовыйСчетАналитики.Ссылка);
			МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
		КонецЕсли;
		
		#КонецОбласти
		
		Если МассивдляСоздания.Количество() > 0 Тогда
			//	Если ложь Тогда
			УстановитьПривилегированныйРежим(Истина);
			ДокументОбъект = Документы.БНФООткрытиеСчетовАналитическогоУчета.СоздатьДокумент();
			ДокументОбъект.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			ДокументОбъект.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Займы выданные");
			ДокументОбъект.Организация  = Справочники.Организации.НайтиПоИНН("7838492459");
			ДокументОбъект.Валюта = Справочники.Валюты.НайтиПоКоду("643");									
			ДокументОбъект.Дата =  ТекущаяДата();//ДатаКонтракта;
			Нстр  =  ДокументОбъект.ДополнительныеГруппыФинансовогоУчета.Добавить();
			Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Корректировки по займам выданным");
			Нстр  =  ДокументОбъект.ДополнительныеГруппыФинансовогоУчета.Добавить();
			Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Начисленные проценты по займам выданным");
			Нстр  =  ДокументОбъект.ДополнительныеГруппыФинансовогоУчета.Добавить();
			Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Начисленные прочие доходы по займам выданным");
			Нстр  =  ДокументОбъект.ДополнительныеГруппыФинансовогоУчета.Добавить();
			Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Начисленные расходы по займам выданным");
			Нстр  =  ДокументОбъект.ДополнительныеГруппыФинансовогоУчета.Добавить();
			Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Расчеты по процентам по займам выданным");
			Нстр  =  ДокументОбъект.ДополнительныеГруппыФинансовогоУчета.Добавить();
			Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Расчеты по прочим доходам по займам выданным");
			Нстр  =  ДокументОбъект.ДополнительныеГруппыФинансовогоУчета.Добавить();
			Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Расчеты по расходам по займам выданным");
			Нстр  =  ДокументОбъект.ДополнительныеГруппыФинансовогоУчета.Добавить();
			Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
			//
			Нстр  =  ДокументОбъект.ДополнительныеГруппыФинансовогоУчета.Добавить();
			Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаРасчетов.НайтиПоНаименованию("47422-47423 КэшБэк");
			//
			
			Для каждого СчетУчетаДляОткрытия Из МассивдляСоздания Цикл
				#Область область48801_09_1                                                              
				Если СчетУчетаДляОткрытия.Комментарий = "_48801_1" Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();                                 
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//0;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//0;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000023");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//0;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000014");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Займы выданные");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48801");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//0;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Срочная, Займы выданные";
				КонецЕсли; 
				Если  СчетУчетаДляОткрытия.Комментарий = "_48802_1" Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//3;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//3;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000023");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//3;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000014");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Начисленные проценты по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48802");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//3;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Срочная, Начисленные проценты по займам выданным";
				КонецЕсли;
				
				Если СчетУчетаДляОткрытия.Комментарий = "_48803_1"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//4;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//4;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000023");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//4;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000014");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Начисленные прочие доходы по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48803");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//4;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Срочная, Начисленные прочие доходы по займам выданным";
				КонецЕсли;
				
				Если  СчетУчетаДляОткрытия.Комментарий = "_48804_1"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//7;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//7;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000023");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//7;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000014");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Расчеты по прочим доходам по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48804");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//7;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Срочная,Расчеты по прочим доходам по займам выданным";
				КонецЕсли;
				
				Если  СчетУчетаДляОткрытия.Комментарий = "_48805_1"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//5;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//5;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000023");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//5;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000014");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Начисленные расходы по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48805");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//5;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Срочная, Начисленные расходы по займам выданным";
				КонецЕсли;
				
				Если  СчетУчетаДляОткрытия.Комментарий = "_48806_1"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//8;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//8;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000023");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//8;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000014");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Расчеты по расходам по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48806");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//8;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Срочная, Расчеты по расходам по займам выданным";
				КонецЕсли;
				
				Если СчетУчетаДляОткрытия.Комментарий = "_48807_1"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//1;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//1;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000023");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//1;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаАктивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000014");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Корректировки по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48807");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//1;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Срочная, Корректировки по займам выданным";
				КонецЕсли;
				
				Если СчетУчетаДляОткрытия.Комментарий = "_48808_1"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//2;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//2;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000023");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//2;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаПассивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000014");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Корректировки по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48808");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//2;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Срочная, Корректировки по займам выданным";
				КонецЕсли;
				
				
				Если СчетУчетаДляОткрытия.Комментарий = "_48809_1"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//6;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//6;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000023");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//6;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000014");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Расчеты по процентам по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48809");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//6;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Срочная, Расчеты по процентам по займам выданным";
				КонецЕсли;
				
				
				#КонецОбласти 
				#Область область48801_09_2
				Если  СчетУчетаДляОткрытия.Комментарий = "_48801_2"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//    КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//    КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000024");  
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000014"); 
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Займы выданные");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48801");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000024"))+", Займы выданные";
				КонецЕсли;
				
				Если  СчетУчетаДляОткрытия.Комментарий = "_48807_2"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000024");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаАктивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000014");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Корректировки по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48807");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000024"))+", Корректировки по займам выданным";
				КонецЕсли;
				
				Если  СчетУчетаДляОткрытия.Комментарий = "_48808_2"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000024");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаПассивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000014");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Корректировки по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48808");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000024"))+", Корректировки по займам выданным";
				КонецЕсли;
				
				Если СчетУчетаДляОткрытия.Комментарий = "_48802_2"   Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000024");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000014");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Начисленные проценты по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48802");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000024"))+", Начисленные проценты по займам выданным";
				КонецЕсли;
				
				Если  СчетУчетаДляОткрытия.Комментарий = "_48803_2"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000024");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000014");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Начисленные прочие доходы по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48803");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000024"))+", Начисленные прочие доходы по займам выданным";
				КонецЕсли;
				
				Если  СчетУчетаДляОткрытия.Комментарий = "_48805_2"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000024");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000014");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Начисленные расходы по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48805");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000024"))+", Начисленные расходы по займам выданным";
				КонецЕсли;
				
				Если  СчетУчетаДляОткрытия.Комментарий = "_48809_2"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000024");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000014");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Расчеты по процентам по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48809");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000024"))+", Расчеты по процентам по займам выданным";
				КонецЕсли;
				
				Если СчетУчетаДляОткрытия.Комментарий = "_48804_2"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;// КлючСтроки;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000024");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000014");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Расчеты по прочим доходам по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48804");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;// КлючСтроки;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000024"))+",Расчеты по прочим доходам по займам выданным";
				КонецЕсли;
				
				
				
				Если СчетУчетаДляОткрытия.Комментарий = "_48806_2"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;// КлючСтроки;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;// КлючСтроки;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000024");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000014");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Расчеты по расходам по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48806");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;// КлючСтроки;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000024"))+", Расчеты по расходам по займам выданным";
				КонецЕсли;
				
				#КонецОбласти	
				#Область область48810_1_и_2
				Если  СчетУчетаДляОткрытия.Комментарий = "_48810_1"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//9;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//9;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоКоду("0000000034");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000025");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//9;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000015");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48810");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//9;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Беспроблемная, Резервы под обесценение по займам выданным";
				КонецЕсли;
				
				
				Если  СчетУчетаДляОткрытия.Комментарий = "_48810_2"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//9;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//9;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоКоду("0000000034");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000026");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//9;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000015");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48810");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//9;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Беспроблемная, Резервы под обесценение по займам выданным";
				КонецЕсли;
				
				#КонецОбласти
				#Область Область60324 
				Если СчетУчетаДляОткрытия.Комментарий = "_60324_1"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//15;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					//Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКонтрагента;
					//Нстр.КлючеваяАналитика = Истина;
					//Нстр.ЗаполнятьОбязательно = Ложь;
					//Нстр.ЗначениеАналитики = ДоговорКонтрагента;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//15;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");//ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000028");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//15;
					//  
					//НСчет = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
					//  НСчет.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60324");	
					//  НСчет.Код = "60324"+"81000"+Прав(НомерДоговора,10)+"00000";
					//  НСчет.ПроизвольныйСегмент =  "0"+Прав(НомерДоговора,10)+"00000"; //0005500006600000
					//  НСчет.Наименование =  "Резервы  "+Строка(ФИО)+" по договору "+Строка(НомерДоговора);
					//  НСчет.Валюта  = Справочники.Валюты.НайтиПоКоду("643");
					//  НСчет.Организация  = Справочники.Организации.НайтиПоИНН("7838492459");
					//  НСчет.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
					//  НСчет.ТребуетсяПереоценка = ложь;
					//  НСчет.ТребуетсяСверка = ложь;
					//  НСчет.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
					//  НСчет.ГруппаФинансовогоУчета =Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
					//  НСчет.ПовторноеИспользованиеНомераСчета = Истина;
					//  НСчет.Комментарий = "Резервы  "+Строка(ФИО)+" по договору "+Строка(НомерДоговора); 
					//  НСчет.СпособХранения = 1;
					//  НСчет.Записать();
					
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.Резервы;
					//Нстр.СчетАналитическогоУчета =  НСчет;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60324");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//15;
					Нстр.ДатаОткрытия = ТекущаяДата();
					Нстр.Наименование = "Резервы  "+Строка(ФИО)+" по договору "+Строка(НомерДоговора);
				КонецЕсли;
				#КонецОбласти
				#Область область60322_23 
				Если СчетУчетаДляОткрытия.Комментарий = "_60322_1" Тогда   
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000028");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаПассивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр.ДатаОткрытия = ТекущаяДата();
					Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора);
				КонецЕсли; 
				Если СчетУчетаДляОткрытия.Комментарий = "_60323_1"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000028");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаАктивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр.ДатаОткрытия = ТекущаяДата();
					Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора);
				КонецЕсли;
				#КонецОбласти
				#Область область60322_23_000000029 
				Если СчетУчетаДляОткрытия.Комментарий = "_60322_2"  Тогда   
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000029");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаПассивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр.ДатаОткрытия = ТекущаяДата();
					Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000029"));
				КонецЕсли; 
				Если СчетУчетаДляОткрытия.Комментарий = "_60323_2"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000029");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаАктивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр.ДатаОткрытия = ТекущаяДата();
					Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000029"));
				КонецЕсли;
				#КонецОбласти
				#Область  область60322_23_000000030 
				Если СчетУчетаДляОткрытия.Комментарий = "_60322_3"  Тогда   
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000030");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаПассивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр.ДатаОткрытия = ТекущаяДата();
					Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000030"));
				КонецЕсли; 
				Если СчетУчетаДляОткрытия.Комментарий = "_60323_3"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000030");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаАктивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр.ДатаОткрытия = ТекущаяДата();
					Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000030"));
				КонецЕсли;
				#КонецОбласти
				
				#Область область60322_23_000000031 
				Если СчетУчетаДляОткрытия.Комментарий = "_60322_4"   Тогда   
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000031");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаПассивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр.ДатаОткрытия = ТекущаяДата();
					Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000031"));
				КонецЕсли; 
				Если СчетУчетаДляОткрытия.Комментарий = "_60323_4"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000031");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаАктивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр.ДатаОткрытия = ТекущаяДата();
					Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000031"));
				КонецЕсли;
				#КонецОбласти
				
				#Область  область60322_23_000000032 
				Если СчетУчетаДляОткрытия.Комментарий = "_60322_5"  Тогда   
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000032");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаПассивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр.ДатаОткрытия = ТекущаяДата();
					Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000032"));
				КонецЕсли; 
				Если СчетУчетаДляОткрытия.Комментарий = "_60323_5"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000032");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаАктивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр.ДатаОткрытия = ТекущаяДата();
					Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000032"));
				КонецЕсли;
				#КонецОбласти
				
				#Область  область60322_23_000000033 
				Если СчетУчетаДляОткрытия.Комментарий = "_60322_6" Тогда   
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000033");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаПассивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Расчеты по прочим доходам по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр.ДатаОткрытия = ТекущаяДата();
					Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000033"));
				КонецЕсли; 
				Если СчетУчетаДляОткрытия.Комментарий = "_60323_6"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000033");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаАктивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Расчеты по прочим доходам по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр.ДатаОткрытия = ТекущаяДата();
					Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000033"));
				КонецЕсли;
				#КонецОбласти
				
				#Область  область60322_23_000000034 
				Если СчетУчетаДляОткрытия.Комментарий = "_60322_7"  Тогда   
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000034");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаПассивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр.ДатаОткрытия = ТекущаяДата();
					Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000034"));
				КонецЕсли; 
				Если  СчетУчетаДляОткрытия.Комментарий = "_60323_7"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000034");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаАктивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр.ДатаОткрытия = ТекущаяДата();
					Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000034"));
				КонецЕсли;
				#КонецОбласти
				
				#Область  область60322_23_000000035 
				Если СчетУчетаДляОткрытия.Комментарий = "_60322_8"  Тогда   
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000035");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаПассивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр.ДатаОткрытия = ТекущаяДата();
					Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000035"));
				КонецЕсли; 
				Если СчетУчетаДляОткрытия.Комментарий = "_60323_8"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000035");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаАктивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр.ДатаОткрытия = ТекущаяДата();
					Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000035"));
				КонецЕсли;
				#КонецОбласти
				
				#Область  область60322_23_000000036 
				Если СчетУчетаДляОткрытия.Комментарий = "_60322_9"  Тогда   
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000036");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаПассивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр.ДатаОткрытия = ТекущаяДата();
					Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000036"));
				КонецЕсли; 
				Если СчетУчетаДляОткрытия.Комментарий = "_60323_9"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000036");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаАктивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр.ДатаОткрытия = ТекущаяДата();
					Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000036"));
				КонецЕсли;
				#КонецОбласти
				
				#Область область61217_000000085 
				Если СчетУчетаДляОткрытия.Комментарий = "_61217_1"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид выбытия займов");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000085");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000033");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Выбытие займов");
					
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("61217");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр.ДатаОткрытия = ТекущаяДата();
					Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000036"));
				КонецЕсли;
				#КонецОбласти
				
				#Область Область61217_000000086 
				Если СчетУчетаДляОткрытия.Комментарий = "_61217_2" Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =  ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид выбытия займов");
					
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000086");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000033");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Выбытие займов");
					
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("61217");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр.ДатаОткрытия = ТекущаяДата();
					Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000036"));
				КонецЕсли;
				#КонецОбласти
				//////////////////////////////////////////////******************************					
				#Область Область47422 
				Если СчетУчетаДляОткрытия.Комментарий = "_47422_9"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000028");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаПассивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000037");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаРасчетов.НайтиПоНаименованию("47422-47423 КэшБэк");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("47422");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр.ДатаОткрытия = ТекущаяДата();
					Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000036"));
				КонецЕсли;
				#КонецОбласти
				
				#Область Область47422 
				Если СчетУчетаДляОткрытия.Комментарий = "_47423_9"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000028");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаАктивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000037");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаРасчетов.НайтиПоНаименованию("47422-47423 КэшБэк");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("47423");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр.ДатаОткрытия = ТекущаяДата();
					Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000036"));
				КонецЕсли;
				#КонецОбласти
				
				#Область область48801_02_10_3                                                              
				Если СчетУчетаДляОткрытия.Комментарий = "_48801_3" Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();                                 
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//0;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//0;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000089");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//0;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000014");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Займы выданные");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48801");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//0;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Дефолт, Займы выданные";
				КонецЕсли; 
				
				Если  СчетУчетаДляОткрытия.Комментарий = "_48802_3" Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//3;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//3;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000089");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//3;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000014");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Начисленные проценты по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48802");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//3;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Дефолт, Начисленные проценты по займам выданным";
				КонецЕсли;
				
				
				Если СчетУчетаДляОткрытия.Комментарий = "_48810_3"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//6;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//6;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000089");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//6;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000014");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48810");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//6;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Дефолт, Расчеты по процентам по займам выданным";
				КонецЕсли;
				
				
				//Кредитные каникулы
				
				Если  СчетУчетаДляОткрытия.Комментарий = "_48802_4" Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//3;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//3;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000091");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//3;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000014");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Начисленные проценты по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48802");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//3;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Крединые Каникулы, Начисленные проценты по займам выданным";
				КонецЕсли;
				
				
				
				#КонецОбласти 
				
				//6032281012хххххххххх00000
				Если  СчетУчетаДляОткрытия.Комментарий = "_60322_12" Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//3;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//3;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000094");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//3;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Начисленные проценты по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//3;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", СТраховка";
				КонецЕсли;
				
				Если  СчетУчетаДляОткрытия.Комментарий = "_60323_12" Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//3;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//3;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000094");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//3;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Начисленные проценты по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//3;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", СТраховка";
				КонецЕсли;
				
				
				Нстр.СчетАналитическогоУчета = СчетУчетаДляОткрытия; 
			КонецЦикла; 
			
			Если ДокументОбъект.СчетаУчета.Количество() > 0 Тогда
				НачатьТранзакцию();
				Попытка
					ЗафиксироватьТранзакцию();
				Исключение
					ОтменитьТранзакцию();
					Text = "Ошибка открытия счетов!!!!!!!!!!!"+Символы.ПС;
					Text = Text +"Контрагент: "+ФИО+Символы.ПС;
					Text = Text +"Договор №: "+НомерДоговора+Символы.ПС;
					Text = Text +"Следующие Счета созданы но не открыты: "+Символы.ПС;
					Для каждого СчетУчетаДляОткрытия Из МассивдляСоздания Цикл
						Text = Text + СчетУчетаДляОткрытия.Код + Символы.ПС;
					КонецЦикла;
					Text = Text +"Описание ошибки: "+Символы.ПС;
					Text = Text + ОписаниеОшибки(); 
					pcru_ex_Почта.Сообщить_об_ошибке(Text);
					
					ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
					Сообщить(  Text);
				КонецПопытки;
			КонецЕсли;
			//Иначе 
			//	Стр.Вставить("УсловиеЗайма",Справочники.БНФОДоговорыКредитовИДепозитов.ПустаяСсылка());
			//	Стр.Вставить("Контрагент",Справочники.Контрагенты.ПустаяСсылка());
			//	Стр.Вставить("ДоговорКонтрагента",Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
		КонецЕсли;
	КонецЕсли;
	Возврат Стр;
КонецФункции // ()

// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ПолучитьСчетСтр(Стр,Счет)  Экспорт
	
	если стр.Свойство("_"+СтрЗаменить(Счет,".","_")) Тогда
		Возврат стр["_"+СтрЗаменить(Счет,".","_")];
	Иначе	
		СчетИП = "_"+СтрЗаменить(Счет,".","_");
		СчетИП = СтрЗаменить(СчетИП,"488","494");
		если стр.Свойство(СчетИП) Тогда
			Возврат стр[СчетИП];
		Иначе	
			ТекстПисьма = "В Структуре содержащей :"+Символы.ПС;
			Для Каждого ЭлементСТруктуры из Стр Цикл
				ТекстПисьма = ТекстПисьма + СТрока(ЭлементСТруктуры.Ключ)+" -> "+ СТрока(ЭлементСТруктуры.Значение)+Символы.ПС;
			КонецЦикла;
			ТекстПисьма = ТекстПисьма + "Нет элемента : "+ СТрока(Счет)+" подставлен вспомогательный счет";
			pcru_ex_Почта.Сообщить_об_ошибке(ТекстПисьма);
			Возврат Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("0000081000000000000000001");
		КонецЕсли;
	КонецЕсли;
	
	
КонецФункции // ПолучитьСчетСтр(СтрСчета,"48801.1")()

// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ОткрытьСчетаИП(Аналитика)Экспорт
	Работаем = Ложь;
	Запрос = Новый Запрос;
	Стр = Новый Структура;
	Запрос.Текст = "ВЫБРАТЬ
	|	БНФОДоговорыКредитовИДепозитов.Ссылка КАК УсловиеЗайма,
	|	БНФОДоговорыКредитовИДепозитов.Контрагент.Ссылка КАК Контрагент,
	|	БНФОДоговорыКредитовИДепозитов.ДоговорКонтрагента.Ссылка КАК ДоговорКонтрагента,
	|	БНФОДоговорыКредитовИДепозитов.Номер КАК НомерДоговора,
	|	БНФОДоговорыКредитовИДепозитов.Контрагент.Наименование КАК ФИО
	|ИЗ
	|	Справочник.БНФОДоговорыКредитовИДепозитов КАК БНФОДоговорыКредитовИДепозитов
	|ГДЕ
	|	БНФОДоговорыКредитовИДепозитов.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка",Аналитика );
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Контрагент    = Выборка.Контрагент;
		ФИО           = Выборка.ФИО;
		НомерДоговора = Выборка.НомерДоговора;
		ДоговорКонтрагента = Выборка.ДоговорКонтрагента;
		НовУслСС      = Выборка.УсловиеЗайма;
		Работаем      = Истина;  
	КонецЦикла;
	Запрос.Текст = "ВЫБРАТЬ
	|	БНФОДоговорыКредитовИДепозитов.Ссылка КАК УсловиеЗайма,
	|	БНФОДоговорыКредитовИДепозитов.Контрагент.Ссылка КАК Контрагент,
	|	БНФОДоговорыКредитовИДепозитов.ДоговорКонтрагента.Ссылка КАК ДоговорКонтрагента,
	|	БНФОДоговорыКредитовИДепозитов.Номер КАК НомерДоговора,
	|	БНФОДоговорыКредитовИДепозитов.Контрагент.Наименование КАК ФИО
	|ИЗ
	|	Справочник.БНФОДоговорыКредитовИДепозитов КАК БНФОДоговорыКредитовИДепозитов
	|ГДЕ
	|	БНФОДоговорыКредитовИДепозитов.Контрагент = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка",Аналитика );
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Контрагент    = Выборка.Контрагент;
		ФИО           = Выборка.ФИО;
		НомерДоговора = Выборка.НомерДоговора;
		ДоговорКонтрагента = Выборка.ДоговорКонтрагента;
		НовУслСС      = Выборка.УсловиеЗайма;
		Работаем      = Истина;  
	КонецЦикла;
	Запрос.Текст = "ВЫБРАТЬ
	|	БНФОДоговорыКредитовИДепозитов.Ссылка КАК УсловиеЗайма,
	|	БНФОДоговорыКредитовИДепозитов.Контрагент.Ссылка КАК Контрагент,
	|	БНФОДоговорыКредитовИДепозитов.ДоговорКонтрагента.Ссылка КАК ДоговорКонтрагента,
	|	БНФОДоговорыКредитовИДепозитов.Номер КАК НомерДоговора,
	|	БНФОДоговорыКредитовИДепозитов.Контрагент.Наименование КАК ФИО
	|ИЗ
	|	Справочник.БНФОДоговорыКредитовИДепозитов КАК БНФОДоговорыКредитовИДепозитов
	|ГДЕ
	|	БНФОДоговорыКредитовИДепозитов.ДоговорКонтрагента = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка",Аналитика);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Контрагент    = Выборка.Контрагент;
		ФИО           = Выборка.ФИО;
		ДоговорКонтрагента = Выборка.ДоговорКонтрагента;
		НомерДоговора = Выборка.НомерДоговора;
		НовУслСС      = Выборка.УсловиеЗайма;
		Работаем      = Истина;  
	КонецЦикла;
	Запрос.Текст = "ВЫБРАТЬ
	|	БНФОДоговорыКредитовИДепозитов.Ссылка КАК УсловиеЗайма,
	|	БНФОДоговорыКредитовИДепозитов.Контрагент.Ссылка КАК Контрагент,
	|	БНФОДоговорыКредитовИДепозитов.ДоговорКонтрагента.Ссылка КАК ДоговорКонтрагента,
	|	БНФОДоговорыКредитовИДепозитов.Номер КАК НомерДоговора,
	|	БНФОДоговорыКредитовИДепозитов.Контрагент.Наименование КАК ФИО
	|ИЗ
	|	Справочник.БНФОДоговорыКредитовИДепозитов КАК БНФОДоговорыКредитовИДепозитов
	|ГДЕ
	|	БНФОДоговорыКредитовИДепозитов.Номер = &Номер";
	Запрос.УстановитьПараметр("Номер",Аналитика);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Контрагент    = Выборка.Контрагент;
		ФИО           = Выборка.ФИО;
		НомерДоговора = Выборка.НомерДоговора;
		ДоговорКонтрагента = Выборка.ДоговорКонтрагента;
		НовУслСС      = Выборка.УсловиеЗайма;
		Работаем      = Истина;  
	КонецЦикла;
	ДатаКонтракта = НачалоДня(ТекущаяДата()); 
	Если Работаем Тогда
		Стр.Вставить("УсловиеЗайма",НовУслСС);
		Стр.Вставить("Контрагент",Контрагент);
		Стр.Вставить("ДоговорКонтрагента",ДоговорКонтрагента);
		НачатьТранзакцию();
		Попытка
			УстановитьПривилегированныйРежим(Истина);
			ДокументОбъект = Документы.БНФООткрытиеСчетовАналитическогоУчета.СоздатьДокумент();
			ДокументОбъект.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			ДокументОбъект.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Займы выданные");
			ДокументОбъект.Организация  = Справочники.Организации.НайтиПоИНН("7838492459");
			ДокументОбъект.Валюта = Справочники.Валюты.НайтиПоКоду("643");									
			ДокументОбъект.Дата =  ДатаКонтракта;
			Нстр  =  ДокументОбъект.ДополнительныеГруппыФинансовогоУчета.Добавить();
			Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49407-49408 Корректировки по займам выданным ИП");
			Нстр  =  ДокументОбъект.ДополнительныеГруппыФинансовогоУчета.Добавить();
			Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49402 Начисленные проценты по займам выданным ИП");
			Нстр  =  ДокументОбъект.ДополнительныеГруппыФинансовогоУчета.Добавить();
			Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Начисленные прочие доходы по займам выданным");
			Нстр  =  ДокументОбъект.ДополнительныеГруппыФинансовогоУчета.Добавить();
			Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Начисленные расходы по займам выданным");
			Нстр  =  ДокументОбъект.ДополнительныеГруппыФинансовогоУчета.Добавить();
			Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Расчеты по процентам по займам выданным");
			Нстр  =  ДокументОбъект.ДополнительныеГруппыФинансовогоУчета.Добавить();
			Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Расчеты по прочим доходам по займам выданным");
			Нстр  =  ДокументОбъект.ДополнительныеГруппыФинансовогоУчета.Добавить();
			Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Расчеты по расходам по займам выданным");
			
			Нстр  =  ДокументОбъект.ДополнительныеГруппыФинансовогоУчета.Добавить();
			Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49401 Займы выданные ИП");
			
			
			Нстр  =  ДокументОбъект.ДополнительныеГруппыФинансовогоУчета.Добавить();
			Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49403 Начисленные прочие доходы по займам выданным ИП");
			
			Нстр  =  ДокументОбъект.ДополнительныеГруппыФинансовогоУчета.Добавить();
			Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Расчеты по расходам по займам выданным");
			
			
			Нстр  =  ДокументОбъект.ДополнительныеГруппыФинансовогоУчета.Добавить();
			Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
			//Нстр  =  ДокументОбъект.ДополнительныеГруппыФинансовогоУчета.Добавить();
			//Нстр.ГруппаФинансовогоУчета =  Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
			//ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
			#Область область49401_09_1
			Если не ЗначениеЗаполнено(pcru_УМФО.ПолучитьСчетПоАналитике("49401",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000023"))) Тогда
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//0;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//0;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000023");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//0;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49401 Займы выданные ИП");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49401");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//0;
				Нстр.ДатаОткрытия = ДатаКонтракта;
				Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Срочная, Займы выданные";
			КонецЕсли; 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("49407",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000023"))) Тогда
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//1;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//1;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000023");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//1;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаАктивный;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49407-49408 Корректировки по займам выданным ИП");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49407");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//1;
				Нстр.ДатаОткрытия = ДатаКонтракта;
				Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Срочная, Корректировки по займам выданным";
			КонецЕсли; 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("49408",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000023"))) Тогда
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//2;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//2;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000023");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//2;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаПассивный;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49407-49408 Корректировки по займам выданным ИП");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49408");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//2;
				Нстр.ДатаОткрытия = ДатаКонтракта;
				Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Срочная, Корректировки по займам выданным";
			КонецЕсли; 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("49402",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000023"))) Тогда
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//3;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//3;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000023");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//3;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49402 Начисленные проценты по займам выданным ИП");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49402");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//3;
				Нстр.ДатаОткрытия = ДатаКонтракта;
				Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Срочная, Начисленные проценты по займам выданным";
			КонецЕсли; 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("49403",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000023"))) Тогда
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//4;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//4;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000023");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//4;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49403 Начисленные прочие доходы по займам выданным ИП");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49403");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//4;
				Нстр.ДатаОткрытия = ДатаКонтракта;
				Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Срочная, Начисленные прочие доходы по займам выданным";
			КонецЕсли; 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("49405",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000023"))) Тогда
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//5;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//5;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000023");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//5;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49405 Начисленные расходы по займам выданным ИП");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49405");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//5;
				Нстр.ДатаОткрытия = ДатаКонтракта;
				Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Срочная, Начисленные расходы по займам выданным";
			КонецЕсли; 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("49409",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000023"))) Тогда
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//6;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//6;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000023");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//6;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49409 Расчеты по процентам по займам выданным ИП");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49409");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//6;
				Нстр.ДатаОткрытия = ДатаКонтракта;
				Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Срочная, Расчеты по процентам по займам выданным";
			КонецЕсли; 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("49404",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000023"))) Тогда
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//7;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//7;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000023");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//7;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49404 Расчеты по прочим доходам по займам выданным ИП");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49404");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//7;
				Нстр.ДатаОткрытия = ДатаКонтракта;
				Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Срочная,Расчеты по прочим доходам по займам выданным";
			КонецЕсли; 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("49406",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000023"))) Тогда
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//8;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//8;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000023");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//8;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49406 Расчеты по расходам по займам выданным ИП");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49406");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//8;
				Нстр.ДатаОткрытия = ДатаКонтракта;
				Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Срочная, Расчеты по расходам по займам выданным";
			КонецЕсли; 
			//Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("49410",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000023"))) Тогда
			//	КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
			//	Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
			//	Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
			//	Нстр.КлючеваяАналитика = Истина;
			//	Нстр.ЗаполнятьОбязательно = Ложь;
			//	Нстр.ЗначениеАналитики = Контрагент;
			//	Нстр.ЭтоОбъект = Истина;
			//	Нстр.КлючСтроки = КлючСтроки;//9;
			//	Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
			//	Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
			//	Нстр.КлючеваяАналитика = Истина;
			//	Нстр.ЗаполнятьОбязательно = Ложь;
			//	Нстр.ЗначениеАналитики = НовУслСС;
			//	Нстр.ЭтоОбъект = Истина;
			//	Нстр.КлючСтроки = КлючСтроки;//9;
			//	Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
			//	Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоКоду("0000000034");
			//	Нстр.КлючеваяАналитика = Истина;
			//	Нстр.ЗаполнятьОбязательно = Ложь;
			//	Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000025");
			//	Нстр.ЭтоОбъект = Истина;
			//	Нстр.КлючСтроки = КлючСтроки;//9;
			//	Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
			//	Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
			//	Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000015");
			//	Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
			//	Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49410");
			//	Нстр.ОткрыватьСчет = Истина;
			//	Нстр.КлючСтроки = КлючСтроки;//9;
			//	Нстр.ДатаОткрытия = ДатаКонтракта;
			//	Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Беспроблемная, Резервы под обесценение по займам выданным";
			//КонецЕсли;
			#КонецОбласти 
			////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 
			#Область область49401_09_2
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("49401",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000024"))) Тогда
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//    КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//    КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000024");  
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034"); 
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49401 Займы выданные ИП");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49401");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр.ДатаОткрытия = ДатаКонтракта;
				Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000024"))+", Займы выданные";
			КонецЕсли; 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("49407",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000024"))) Тогда
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000024");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаАктивный;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49407-49408 Корректировки по займам выданным ИП");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49407");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
				Нстр.ДатаОткрытия = ДатаКонтракта;
				Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000024"))+", Корректировки по займам выданным";
			КонецЕсли; 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("49408",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000024"))) Тогда
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000024");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаПассивный;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49407-49408 Корректировки по займам выданным ИП");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49408");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
				Нстр.ДатаОткрытия = ДатаКонтракта;
				Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000024"))+", Корректировки по займам выданным";
			КонецЕсли; 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("49402",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000024"))) Тогда
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000024");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49402 Начисленные проценты по займам выданным ИП");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49402");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
				Нстр.ДатаОткрытия = ДатаКонтракта;
				Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000024"))+", Начисленные проценты по займам выданным";
			КонецЕсли; 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("49403",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000024"))) Тогда
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000024");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49403 Начисленные прочие доходы по займам выданным ИП");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49403");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
				Нстр.ДатаОткрытия = ДатаКонтракта;
				Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000024"))+", Начисленные прочие доходы по займам выданным";
			КонецЕсли; 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("49405",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000024"))) Тогда
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000024");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49405 Начисленные расходы по займам выданным ИП");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49405");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
				Нстр.ДатаОткрытия = ДатаКонтракта;
				Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000024"))+", Начисленные расходы по займам выданным";
			КонецЕсли; 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("49409",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000024"))) Тогда
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000024");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49409 Расчеты по процентам по займам выданным ИП");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49409");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
				Нстр.ДатаОткрытия = ДатаКонтракта;
				Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000024"))+", Расчеты по процентам по займам выданным";
			КонецЕсли; 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("49404",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000024"))) Тогда
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;// КлючСтроки;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000024");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49404 Расчеты по прочим доходам по займам выданным ИП");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49404");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;// КлючСтроки;
				Нстр.ДатаОткрытия = ДатаКонтракта;
				Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000024"))+",Расчеты по прочим доходам по займам выданным";
			КонецЕсли; 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("49406",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000024"))) Тогда
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;// КлючСтроки;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;// КлючСтроки;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000024");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49406 Расчеты по расходам по займам выданным ИП");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49406");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;// КлючСтроки;
				Нстр.ДатаОткрытия = ДатаКонтракта;
				Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000024"))+", Расчеты по расходам по займам выданным";
			КонецЕсли; 
			#КонецОбласти	
			//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			
			#Область область48810_1_и_2
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("48810",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000025"))) Тогда
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//9;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//9;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоКоду("0000000034");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000025");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//9;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000035");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49410 Резервы под обесценение по займам выданным ИП");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48810");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//9;
				Нстр.ДатаОткрытия = ДатаКонтракта;
				Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Беспроблемная, Резервы под обесценение по займам выданным";
			КонецЕсли;
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("48810",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000026"))) Тогда
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//9;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//9;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоКоду("0000000034");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000026");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//9;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000035");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49410 Резервы под обесценение по займам выданным ИП");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48810");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//9;
				Нстр.ДатаОткрытия = ДатаКонтракта;
				Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Беспроблемная, Резервы под обесценение по займам выданным";
			КонецЕсли;
			#КонецОбласти
			
			#Область Область60324 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("60324",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000028"))) Тогда
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//15;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				//Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКонтрагента;
				//Нстр.КлючеваяАналитика = Истина;
				//Нстр.ЗаполнятьОбязательно = Ложь;
				//Нстр.ЗначениеАналитики = ДоговорКонтрагента;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//15;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");//ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000028");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//15;
				//  
				//НСчет = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
				//  НСчет.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60324");	
				//  НСчет.Код = "60324"+"81000"+Прав(НомерДоговора,10)+"00000";
				//  НСчет.ПроизвольныйСегмент =  "0"+Прав(НомерДоговора,10)+"00000"; //0005500006600000
				//  НСчет.Наименование =  "Резервы  "+Строка(ФИО)+" по договору "+Строка(НомерДоговора);
				//  НСчет.Валюта  = Справочники.Валюты.НайтиПоКоду("643");
				//  НСчет.Организация  = Справочники.Организации.НайтиПоИНН("7838492459");
				//  НСчет.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
				//  НСчет.ТребуетсяПереоценка = ложь;
				//  НСчет.ТребуетсяСверка = ложь;
				//  НСчет.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
				//  НСчет.ГруппаФинансовогоУчета =Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
				//  НСчет.ПовторноеИспользованиеНомераСчета = Истина;
				//  НСчет.Комментарий = "Резервы  "+Строка(ФИО)+" по договору "+Строка(НомерДоговора); 
				//  НСчет.СпособХранения = 1;
				//  НСчет.Записать();
				
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.Резервы;
				//Нстр.СчетАналитическогоУчета =  НСчет;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60324");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//15;
				Нстр.ДатаОткрытия = ТекущаяДата();
				Нстр.Наименование = "Резервы  "+Строка(ФИО)+" по договору "+Строка(НомерДоговора);
			КонецЕсли;
			#КонецОбласти
			
			#Область область60322_23 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("60322",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000028"))) Тогда   
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000028");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаПассивный;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр.ДатаОткрытия = ТекущаяДата();
				Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора);
			КонецЕсли; 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("60323",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000028"))) Тогда
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000028");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаАктивный;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр.ДатаОткрытия = ТекущаяДата();
				Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора);
			КонецЕсли;
			#КонецОбласти
			
			#Область область60322_23_000000029 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("60322",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000029"))) Тогда   
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000029");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаПассивный;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр.ДатаОткрытия = ТекущаяДата();
				Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000029"));
			КонецЕсли; 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("60323",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000029"))) Тогда
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000029");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаАктивный;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр.ДатаОткрытия = ТекущаяДата();
				Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000029"));
			КонецЕсли;
			#КонецОбласти
			
			#Область  область60322_23_000000030 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("60322",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000030"))) Тогда   
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000030");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаПассивный;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр.ДатаОткрытия = ТекущаяДата();
				Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000030"));
			КонецЕсли; 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("60323",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000030"))) Тогда
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000030");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаАктивный;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр.ДатаОткрытия = ТекущаяДата();
				Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000030"));
			КонецЕсли;
			#КонецОбласти
			
			#Область область60322_23_000000031 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("60322",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000031"))) Тогда   
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000031");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаПассивный;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр.ДатаОткрытия = ТекущаяДата();
				Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000031"));
			КонецЕсли; 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("60323",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000031"))) Тогда
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000031");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаАктивный;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр.ДатаОткрытия = ТекущаяДата();
				Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000031"));
			КонецЕсли;
			#КонецОбласти
			
			#Область  область60322_23_000000032 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("60322",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000032"))) Тогда   
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000032");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаПассивный;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр.ДатаОткрытия = ТекущаяДата();
				Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000032"));
			КонецЕсли; 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("60323",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000032"))) Тогда
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000032");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаАктивный;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр.ДатаОткрытия = ТекущаяДата();
				Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000032"));
			КонецЕсли;
			#КонецОбласти
			
			#Область  область60322_23_000000033 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("60322",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000033"))) Тогда   
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000033");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаПассивный;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр.ДатаОткрытия = ТекущаяДата();
				Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000033"));
			КонецЕсли; 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("60323",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000033"))) Тогда
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000033");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаАктивный;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр.ДатаОткрытия = ТекущаяДата();
				Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000033"));
			КонецЕсли;
			#КонецОбласти
			
			#Область  область60322_23_000000034 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("60322",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000034"))) Тогда   
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000034");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаПассивный;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр.ДатаОткрытия = ТекущаяДата();
				Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000034"));
			КонецЕсли; 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("60323",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000034"))) Тогда
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000034");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаАктивный;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр.ДатаОткрытия = ТекущаяДата();
				Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000034"));
			КонецЕсли;
			#КонецОбласти
			
			#Область  область60322_23_000000035 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("60322",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000035"))) Тогда   
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000035");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаПассивный;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр.ДатаОткрытия = ТекущаяДата();
				Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000035"));
			КонецЕсли; 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("60323",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000035"))) Тогда
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000035");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаАктивный;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр.ДатаОткрытия = ТекущаяДата();
				Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000035"));
			КонецЕсли;
			#КонецОбласти
			
			#Область  область60322_23_000000036 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("60322",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000036"))) Тогда   
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000036");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаПассивный;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр.ДатаОткрытия = ТекущаяДата();
				Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000036"));
			КонецЕсли; 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("60323",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000036"))) Тогда
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000036");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаАктивный;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр.ДатаОткрытия = ТекущаяДата();
				Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000036"));
			КонецЕсли;
			#КонецОбласти
			
			#Область область61217_000000085 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("61217",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000085"))) Тогда
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид выбытия займов");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000085");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000033");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Выбытие займов");
				
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("61217");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр.ДатаОткрытия = ТекущаяДата();
				Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000036"));
			КонецЕсли;
			#КонецОбласти
			
			#Область Область61217_000000086 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("61217",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000086"))) Тогда
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =  ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид выбытия займов");
				
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000086");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000033");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Выбытие займов");
				
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("61217");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр.ДатаОткрытия = ТекущаяДата();
				Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000036"));
			КонецЕсли;
			#КонецОбласти
			
			#Область Область61217_000000087 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("61217",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000087"))) Тогда
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид выбытия займов");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000087");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000033");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Выбытие займов");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("61217");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр.ДатаОткрытия = ТекущаяДата();
				Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000036"));
			КонецЕсли;
			#КонецОбласти
			
			//Вид выбытия займов
			Если ДокументОбъект.СчетаУчета.Количество() > 0 Тогда
				ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
			КонецЕсли; 
			ЗафиксироватьТранзакцию();
			УстановитьПривилегированныйРежим(Ложь);	
		Исключение
			Text = ОписаниеОшибки(); 
			ОтменитьТранзакцию();
			УстановитьПривилегированныйРежим(Ложь);	
			ВызватьИсключение  Text;
		КонецПопытки;
	Иначе 
		Стр.Вставить("УсловиеЗайма",Справочники.БНФОДоговорыКредитовИДепозитов.ПустаяСсылка());
		Стр.Вставить("Контрагент",Справочники.Контрагенты.ПустаяСсылка());
		Стр.Вставить("ДоговорКонтрагента",Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
	КонецЕсли;
	Стр.Вставить("_49401_1",ПолучитьСчетКонтрактаПоАналитике("49401",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000023")));
	Стр.Вставить("_49402_1",ПолучитьСчетКонтрактаПоАналитике("49402",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000023")));
	Стр.Вставить("_49403_1",ПолучитьСчетКонтрактаПоАналитике("49403",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000023")));
	Стр.Вставить("_49404_1",ПолучитьСчетКонтрактаПоАналитике("49404",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000023")));
	Стр.Вставить("_49405_1",ПолучитьСчетКонтрактаПоАналитике("49405",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000023")));
	Стр.Вставить("_49406_1",ПолучитьСчетКонтрактаПоАналитике("49406",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000023")));
	Стр.Вставить("_49407_1",ПолучитьСчетКонтрактаПоАналитике("49407",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000023")));
	Стр.Вставить("_49408_1",ПолучитьСчетКонтрактаПоАналитике("49408",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000023")));
	Стр.Вставить("_49409_1",ПолучитьСчетКонтрактаПоАналитике("49409",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000023")));
	Стр.Вставить("_49410_1",ПолучитьСчетКонтрактаПоАналитике("49410",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000025")));
	Стр.Вставить("_49401_2",ПолучитьСчетКонтрактаПоАналитике("49401",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000024")));
	Стр.Вставить("_49402_2",ПолучитьСчетКонтрактаПоАналитике("49402",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000024")));
	Стр.Вставить("_49403_2",ПолучитьСчетКонтрактаПоАналитике("49403",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000024")));
	Стр.Вставить("_49404_2",ПолучитьСчетКонтрактаПоАналитике("49404",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000024")));
	Стр.Вставить("_49405_2",ПолучитьСчетКонтрактаПоАналитике("49405",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000024")));
	Стр.Вставить("_49406_2",ПолучитьСчетКонтрактаПоАналитике("49406",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000024")));
	Стр.Вставить("_49407_2",ПолучитьСчетКонтрактаПоАналитике("49407",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000024")));
	Стр.Вставить("_49408_2",ПолучитьСчетКонтрактаПоАналитике("49408",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000024")));
	Стр.Вставить("_49409_2",ПолучитьСчетКонтрактаПоАналитике("49409",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000024")));
	Стр.Вставить("_49410_2",ПолучитьСчетКонтрактаПоАналитике("49410",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000026")));
	Стр.Вставить("_60322_1",ПолучитьСчетКонтрактаПоАналитике("60322",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000028")));
	Стр.Вставить("_60323_1",ПолучитьСчетКонтрактаПоАналитике("60323",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000028")));
	Стр.Вставить("_60322_2",ПолучитьСчетКонтрактаПоАналитике("60322",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000029")));
	Стр.Вставить("_60323_2",ПолучитьСчетКонтрактаПоАналитике("60323",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000029")));
	Стр.Вставить("_60322_3",ПолучитьСчетКонтрактаПоАналитике("60322",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000030")));
	Стр.Вставить("_60323_3",ПолучитьСчетКонтрактаПоАналитике("60323",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000030")));
	Стр.Вставить("_60322_4",ПолучитьСчетКонтрактаПоАналитике("60322",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000031")));
	Стр.Вставить("_60323_4",ПолучитьСчетКонтрактаПоАналитике("60323",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000031")));
	Стр.Вставить("_60322_5",ПолучитьСчетКонтрактаПоАналитике("60322",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000032")));
	Стр.Вставить("_60323_5",ПолучитьСчетКонтрактаПоАналитике("60323",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000032")));
	Стр.Вставить("_60322_6",ПолучитьСчетКонтрактаПоАналитике("60322",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000033")));
	Стр.Вставить("_60323_6",ПолучитьСчетКонтрактаПоАналитике("60323",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000033")));
	Стр.Вставить("_60322_7",ПолучитьСчетКонтрактаПоАналитике("60322",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000034")));
	Стр.Вставить("_60323_7",ПолучитьСчетКонтрактаПоАналитике("60323",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000034")));
	Стр.Вставить("_60322_8",ПолучитьСчетКонтрактаПоАналитике("60322",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000035")));
	Стр.Вставить("_60323_8",ПолучитьСчетКонтрактаПоАналитике("60323",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000035")));
	Стр.Вставить("_60322_9",ПолучитьСчетКонтрактаПоАналитике("60322",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000036")));
	Стр.Вставить("_60323_9",ПолучитьСчетКонтрактаПоАналитике("60323",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000036")));
	Стр.Вставить("_60324_1",ПолучитьСчетПоАналитике("60324",НовУслСС));
	Стр.Вставить("_61217_1",ПолучитьСчетКонтрактаПоАналитике("61217",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000085")));
	Стр.Вставить("_61217_2",ПолучитьСчетКонтрактаПоАналитике("61217",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000086")));
	Стр.Вставить("_61217_3",ПолучитьСчетКонтрактаПоАналитике("61217",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000087")));
	Возврат Стр;
КонецФункции // ()

// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция  ПолучитьСчетОС(Номенклатура)Экспорт
	Попытка
		//Запрос = Новый Запрос;
		//Запрос.Текст = "ВЫБРАТЬ
		//               |	ОсновныеСредства.Ссылка КАК Ссылка
		//               |ИЗ
		//               |	Справочник.ОсновныеСредства КАК ОсновныеСредства
		//               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуОС.ОС КАК ПринятиеКУчетуОСОС
		//               |		ПО ПринятиеКУчетуОСОС.ОсновноеСредство = ОсновныеСредства.Ссылка
		//               |ГДЕ
		//               |	ОсновныеСредства.НаименованиеПолное = &НаименованиеПолное
		//               |	И ПринятиеКУчетуОСОС.Ссылка ЕСТЬ NULL";
		//Запрос.УстановитьПараметр("НаименованиеПолное",Номенклатура.НаименованиеПолное);
		//Выборка = Запрос.Выполнить().Выбрать();
		//Если Выборка.Следующий() Тогда
		//	ОССсылка =  Выборка.Ссылка;
		//Иначе
		ОС = Справочники.ОсновныеСредства.СоздатьЭлемент();
		ОС.Наименование =  Номенклатура.Наименование;
		ОС.НаименованиеПолное = Номенклатура.НаименованиеПолное; 
		ОС.ГруппаОС = Перечисления.ГруппыОС.ДругиеВидыОсновныхСредств;
		ОС.БНФОГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаАктивов.НайтиПоКоду("00060401");
		ОС.Записать();
		ОССсылка = ОС.Ссылка;
		//		КонецЕсли;	 
		НОБ = Номенклатура.ПолучитьОбъект();
		НОБ.БНФОГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаАктивов.НайтиПоНаименованию("Основные средства (кроме земля)");
		НОБ.Записать();
		Счет60415 = pcru_УМФО.ПолучитьСчетПоАналитике("60415",ОССсылка);
		Если ЗначениеЗаполнено(Счет60415) Тогда
			Возврат Счет60415;
		Иначе	
			pcru_УМФО.Открыть60401(ОССсылка);
			Возврат pcru_УМФО.ПолучитьСчетПоАналитике("60415",ОССсылка);
		КонецЕсли; 
	Исключение
		Ошибка=ОписаниеОшибки();
		Возврат Неопределено;
	КонецПопытки; 	
КонецФункции

// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ПолучитьПК(Код)  Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	БНФОСубконто.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСубконто КАК БНФОСубконто
	|ГДЕ
	|	БНФОСубконто.Наименование ПОДОБНО &Наименование ";
	Запрос.УстановитьПараметр("Наименование","%"+Код+ "%");
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Возврат Выборка.Ссылка;
	КонецЦикла;
	Возврат Справочники.БНФОСубконто.ПустаяСсылка(); 
КонецФункции // ()


&НаСервере
Функция ЗАполнитьСубконто(СтруктураПроводки = Неопределено) Экспорт
	Если не ЗначениеЗаполнено(СтруктураПроводки)  Тогда
		СтруктураПроводки = новый Структура;
	КонецЕсли; 
	Если  ЗначениеЗаполнено(СтруктураПроводки.СчетАналитическогоУчетаДт) Тогда
		Для каждого СубконтоСчета Из СтруктураПроводки.СчетАналитическогоУчетаДт.Владелец.ВидыСубконто Цикл
			Если СубконтоСчета.ВидСубконто.Идентификатор = "ProcessCode" Тогда
				Значение = Неопределено;
				
				Если СтруктураПроводки.ДтСк1 = "01113 Ежемесячное базовое вознаграждение членам Совета Директоров НЕ НБ" Тогда
					СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.БНФОСубконто.НайтиПоНаименованию("9906-Company management"));
				Иначе	
					
					Если СтруктураПроводки.ДтСк1 = "01431 Резерв на отпуск НЕ НБ" Тогда
						СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.БНФОСубконто.НайтиПоНаименованию("9905-Support processes"));
					Иначе	
						
						Если СтруктураПроводки.Свойство("ProcessCode2",Значение) Тогда
							СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,ПолучитьПК(Значение));
						Иначе
							
							Если СтруктураПроводки.Свойство("ProcessCode",Значение) Тогда
								СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.БНФОСубконто.НайтиПоНаименованию(Значение));
							Иначе
								
								Если СтруктураПроводки.Свойство("ДтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
									СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.БНФОСубконто.НайтиПоНаименованию(Значение));	
								Иначе	
									СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.БНФОСубконто.ПустаяСсылка());	
								КонецЕсли; 
								
							КонецЕсли; 
							
						КонецЕсли
					КонецЕсли; 
				КонецЕсли; 
				
				
				//Если СтруктураПроводки.Свойство("ДтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
				//	СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.БНФОСубконто.НайтиПоНаименованию(Значение));	
				//Иначе	
				//	СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.БНФОСубконто.ПустаяСсылка());	
				//КонецЕсли; 
			КонецЕсли;  
			//			
			Если СубконтоСчета.ВидСубконто.Идентификатор = "Контрагенты" Тогда
				Значение = Неопределено;
				Если СтруктураПроводки.Свойство("ДтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
					СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.Контрагенты.НайтиПоНаименованию(Значение));	
				Иначе	
					СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.Контрагенты.ПустаяСсылка());	
				КонецЕсли; 
			КонецЕсли;  
			//			
			Если СубконтоСчета.ВидСубконто.Идентификатор = "Договоры" Тогда
				Значение = Неопределено;
				Если СтруктураПроводки.Свойство("ДтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
					СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.ДоговорыКонтрагентов.НайтиПоНаименованию(Значение));	
				Иначе	
					СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.ДоговорыКонтрагентов.ПустаяСсылка());	
				КонецЕсли; 
			КонецЕсли;  
			//			
			Если СубконтоСчета.ВидСубконто.Идентификатор = "НоменклатурныеГруппы" Тогда
				Значение = Неопределено;
				Если СтруктураПроводки.Свойство("ДтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
					СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.НоменклатурныеГруппы.НайтиПоНаименованию(Значение));	
				Иначе	
					СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.НоменклатурныеГруппы.ПустаяСсылка());	
				КонецЕсли; 
			КонецЕсли;  
			//			
			Если СубконтоСчета.ВидСубконто.Идентификатор = "ВидыПлатежейВГосБюджет" Тогда
				Значение = Неопределено;
				Если СтруктураПроводки.Свойство("ДтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
					СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Перечисления.ВидыПлатежейВГосБюджет.ВидНалоговогоОбязательстваПоИмени(Значение));	
				Иначе	
					СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Перечисления.ВидыПлатежейВГосБюджет.ПустаяСсылка());	
				КонецЕсли; 
			КонецЕсли;	
			//			
			Если СубконтоСчета.ВидСубконто.Идентификатор = "ПрочиеДоходыИРасходы" Тогда
				Значение = Неопределено;
				Если СтруктураПроводки.Свойство("ДтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
					СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.ПрочиеДоходыИРасходы.НайтиПоНаименованию(Значение));	
				Иначе	
					СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.ПрочиеДоходыИРасходы.ПустаяСсылка());	
				КонецЕсли; 
			КонецЕсли;	
			//			
			Если СубконтоСчета.ВидСубконто.Идентификатор = "ДокументыРасчетовСКонтрагентами" Тогда
				СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Документы.СписаниеСРасчетногоСчета.ПустаяСсылка());	
			КонецЕсли;	
			//
			Если СубконтоСчета.ВидСубконто.Идентификатор = "РаботникиОрганизаций" Тогда
				Значение = Неопределено;
				Если СтруктураПроводки.Свойство("ДтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
					СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.ФизическиеЛица.НайтиПоНаименованию(Значение));	
				Иначе	
					Если СтруктураПроводки.Свойство("ФизическоеЛицо",Значение) Тогда
						СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Значение);	
					Иначе	
						СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.ФизическиеЛица.ПустаяСсылка());	
					КонецЕсли; 
					
				КонецЕсли; 
			КонецЕсли;	
			//
			Если СубконтоСчета.ВидСубконто.Идентификатор = "ВидНачисленийОплатыТрудаПоСтатье255НК" Тогда
				Значение = Неопределено;
				Если СтруктураПроводки.Свойство("ВидНачисленияОплатыТрудаДляНУ",Значение) Тогда
					СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Перечисления.ВидыНачисленийОплатыТрудаДляНУ.ВидыНачисленийОплатыТрудаПоИмени(Значение));	
				Иначе	
					Если СтруктураПроводки.Свойство("ДтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
						СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Перечисления.ВидыНачисленийОплатыТрудаДляНУ.ВидыНачисленийОплатыТрудаПоИмени(Значение));	
					Иначе	
						СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Перечисления.ВидыНачисленийОплатыТрудаДляНУ.ПустаяСсылка());	
					КонецЕсли; 
				КонецЕсли; 
			КонецЕсли;	
		КонецЦикла; 
	КонецЕсли; 
	//*********************************************************************** 
	Если  ЗначениеЗаполнено(СтруктураПроводки.СчетАналитическогоУчетаКт) Тогда
		Для каждого СубконтоСчета Из СтруктураПроводки.СчетАналитическогоУчетаКт.Владелец.ВидыСубконто Цикл
			Если СубконтоСчета.ВидСубконто.Идентификатор = "ProcessCode" Тогда
				Значение = Неопределено;
				Если СтруктураПроводки.Свойство("КтСк1",Значение) Тогда
					Если Значение = "01113 Ежемесячное базовое вознаграждение членам Совета Директоров НЕ НБ" Тогда
						СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Справочники.БНФОСубконто.НайтиПоНаименованию("9906-Company management"));
					Иначе	
						СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Справочники.БНФОСубконто.ПустаяСсылка());
					КонецЕсли; 
				Иначе	
					Если СтруктураПроводки.Свойство("КтСк1",Значение) Тогда
						Если Значение = "01431 Резерв на отпуск НЕ НБ" Тогда
							СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Справочники.БНФОСубконто.НайтиПоНаименованию("9905-Support processes"));
						Иначе	
							СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Справочники.БНФОСубконто.ПустаяСсылка());
						КонецЕсли; 
					Иначе	
						Если  СтруктураПроводки.Свойство("ProcessCode2",Значение) Тогда
							СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,ПолучитьПК(Значение));
						Иначе	
							Если СтруктураПроводки.Свойство("ProcessCode",Значение) Тогда
								СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Справочники.БНФОСубконто.НайтиПоНаименованию(Значение));
							Иначе
								Если СтруктураПроводки.Свойство("КтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
									СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Справочники.БНФОСубконто.НайтиПоНаименованию(Значение));	
								Иначе	
									СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Справочники.БНФОСубконто.ПустаяСсылка());	
								КонецЕсли; 
							КонецЕсли; 
						КонецЕсли; 
					КонецЕсли; 
				КонецЕсли;
			КонецЕсли;  
			//			
			Если СубконтоСчета.ВидСубконто.Идентификатор = "Контрагенты" Тогда
				Значение = Неопределено;
				Если СтруктураПроводки.Свойство("КтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
					СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Справочники.Контрагенты.НайтиПоНаименованию(Значение));	
				Иначе	
					СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Справочники.Контрагенты.ПустаяСсылка());	
				КонецЕсли; 
			КонецЕсли;  
			//			
			Если СубконтоСчета.ВидСубконто.Идентификатор = "Договоры" Тогда
				Значение = Неопределено;
				Если СтруктураПроводки.Свойство("КтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
					СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Справочники.ДоговорыКонтрагентов.НайтиПоНаименованию(Значение));	
				Иначе	
					СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Справочники.ДоговорыКонтрагентов.ПустаяСсылка());	
				КонецЕсли; 
			КонецЕсли;  
			//			
			Если СубконтоСчета.ВидСубконто.Идентификатор = "НоменклатурныеГруппы" Тогда
				Значение = Неопределено;
				Если СтруктураПроводки.Свойство("КтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
					СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Справочники.НоменклатурныеГруппы.НайтиПоНаименованию(Значение));	
				Иначе	
					СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Справочники.НоменклатурныеГруппы.ПустаяСсылка());	
				КонецЕсли; 
			КонецЕсли;  
			//			
			Если СубконтоСчета.ВидСубконто.Идентификатор = "ВидыПлатежейВГосБюджет" Тогда
				Значение = Неопределено;
				Если СтруктураПроводки.Свойство("КтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
					СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Перечисления.ВидыПлатежейВГосБюджет.ВидНалоговогоОбязательстваПоИмени(Значение));	
				Иначе	
					СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Перечисления.ВидыПлатежейВГосБюджет.ПустаяСсылка());	
				КонецЕсли; 
			КонецЕсли;	
			//			
			Если СубконтоСчета.ВидСубконто.Идентификатор = "ПрочиеДоходыИРасходы" Тогда
				Значение = Неопределено;
				Если СтруктураПроводки.Свойство("КтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
					СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Справочники.ПрочиеДоходыИРасходы.НайтиПоНаименованию(Значение));	
				Иначе	
					СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Справочники.ПрочиеДоходыИРасходы.ПустаяСсылка());	
				КонецЕсли; 
			КонецЕсли;	
			//			
			Если СубконтоСчета.ВидСубконто.Идентификатор = "ДокументыРасчетовСКонтрагентами" Тогда
				СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Документы.СписаниеСРасчетногоСчета.ПустаяСсылка());	
			КонецЕсли;	
			//
			
			Если СубконтоСчета.ВидСубконто.Идентификатор = "ВидНачисленийОплатыТрудаПоСтатье255НК" Тогда
				Значение = Неопределено;
				Если СтруктураПроводки.Свойство("ВидНачисленияОплатыТрудаДляНУ",Значение) Тогда
					СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Перечисления.ВидыНачисленийОплатыТрудаДляНУ.ВидыНачисленийОплатыТрудаПоИмени(Значение));	
				Иначе	
					Если СтруктураПроводки.Свойство("КтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
						СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Перечисления.ВидыНачисленийОплатыТрудаДляНУ.ВидыНачисленийОплатыТрудаПоИмени(Значение));	
					Иначе	
						СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Перечисления.ВидыНачисленийОплатыТрудаДляНУ.ПустаяСсылка());	
					КонецЕсли; 
				КонецЕсли; 
			КонецЕсли;
			
			
			Если СубконтоСчета.ВидСубконто.Идентификатор = "РаботникиОрганизаций" Тогда
				Значение = Неопределено;
				Если СтруктураПроводки.Свойство("КтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
					СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Справочники.ФизическиеЛица.НайтиПоНаименованию(Значение));	
				Иначе	
					СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Справочники.ФизическиеЛица.ПустаяСсылка());	
				КонецЕсли; 
			КонецЕсли;	
		КонецЦикла; 
	КонецЕсли;
	
	Возврат	 СтруктураПроводки;
	
КонецФункции // ЗАполнитьСубконто()

&НаСервере
Функция ЗАполнитьСубконто_начислениеОценочныхОбязательств(СтруктураПроводки = Неопределено) Экспорт
	Если не ЗначениеЗаполнено(СтруктураПроводки)  Тогда
		СтруктураПроводки = новый Структура;
	КонецЕсли; 
	Если  ЗначениеЗаполнено(СтруктураПроводки.СчетАналитическогоУчетаДт) Тогда
		Для каждого СубконтоСчета Из СтруктураПроводки.СчетАналитическогоУчетаДт.Владелец.ВидыСубконто Цикл
			Если СубконтоСчета.ВидСубконто.Идентификатор = "ProcessCode" Тогда
				Значение = Неопределено;
				Если СтруктураПроводки.ДтСк1 = "01113 Ежемесячное базовое вознаграждение членам Совета Директоров НЕ НБ" Тогда
					СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.БНФОСубконто.НайтиПоНаименованию("9906-Company management"));
				Иначе	
					Если СтруктураПроводки.ДтСк1 = "01431 Резерв на отпуск НЕ НБ" Тогда
						СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.БНФОСубконто.НайтиПоНаименованию("9905-Support processes"));
					Иначе	
						Если СтруктураПроводки.Свойство("ProcessCode",Значение) Тогда
							СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.БНФОСубконто.НайтиПоНаименованию(Значение));
						Иначе
							Если СтруктураПроводки.Свойство("ДтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
								СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.БНФОСубконто.НайтиПоНаименованию(Значение));	
							Иначе	
								СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.БНФОСубконто.ПустаяСсылка());	
							КонецЕсли; 
						КонецЕсли; 
					КонецЕсли; 
				КонецЕсли; 
				//Если СтруктураПроводки.Свойство("ДтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
				//	СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.БНФОСубконто.НайтиПоНаименованию(Значение));	
				//Иначе	
				//	СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.БНФОСубконто.ПустаяСсылка());	
				//КонецЕсли; 
			КонецЕсли;  
			//			
			Если СубконтоСчета.ВидСубконто.Идентификатор = "Контрагенты" Тогда
				Значение = Неопределено;
				Если СтруктураПроводки.Свойство("ДтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
					СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.Контрагенты.НайтиПоНаименованию(Значение));	
				Иначе	
					СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.Контрагенты.ПустаяСсылка());	
				КонецЕсли; 
			КонецЕсли;  
			//			
			Если СубконтоСчета.ВидСубконто.Идентификатор = "Договоры" Тогда
				Значение = Неопределено;
				Если СтруктураПроводки.Свойство("ДтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
					СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.ДоговорыКонтрагентов.НайтиПоНаименованию(Значение));	
				Иначе	
					СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.ДоговорыКонтрагентов.ПустаяСсылка());	
				КонецЕсли; 
			КонецЕсли;  
			//			
			Если СубконтоСчета.ВидСубконто.Идентификатор = "НоменклатурныеГруппы" Тогда
				Значение = Неопределено;
				Если СтруктураПроводки.Свойство("ДтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
					СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.НоменклатурныеГруппы.НайтиПоНаименованию(Значение));	
				Иначе	
					СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.НоменклатурныеГруппы.ПустаяСсылка());	
				КонецЕсли; 
			КонецЕсли;  
			//			
			Если СубконтоСчета.ВидСубконто.Идентификатор = "ВидыПлатежейВГосБюджет" Тогда
				Значение = Неопределено;
				Если СтруктураПроводки.Свойство("ДтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
					СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Перечисления.ВидыПлатежейВГосБюджет.ВидНалоговогоОбязательстваПоИмени(Значение));	
				Иначе	
					СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Перечисления.ВидыПлатежейВГосБюджет.ПустаяСсылка());	
				КонецЕсли; 
			КонецЕсли;	
			//			
			Если СубконтоСчета.ВидСубконто.Идентификатор = "ПрочиеДоходыИРасходы" Тогда
				Значение = Неопределено;
				Если СтруктураПроводки.Свойство("ДтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
					СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.ПрочиеДоходыИРасходы.НайтиПоНаименованию(Значение));	
				Иначе	
					СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.ПрочиеДоходыИРасходы.ПустаяСсылка());	
				КонецЕсли; 
			КонецЕсли;	
			//			
			Если СубконтоСчета.ВидСубконто.Идентификатор = "ДокументыРасчетовСКонтрагентами" Тогда
				СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Документы.СписаниеСРасчетногоСчета.ПустаяСсылка());	
			КонецЕсли;	
			//
			Если СубконтоСчета.ВидСубконто.Идентификатор = "РаботникиОрганизаций" Тогда
				Значение = Неопределено;
				Если СтруктураПроводки.Свойство("ДтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
					СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.ФизическиеЛица.НайтиПоНаименованию(Значение));	
				Иначе	
					Если СтруктураПроводки.Свойство("ФизическоеЛицо",Значение) Тогда
						СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Значение);	
					Иначе	
						СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Справочники.ФизическиеЛица.ПустаяСсылка());	
					КонецЕсли; 
					
				КонецЕсли; 
			КонецЕсли;	
			//
			Если СубконтоСчета.ВидСубконто.Идентификатор = "ВидНачисленийОплатыТрудаПоСтатье255НК" Тогда
				Значение = Неопределено;
				Если СтруктураПроводки.Свойство("ДтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
					СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Перечисления.ВидыНачисленийОплатыТрудаДляНУ.ВидыНачисленийОплатыТрудаПоИмени(Значение));	
				Иначе	
					СтруктураПроводки.Вставить("СубконтоДТ"+СубконтоСчета.НомерСтроки,Перечисления.ВидыНачисленийОплатыТрудаДляНУ.ПустаяСсылка());	
				КонецЕсли; 
			КонецЕсли;	
		КонецЦикла; 
	КонецЕсли; 
	//*********************************************************************** 	
	Если  ЗначениеЗаполнено(СтруктураПроводки.СчетАналитическогоУчетаКт) Тогда
		Для каждого СубконтоСчета Из СтруктураПроводки.СчетАналитическогоУчетаКт.Владелец.ВидыСубконто Цикл
			Если СубконтоСчета.ВидСубконто.Идентификатор = "ProcessCode" Тогда
				Значение = Неопределено;
				Если СтруктураПроводки.Свойство("КтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
					СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Справочники.БНФОСубконто.НайтиПоНаименованию(Значение));	
				Иначе	
					СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Справочники.БНФОСубконто.ПустаяСсылка());	
				КонецЕсли; 
			КонецЕсли;  
			//			
			Если СубконтоСчета.ВидСубконто.Идентификатор = "Контрагенты" Тогда
				Значение = Неопределено;
				Если СтруктураПроводки.Свойство("КтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
					СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Справочники.Контрагенты.НайтиПоНаименованию(Значение));	
				Иначе	
					СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Справочники.Контрагенты.ПустаяСсылка());	
				КонецЕсли; 
			КонецЕсли;  
			//			
			Если СубконтоСчета.ВидСубконто.Идентификатор = "Договоры" Тогда
				Значение = Неопределено;
				Если СтруктураПроводки.Свойство("КтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
					СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Справочники.ДоговорыКонтрагентов.НайтиПоНаименованию(Значение));	
				Иначе	
					СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Справочники.ДоговорыКонтрагентов.ПустаяСсылка());	
				КонецЕсли; 
			КонецЕсли;  
			//			
			Если СубконтоСчета.ВидСубконто.Идентификатор = "НоменклатурныеГруппы" Тогда
				Значение = Неопределено;
				Если СтруктураПроводки.Свойство("КтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
					СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Справочники.НоменклатурныеГруппы.НайтиПоНаименованию(Значение));	
				Иначе	
					СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Справочники.НоменклатурныеГруппы.ПустаяСсылка());	
				КонецЕсли; 
			КонецЕсли;  
			//			
			Если СубконтоСчета.ВидСубконто.Идентификатор = "ВидыПлатежейВГосБюджет" Тогда
				Значение = Неопределено;
				Если СтруктураПроводки.Свойство("КтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
					СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Перечисления.ВидыПлатежейВГосБюджет.ВидНалоговогоОбязательстваПоИмени(Значение));	
				Иначе	
					СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Перечисления.ВидыПлатежейВГосБюджет.ПустаяСсылка());	
				КонецЕсли; 
			КонецЕсли;	
			//			
			Если СубконтоСчета.ВидСубконто.Идентификатор = "ПрочиеДоходыИРасходы" Тогда
				Значение = Неопределено;
				Если СтруктураПроводки.Свойство("КтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
					СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Справочники.ПрочиеДоходыИРасходы.НайтиПоНаименованию(Значение));	
				Иначе	
					СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Справочники.ПрочиеДоходыИРасходы.ПустаяСсылка());	
				КонецЕсли; 
			КонецЕсли;	
			//			
			Если СубконтоСчета.ВидСубконто.Идентификатор = "ДокументыРасчетовСКонтрагентами" Тогда
				СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Документы.СписаниеСРасчетногоСчета.ПустаяСсылка());	
			КонецЕсли;	
			//
			Если СубконтоСчета.ВидСубконто.Идентификатор = "РаботникиОрганизаций" Тогда
				Значение = Неопределено;
				Если СтруктураПроводки.Свойство("КтСк"+СубконтоСчета.НомерСтроки,Значение) Тогда
					СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Справочники.ФизическиеЛица.НайтиПоНаименованию(Значение));	
				Иначе	
					СтруктураПроводки.Вставить("СубконтоКТ"+СубконтоСчета.НомерСтроки,Справочники.ФизическиеЛица.ПустаяСсылка());	
				КонецЕсли; 
			КонецЕсли;	
		КонецЦикла; 
	КонецЕсли;
	
	Возврат	 СтруктураПроводки;
	
КонецФункции // ЗАполнитьСубконто()

// Функция открывает пакет счетов контрагента
//БалансСч	Ключ	НАВ	САУ	Аналитика	Символ	Код	СобствОперации	Валюта	ГрФинанУучета	ГрФинанУучетаНимен	ГрФинанУучетаКод	ВидСчетаУчета	ШаблонОткрытия	ШаблонОткрКод	Субконто1	Субконто2	Субконто3
//48801	1	48801.1	48801 810 0 1 ХХХХХХХХХХ PPPPP	Срочная	1	000000023	0	руб.	Группы финансового учета финансовых инструментов	Займы выданные		Счет учета	Займы предоставленные	000000014	Контрагенты	Условия займов, кредитов и депозитов	
//48801	2	48801.2	48801 810 0 2 ХХХХХХХХХХ PPPPP	Просроченная	2	000000024	0	руб.	Группы финансового учета финансовых инструментов	Займы выданные		Счет учета	Займы предоставленные	000000014	Контрагенты	Условия займов, кредитов и депозитов	
//48802	1	48802.1	48802 810 0 1 ХХХХХХХХХХ PPPPP	Срочная	1	000000023	0	руб.	Группы финансового учета финансовых инструментов	Начисленные проценты по займам выданным		Счет учета	Займы предоставленные	000000014	Контрагенты	Условия займов, кредитов и депозитов	
//48802	2	48802.2	48802 810 0 2 ХХХХХХХХХХ PPPPP	Просроченная	2	000000024	0	руб.	Группы финансового учета финансовых инструментов	Начисленные проценты по займам выданным		Счет учета	Займы предоставленные	000000014	Контрагенты	Условия займов, кредитов и депозитов	
//48803	1	48803.1	48803 810 0 1 ХХХХХХХХХХ PPPPP	Срочная	1	000000023	0	руб.	Группы финансового учета финансовых инструментов	Начисленные прочие доходы по займам выданным		Счет учета	Займы предоставленные	000000014	Контрагенты	Условия займов, кредитов и депозитов	
//48804	1	48804.1	48804 810 0 1 ХХХХХХХХХХ PPPPP	Срочная	1	000000023	0	руб.	Группы финансового учета финансовых инструментов	Расчеты по прочим доходам по займам выданным		Счет учета	Займы предоставленные	000000014	Контрагенты	Условия займов, кредитов и депозитов	
//48805	1	48805.1	48805 810 0 1 ХХХХХХХХХХ PPPPP	Срочная	1	000000023	0	руб.	Группы финансового учета финансовых инструментов	Начисленные расходы по займам выданным		Счет учета	Займы предоставленные	000000014	Контрагенты	Условия займов, кредитов и депозитов	
//48806	1	48806.1	48806 810 0 1 ХХХХХХХХХХ PPPPP	Срочная	1	000000023	0	руб.	Группы финансового учета финансовых инструментов	Расчеты по расходам по займам выданным		Счет учета	Займы предоставленные	000000014	Контрагенты	Условия займов, кредитов и депозитов	
//48807	1	48807.1	48807 810 0 1 ХХХХХХХХХХ PPPPP	Срочная	1	000000023	0	руб.	Группы финансового учета финансовых инструментов	Корректировки по займам выданным		Счет активный (парный)	Займы предоставленные	000000014	Контрагенты	Условия займов, кредитов и депозитов	
//48808	1	48808.1	48808 810 0 1 ХХХХХХХХХХ PPPPP	Срочная	1	000000023	0	руб.	Группы финансового учета финансовых инструментов	Корректировки по займам выданным		Счет пассивный (парный)	Займы предоставленные	000000014	Контрагенты	Условия займов, кредитов и депозитов	
//48809	1	48809.1	48809 810 0 1 ХХХХХХХХХХ PPPPP	Срочная	1	000000023	0	руб.	Группы финансового учета финансовых инструментов	Расчеты по процентам по займам выданным		Счет учета	Займы предоставленные	000000014	Контрагенты	Условия займов, кредитов и депозитов	
//48809	2	48809.2	48809 810 0 2 ХХХХХХХХХХ PPPPP	Просроченная	2	000000024	0	руб.	Группы финансового учета финансовых инструментов	Расчеты по процентам по займам выданным		Счет учета	Займы предоставленные	000000014	Контрагенты	Условия займов, кредитов и депозитов	
//48810	1	48810.1	48810 810 0 1 ХХХХХХХХХХ PPPPP	Беспроблемная	1	000000025	0	руб.	Группы финансового учета финансовых инструментов	Резервы под обесценение по займам выданным		Счет учета	Резервы под обеспечение займа	000000015	Контрагенты	Условия займов, кредитов и депозитов	
//48810	2	48810.2	48810 810 0 2 ХХХХХХХХХХ PPPPP	Со значительным увеличением кредитного риска	2	000000026	0	руб.	Группы финансового учета финансовых инструментов	Резервы под обесценение по займам выданным		Счет учета	Резервы под обеспечение займа	000000015	Контрагенты	Условия займов, кредитов и депозитов	
//60322	1	60322.1	60322 810 0 0 ХХХХХХХХХХ PPPPP	Прочие операции	0	000000028	0	руб.	Группы финансового учета финансовых инструментов	Резервы под обесценение по займам выданным		Счет пассивный (парный)	Расчеты с прочими дебиторами и кредиторами	000000007	Контрагенты	Договоры	Документы расчетов с контрагентами
//60322	2	60322.2	60322 810 0 2 ХХХХХХХХХХ PPPPP	Госпошлина, присужденная судом к возмещению	2	000000029	0	руб.	Группы финансового учета финансовых инструментов	Резервы под обесценение по займам выданным		Счет пассивный (парный)	Расчеты с прочими дебиторами и кредиторами	000000007	Контрагенты	Договоры	Документы расчетов с контрагентами
//60322	3	60322.3	60322 810 0 3 ХХХХХХХХХХ PPPPP	Судебные издержки, присужденные судом к возмещению	3	000000030	0	руб.	Группы финансового учета финансовых инструментов	Резервы под обесценение по займам выданным		Счет пассивный (парный)	Расчеты с прочими дебиторами и кредиторами	000000007	Контрагенты	Договоры	Документы расчетов с контрагентами
//60322	4	60322.4	60322 810 0 4 ХХХХХХХХХХ PPPPP	Пени, начисленные до расторжения договора займа	4	000000031	0	руб.	Группы финансового учета финансовых инструментов	Резервы под обесценение по займам выданным		Счет пассивный (парный)	Расчеты с прочими дебиторами и кредиторами	000000007	Контрагенты	Договоры	Документы расчетов с контрагентами
//60322	5	60322.5	60322 810 0 5 ХХХХХХХХХХ PPPPP	Задолженность по RI после досрочного расторжения	5	000000032	0	руб.	Группы финансового учета финансовых инструментов	Резервы под обесценение по займам выданным		Счет пассивный (парный)	Расчеты с прочими дебиторами и кредиторами	000000007	Контрагенты	Договоры	Документы расчетов с контрагентами
//60322	6	60322.6	60322 810 0 6 ХХХХХХХХХХ PPPPP	Штрафы за досрочное расторжение договора	6	000000033	0	руб.	Группы финансового учета финансовых инструментов	Резервы под обесценение по займам выданным		Счет пассивный (парный)	Расчеты с прочими дебиторами и кредиторами	000000007	Контрагенты	Договоры	Документы расчетов с контрагентами
//60322	7	60322.7	60322 810 0 7 ХХХХХХХХХХ PPPPP	Задолженность по процентам после досрочного расторжения договора	7	000000034	0	руб.	Группы финансового учета финансовых инструментов	Резервы под обесценение по займам выданным		Счет пассивный (парный)	Расчеты с прочими дебиторами и кредиторами	000000007	Контрагенты	Договоры	Документы расчетов с контрагентами
//60322	8	60322.8	60322 810 0 8 ХХХХХХХХХХ PPPPP	Задолженность по основному долгу после досрочного расторжения договора	8	000000035	0	руб.	Группы финансового учета финансовых инструментов	Резервы под обесценение по займам выданным		Счет пассивный (парный)	Расчеты с прочими дебиторами и кредиторами	000000007	Контрагенты	Договоры	Документы расчетов с контрагентами
//60322	9	60322.9	60322 810 0 9 ХХХХХХХХХХ PPPPP	Задолженность по Пакету услуг после досрочного расторжения договора	9	000000036	0	руб.	Группы финансового учета финансовых инструментов	Резервы под обесценение по займам выданным		Счет пассивный (парный)	Расчеты с прочими дебиторами и кредиторами	000000007	Контрагенты	Договоры	Документы расчетов с контрагентами
//60323	1	60323.1	60323 810 0 0 ХХХХХХХХХХ PPPPP	Прочие операции	0	000000028	0	руб.	Группы финансового учета финансовых инструментов	Резервы под обесценение по займам выданным		Счет активный (парный)	Расчеты с прочими дебиторами и кредиторами	000000007	Контрагенты	Договоры	Документы расчетов с контрагентами
//60323	2	60323.2	60323 810 0 2 ХХХХХХХХХХ PPPPP	Госпошлина, присужденная судом к возмещению	2	000000029	0	руб.	Группы финансового учета финансовых инструментов	Резервы под обесценение по займам выданным		Счет активный (парный)	Расчеты с прочими дебиторами и кредиторами	000000007	Контрагенты	Договоры	Документы расчетов с контрагентами
//60323	3	60323.3	60323 810 0 3 ХХХХХХХХХХ PPPPP	Судебные издержки, присужденные судом к возмещению	3	000000030	0	руб.	Группы финансового учета финансовых инструментов	Резервы под обесценение по займам выданным		Счет активный (парный)	Расчеты с прочими дебиторами и кредиторами	000000007	Контрагенты	Договоры	Документы расчетов с контрагентами
//60323	4	60323.4	60323 810 0 4 ХХХХХХХХХХ PPPPP	Пени, начисленные до расторжения договора займа	4	000000031	0	руб.	Группы финансового учета финансовых инструментов	Резервы под обесценение по займам выданным		Счет активный (парный)	Расчеты с прочими дебиторами и кредиторами	000000007	Контрагенты	Договоры	Документы расчетов с контрагентами
//60323	5	60323.5	60323 810 0 5 ХХХХХХХХХХ PPPPP	Задолженность по RI после досрочного расторжения	5	000000032	0	руб.	Группы финансового учета финансовых инструментов	Резервы под обесценение по займам выданным		Счет активный (парный)	Расчеты с прочими дебиторами и кредиторами	000000007	Контрагенты	Договоры	Документы расчетов с контрагентами
//60323	6	60323.6	60323 810 0 6 ХХХХХХХХХХ PPPPP	Штрафы за досрочное расторжение договора	6	000000033	0	руб.	Группы финансового учета финансовых инструментов	Резервы под обесценение по займам выданным		Счет активный (парный)	Расчеты с прочими дебиторами и кредиторами	000000007	Контрагенты	Договоры	Документы расчетов с контрагентами
//60323	7	60323.7	60323 810 0 7 ХХХХХХХХХХ PPPPP	Задолженность по процентам после досрочного расторжения договора	7	000000034	0	руб.	Группы финансового учета финансовых инструментов	Резервы под обесценение по займам выданным		Счет активный (парный)	Расчеты с прочими дебиторами и кредиторами	000000007	Контрагенты	Договоры	Документы расчетов с контрагентами
//60323	8	60323.8	60323 810 0 8 ХХХХХХХХХХ PPPPP	Задолженность по основному долгу после досрочного расторжения договора	8	000000035	0	руб.	Группы финансового учета финансовых инструментов	Резервы под обесценение по займам выданным		Счет активный (парный)	Расчеты с прочими дебиторами и кредиторами	000000007	Контрагенты	Договоры	Документы расчетов с контрагентами
//60323	9	60323.9	60323 810 0 9 ХХХХХХХХХХ PPPPP	Задолженность по Пакету услуг после досрочного расторжения договора	9	000000036	0	руб.	Группы финансового учета финансовых инструментов	Резервы под обесценение по займам выданным		Счет активный (парный)	Расчеты с прочими дебиторами и кредиторами	000000007	Контрагенты	Договоры	Документы расчетов с контрагентами
//60324	1	60324.1	60324 810 0 1 ХХХХХХХХХХ PPPPP	Выбытие активов (займов) в связи с ПДП	1	000000085	0	руб.	Группы финансового учета финансовых инструментов	Резервы под обесценение по займам выданным		Счет активный (парный)	Расчеты с прочими дебиторами и кредиторами	000000007	#Н/Д	#Н/Д	#Н/Д
//61217	1	61217.1	61217 810 0 1 ХХХХХХХХХХ PPPPP	Выбытие активов (займов) в связи с ПДП	1	000000085	0	руб.	Группы финансового учета финансовых инструментов	Выбытие займов		Счет учета	Выбытие займов	000000033	Контрагенты	Условия займов, кредитов и депозитов	
//61217	2	61217.2	61217 810 0 2 ХХХХХХХХХХ PPPPP	Выбытие займа при досрочном расторжении договора (Дефолт)	2	000000086	0	руб.	Группы финансового учета финансовых инструментов	Выбытие займов		Счет учета	Выбытие займов	000000033	Контрагенты	Условия займов, кредитов и депозитов	
//61217	3	61217.3	61217 810 0 3 ХХХХХХХХХХ PPPPP	Списание с баланса за счет резерва	3	000000087	0	руб.	Группы финансового учета финансовых инструментов	Выбытие займов		Счет учета	Выбытие займов	000000033	Контрагенты	Условия займов, кредитов и депозитов	
//
// Параметры:
//  Аналитика  - Контрагент, договор, условие займа или строка
//
// Возвращаемое значение:
//  Структура   - ссылки на счета
//Стр._48801_1 - счет 48801 Аналитика: 000000023
//Стр._48802_1 - счет 48802 Аналитика: 000000023
//Стр._48803_1 - счет 48803 Аналитика: Универсальный справочник код: 000000023   
//Стр._48804_1 - счет 48804 Аналитика: Универсальный справочник код: 000000023   
//Стр._48805_1 - счет 48805 Аналитика: Универсальный справочник код: 000000023   
//Стр._48806_1 - счет 48806 Аналитика: Универсальный справочник код: 000000023   
//Стр._48807_1 - счет 48807 Аналитика: Универсальный справочник код: 000000023   
//Стр._48808_1 - счет 48808 Аналитика: Универсальный справочник код: 000000023   
//Стр._48809_1 - счет 48809 Аналитика: Универсальный справочник код: 000000023   
//Стр._48810_1 - счет 48810 Аналитика: Универсальный справочник код: 000000025   
//Стр._48801_2 - счет 48801 Аналитика: Универсальный справочник код: 000000024   
//Стр._48802_2 - счет 48802 Аналитика: Универсальный справочник код: 000000024   
//Стр._48803_2 - счет 48803 Аналитика: Универсальный справочник код: 000000024   
//Стр._48804_2 - счет 48804 Аналитика: Универсальный справочник код: 000000024   
//Стр._48805_2 - счет 48805 Аналитика: Универсальный справочник код: 000000024   
//Стр._48806_2 - счет 48806 Аналитика: Универсальный справочник код: 000000024   
//Стр._48807_2 - счет 48807 Аналитика: Универсальный справочник код: 000000024   
//Стр._48808_2 - счет 48808 Аналитика: Универсальный справочник код: 000000024   
//Стр._48809_2 - счет 48809 Аналитика: Универсальный справочник код: 000000024   
//Стр._48810_2 - счет 48810 Аналитика: Универсальный справочник код: 000000026   
//Стр._60322_1 - счет 60322 Аналитика: Универсальный справочник код: 000000028   
//Стр._60323_1 - счет 60323 Аналитика: Универсальный справочник код: 000000028   
//Стр._60322_2 - счет 60322 Аналитика: Универсальный справочник код: 000000029   
//Стр._60323_2 - счет 60323 Аналитика: Универсальный справочник код: 000000029   
//Стр._60322_3 - счет 60322 Аналитика: Универсальный справочник код: 000000030   
//Стр._60323_3 - счет 60323 Аналитика: Универсальный справочник код: 000000030   
//Стр._60322_4 - счет 60322 Аналитика: Универсальный справочник код: 000000031   
//Стр._60323_4 - счет 60323 Аналитика: Универсальный справочник код: 000000031   
//Стр._60322_5 - счет 60322 Аналитика: Универсальный справочник код: 000000032   
//Стр._60323_5 - счет 60323 Аналитика: Универсальный справочник код: 000000032   
//Стр._60322_6 - счет 60322 Аналитика: Универсальный справочник код: 000000033   
//Стр._60323_6 - счет 60323 Аналитика: Универсальный справочник код: 000000033   
//Стр._60322_7 - счет 60322 Аналитика: Универсальный справочник код: 000000034   
//Стр._60323_7 - счет 60323 Аналитика: Универсальный справочник код: 000000034   
//Стр._60322_8 - счет 60322 Аналитика: Универсальный справочник код: 000000035   
//Стр._60323_8 - счет 60323 Аналитика: Универсальный справочник код: 000000035   
//Стр._60322_9 - счет 60322 Аналитика: Универсальный справочник код: 000000036   
//Стр._60323_9 - счет 60323 Аналитика: Универсальный справочник код: 000000036   
//Стр._60324_1
//Стр._61217_1 - счет 61217 Аналитика: Универсальный справочник код: 000000085   
//Стр._61217_2 - счет 61217 Аналитика: Универсальный справочник код: 000000086   
//Стр._61217_3 - счет 61217 Аналитика: Универсальный справочник код: 000000087   
//                         
Функция ОткрытьСчетаКонтрагента_2(Аналитика)Экспорт
	Работаем = Ложь;
	Запрос = Новый Запрос;
	Стр = Новый Структура;
	Запрос.Текст = "ВЫБРАТЬ
	|	БНФОДоговорыКредитовИДепозитов.Ссылка КАК УсловиеЗайма,
	|	БНФОДоговорыКредитовИДепозитов.Контрагент.Ссылка КАК Контрагент,
	|	БНФОДоговорыКредитовИДепозитов.ДоговорКонтрагента.Ссылка КАК ДоговорКонтрагента,
	|	БНФОДоговорыКредитовИДепозитов.Номер КАК НомерДоговора,
	|	БНФОДоговорыКредитовИДепозитов.Контрагент.Наименование КАК ФИО
	|ИЗ
	|	Справочник.БНФОДоговорыКредитовИДепозитов КАК БНФОДоговорыКредитовИДепозитов
	|ГДЕ
	|	БНФОДоговорыКредитовИДепозитов.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БНФОДоговорыКредитовИДепозитов.Ссылка КАК УсловиеЗайма,
	|	БНФОДоговорыКредитовИДепозитов.Контрагент.Ссылка КАК Контрагент,
	|	БНФОДоговорыКредитовИДепозитов.ДоговорКонтрагента.Ссылка КАК ДоговорКонтрагента,
	|	БНФОДоговорыКредитовИДепозитов.Номер КАК НомерДоговора,
	|	БНФОДоговорыКредитовИДепозитов.Контрагент.Наименование КАК ФИО
	|ИЗ
	|	Справочник.БНФОДоговорыКредитовИДепозитов КАК БНФОДоговорыКредитовИДепозитов
	|ГДЕ
	|	БНФОДоговорыКредитовИДепозитов.Контрагент = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БНФОДоговорыКредитовИДепозитов.Ссылка КАК УсловиеЗайма,
	|	БНФОДоговорыКредитовИДепозитов.Контрагент.Ссылка КАК Контрагент,
	|	БНФОДоговорыКредитовИДепозитов.ДоговорКонтрагента.Ссылка КАК ДоговорКонтрагента,
	|	БНФОДоговорыКредитовИДепозитов.Номер КАК НомерДоговора,
	|	БНФОДоговорыКредитовИДепозитов.Контрагент.Наименование КАК ФИО
	|ИЗ
	|	Справочник.БНФОДоговорыКредитовИДепозитов КАК БНФОДоговорыКредитовИДепозитов
	|ГДЕ
	|	БНФОДоговорыКредитовИДепозитов.ДоговорКонтрагента = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БНФОДоговорыКредитовИДепозитов.Ссылка КАК УсловиеЗайма,
	|	БНФОДоговорыКредитовИДепозитов.Контрагент.Ссылка КАК Контрагент,
	|	БНФОДоговорыКредитовИДепозитов.ДоговорКонтрагента.Ссылка КАК ДоговорКонтрагента,
	|	БНФОДоговорыКредитовИДепозитов.Номер КАК НомерДоговора,
	|	БНФОДоговорыКредитовИДепозитов.Контрагент.Наименование КАК ФИО
	|ИЗ
	|	Справочник.БНФОДоговорыКредитовИДепозитов КАК БНФОДоговорыКредитовИДепозитов
	|ГДЕ
	|	БНФОДоговорыКредитовИДепозитов.Номер = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка",Аналитика );
	Масрез = Запрос.ВыполнитьПакет();
	//*********************************************************************** 
	Выборка = Масрез[0].Выбрать();
	Пока Выборка.Следующий() Цикл
		Контрагент    = Выборка.Контрагент;
		ФИО           = Выборка.ФИО;
		НомерДоговора = Выборка.НомерДоговора;
		ДоговорКонтрагента = Выборка.ДоговорКонтрагента;
		НовУслСС      = Выборка.УсловиеЗайма;
		Работаем      = Истина;  
	КонецЦикла;
	Если не Работаем Тогда
		Выборка = Масрез[1].Выбрать();
		Пока Выборка.Следующий() Цикл
			Контрагент    = Выборка.Контрагент;
			ФИО           = Выборка.ФИО;
			НомерДоговора = Выборка.НомерДоговора;
			ДоговорКонтрагента = Выборка.ДоговорКонтрагента;
			НовУслСС      = Выборка.УсловиеЗайма;
			Работаем      = Истина;  
		КонецЦикла;
	КонецЕсли; 
	Если не Работаем Тогда
		Выборка = Масрез[2].Выбрать();
		Пока Выборка.Следующий() Цикл
			Контрагент    = Выборка.Контрагент;
			ФИО           = Выборка.ФИО;
			ДоговорКонтрагента = Выборка.ДоговорКонтрагента;
			НомерДоговора = Выборка.НомерДоговора;
			НовУслСС      = Выборка.УсловиеЗайма;
			Работаем      = Истина;  
		КонецЦикла;
	КонецЕсли; 
	Если не Работаем Тогда
		Выборка = Масрез[3].Выбрать();
		Пока Выборка.Следующий() Цикл
			Контрагент    = Выборка.Контрагент;
			ФИО           = Выборка.ФИО;
			НомерДоговора = Выборка.НомерДоговора;
			ДоговорКонтрагента = Выборка.ДоговорКонтрагента;
			НовУслСС      = Выборка.УсловиеЗайма;
			Работаем      = Истина;  
		КонецЦикла;
	КонецЕсли; 
	//
	Если Работаем Тогда
		//
		Если Контрагент.АЭ_ИндивидуальныйПредприниматель Тогда
			Возврат ОткрытьСчетаИП_БыстрыйАлгоритм(Стр,Контрагент,ФИО,НомерДоговора,ДоговорКонтрагента,НовУслСС);	
		КонецЕсли; 
		//
		ДатаКонтракта = НачалоДня(ТекущаяДата()); 
		Стр.Вставить("УсловиеЗайма",НовУслСС);
		Стр.Вставить("Контрагент",Контрагент);
		Стр.Вставить("ДоговорКонтрагента",ДоговорКонтрагента);
		НачатьТранзакцию();
		Попытка
			УстановитьПривилегированныйРежим(Истина);
			ДокументОбъект = Документы.БНФООткрытиеСчетовАналитическогоУчета.СоздатьДокумент();
			ДокументОбъект.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			ДокументОбъект.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Займы выданные");
			ДокументОбъект.Организация  = Справочники.Организации.НайтиПоИНН("7838492459");
			ДокументОбъект.Валюта = Справочники.Валюты.НайтиПоКоду("643");									
			ДокументОбъект.Дата =  ДатаКонтракта;
			Нстр  =  ДокументОбъект.ДополнительныеГруппыФинансовогоУчета.Добавить();
			Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Корректировки по займам выданным");
			Нстр  =  ДокументОбъект.ДополнительныеГруппыФинансовогоУчета.Добавить();
			Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Начисленные проценты по займам выданным");
			Нстр  =  ДокументОбъект.ДополнительныеГруппыФинансовогоУчета.Добавить();
			Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Начисленные прочие доходы по займам выданным");
			Нстр  =  ДокументОбъект.ДополнительныеГруппыФинансовогоУчета.Добавить();
			Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Начисленные расходы по займам выданным");
			Нстр  =  ДокументОбъект.ДополнительныеГруппыФинансовогоУчета.Добавить();
			Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Расчеты по процентам по займам выданным");
			Нстр  =  ДокументОбъект.ДополнительныеГруппыФинансовогоУчета.Добавить();
			Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Расчеты по прочим доходам по займам выданным");
			Нстр  =  ДокументОбъект.ДополнительныеГруппыФинансовогоУчета.Добавить();
			Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Расчеты по расходам по займам выданным");
			Нстр  =  ДокументОбъект.ДополнительныеГруппыФинансовогоУчета.Добавить();
			Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
			//Нстр  =  ДокументОбъект.ДополнительныеГруппыФинансовогоУчета.Добавить();
			//Нстр.ГруппаФинансовогоУчета =  Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
			//ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
			//			НИКУЛИНА ГАЛИНА ВАСИЛЬЕВНА; 0009121510; Срочная; ; ;	4880181001000912151000000
			//НИКУЛИНА ГАЛИНА ВАСИЛЬЕВНА; 0009121510; Просроченная; ; ;	4880181002000912151000000
			//НИКУЛИНА ГАЛИНА ВАСИЛЬЕВНА; 0009121510; Срочная; ; ;	4880281001000912151000000
			//НИКУЛИНА ГАЛИНА ВАСИЛЬЕВНА; 0009121510; Просроченная; ; ;	4880281002000912151000000
			//НИКУЛИНА ГАЛИНА ВАСИЛЬЕВНА; 0009121510; Срочная; ; ;	4880381001000912151000000
			//НИКУЛИНА ГАЛИНА ВАСИЛЬЕВНА; 0009121510; Просроченная; ; ;	4880381002000912151000000
			//НИКУЛИНА ГАЛИНА ВАСИЛЬЕВНА; 0009121510; Срочная; ; ;	4880481001000912151000000
			//НИКУЛИНА ГАЛИНА ВАСИЛЬЕВНА; 0009121510; Просроченная; ; ;	4880481002000912151000000
			//НИКУЛИНА ГАЛИНА ВАСИЛЬЕВНА; 0009121510; Срочная; ; ;	4880581001000912151000000
			//НИКУЛИНА ГАЛИНА ВАСИЛЬЕВНА; 0009121510; Просроченная; ; ;	4880581002000912151000000
			//НИКУЛИНА ГАЛИНА ВАСИЛЬЕВНА; 0009121510; Срочная; ; ;	4880681001000912151000000
			//НИКУЛИНА ГАЛИНА ВАСИЛЬЕВНА; 0009121510; Просроченная; ; ;	4880681002000912151000000
			//НИКУЛИНА ГАЛИНА ВАСИЛЬЕВНА; 0009121510; Срочная; ; ;	4880781001000912151000000
			//НИКУЛИНА ГАЛИНА ВАСИЛЬЕВНА; 0009121510; Просроченная; ; ;	4880781002000912151000000
			//НИКУЛИНА ГАЛИНА ВАСИЛЬЕВНА; 0009121510; Срочная; ; ;	4880881001000912151000000
			//НИКУЛИНА ГАЛИНА ВАСИЛЬЕВНА; 0009121510; Просроченная; ; ;	4880881002000912151000000
			//НИКУЛИНА ГАЛИНА ВАСИЛЬЕВНА; 0009121510; Срочная; ; ;	4880981001000912151000000
			//НИКУЛИНА ГАЛИНА ВАСИЛЬЕВНА; 0009121510; Просроченная; ; ;	4880981002000912151000000
			//НИКУЛИНА ГАЛИНА ВАСИЛЬЕВНА; 0009121510; Беспроблемная; ; ;	4881081001000912151000000
			//НИКУЛИНА ГАЛИНА ВАСИЛЬЕВНА; 0009121510; Со значительным увеличением кредитного риска; ; ;	4881081002000912151000000
			//НИКУЛИНА ГАЛИНА ВАСИЛЬЕВНА; 0009121510; Прочие операции; ; ;	6032281000000912151000000
			//НИКУЛИНА ГАЛИНА ВАСИЛЬЕВНА; 0009121510; Госпошлина, присужденная судом к возмещению; ; ;	6032281002000912151000000
			//НИКУЛИНА ГАЛИНА ВАСИЛЬЕВНА; 0009121510; Судебные издержки, присужденные судом к возмещению; ; ;	6032281003000912151000000
			//НИКУЛИНА ГАЛИНА ВАСИЛЬЕВНА; 0009121510; Пени, начисленные до расторжения договора займа; ; ;	6032281004000912151000000
			//НИКУЛИНА ГАЛИНА ВАСИЛЬЕВНА; 0009121510; Задолженность по RI после досрочного расторжения; ; ;	6032281005000912151000000
			//НИКУЛИНА ГАЛИНА ВАСИЛЬЕВНА; 0009121510; Штрафы за досрочное расторжение договора; ; ;	6032281006000912151000000
			//НИКУЛИНА ГАЛИНА ВАСИЛЬЕВНА; 0009121510; Задолженность по процентам после досрочного расторжения договора; ; ;	6032281007000912151000000
			//НИКУЛИНА ГАЛИНА ВАСИЛЬЕВНА; 0009121510; Задолженность по основному долгу после досрочного расторжения договора; ; ;	6032281008000912151000000
			//НИКУЛИНА ГАЛИНА ВАСИЛЬЕВНА; 0009121510; Задолженность по Пакету услуг после досрочного расторжения договора; ; ;	6032281009000912151000000
			//НИКУЛИНА ГАЛИНА ВАСИЛЬЕВНА; 0009121510; Прочие операции; ; ;	6032381000000912151000000
			//НИКУЛИНА ГАЛИНА ВАСИЛЬЕВНА; 0009121510; Госпошлина, присужденная судом к возмещению; ; ;	6032381002000912151000000
			//НИКУЛИНА ГАЛИНА ВАСИЛЬЕВНА; 0009121510; Судебные издержки, присужденные судом к возмещению; ; ;	6032381003000912151000000
			//НИКУЛИНА ГАЛИНА ВАСИЛЬЕВНА; 0009121510; Пени, начисленные до расторжения договора займа; ; ;	6032381004000912151000000
			//НИКУЛИНА ГАЛИНА ВАСИЛЬЕВНА; 0009121510; Задолженность по RI после досрочного расторжения; ; ;	6032381005000912151000000
			//НИКУЛИНА ГАЛИНА ВАСИЛЬЕВНА; 0009121510; Штрафы за досрочное расторжение договора; ; ;	6032381006000912151000000
			//НИКУЛИНА ГАЛИНА ВАСИЛЬЕВНА; 0009121510; Задолженность по процентам после досрочного расторжения договора; ; ;	6032381007000912151000000
			//НИКУЛИНА ГАЛИНА ВАСИЛЬЕВНА; 0009121510; Задолженность по основному долгу после досрочного расторжения договора; ; ;	6032381008000912151000000
			//НИКУЛИНА ГАЛИНА ВАСИЛЬЕВНА; 0009121510; Задолженность по Пакету услуг после досрочного расторжения договора; ; ;	6032381009000912151000000
			//НИКУЛИНА ГАЛИНА ВАСИЛЬЕВНА; 0009121510; Прочие операции; ; ;	6032481000000912151000000
			//НИКУЛИНА ГАЛИНА ВАСИЛЬЕВНА; 0009121510; Выбытие активов (займов) в связи с ПДП; ; ;	6121781001000912151000000
			//НИКУЛИНА ГАЛИНА ВАСИЛЬЕВНА; 0009121510; Выбытие займа при досрочном расторжении договора (Дефолт); ; ;	6121781002000912151000000
			//НИКУЛИНА ГАЛИНА ВАСИЛЬЕВНА; 0009121510; Списание с баланса за счет резерва; ; ;	6121781003000912151000000
			#Область область48801_09_1                                                              
			Если не ЗначениеЗаполнено(Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("4880181001"+НовУслСС.Номер+"00000")) Тогда
				Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("48801",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000023"))) Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();                                 
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//0;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//0;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000023");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//0;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000014");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Займы выданные");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48801");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//0;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Срочная, Займы выданные";
				КонецЕсли; 
			КонецЕсли; 
			Если  не ЗначениеЗаполнено(Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("4880781001"+НовУслСС.Номер+"00000")) Тогда
				Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("48807",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000023"))) Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//1;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//1;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000023");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//1;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаАктивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000014");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Корректировки по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48807");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//1;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Срочная, Корректировки по займам выданным";
				КонецЕсли;
			КонецЕсли;
			
			Если  не ЗначениеЗаполнено(Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("4880881001"+НовУслСС.Номер+"00000")) Тогда
				Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("48808",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000023"))) Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//2;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//2;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000023");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//2;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаПассивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000014");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Корректировки по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48808");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//2;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Срочная, Корректировки по займам выданным";
				КонецЕсли;
			КонецЕсли;
			
			Если  не ЗначениеЗаполнено(Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("4880281001"+НовУслСС.Номер+"00000")) Тогда
				Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("48802",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000023"))) Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//3;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//3;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000023");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//3;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000014");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Начисленные проценты по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48802");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//3;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Срочная, Начисленные проценты по займам выданным";
				КонецЕсли;
			КонецЕсли;
			
			Если  не ЗначениеЗаполнено(Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("4880381001"+НовУслСС.Номер+"00000")) Тогда
				Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("48803",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000023"))) Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//4;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//4;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000023");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//4;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000014");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Начисленные прочие доходы по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48803");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//4;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Срочная, Начисленные прочие доходы по займам выданным";
				КонецЕсли;
			КонецЕсли;
			
			Если  не ЗначениеЗаполнено(Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("4880581001"+НовУслСС.Номер+"00000")) Тогда
				Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("48805",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000023"))) Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//5;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//5;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000023");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//5;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000014");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Начисленные расходы по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48805");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//5;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Срочная, Начисленные расходы по займам выданным";
				КонецЕсли;
			КонецЕсли;
			
			Если  не ЗначениеЗаполнено(Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("4880981001"+НовУслСС.Номер+"00000")) Тогда
				Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("48809",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000023"))) Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//6;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//6;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000023");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//6;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000014");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Расчеты по процентам по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48809");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//6;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Срочная, Расчеты по процентам по займам выданным";
				КонецЕсли;
			КонецЕсли;
			
			Если  не ЗначениеЗаполнено(Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("4880481001"+НовУслСС.Номер+"00000")) Тогда
				Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("48804",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000023"))) Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//7;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//7;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000023");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//7;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000014");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Расчеты по прочим доходам по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48804");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//7;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Срочная,Расчеты по прочим доходам по займам выданным";
				КонецЕсли;
			КонецЕсли;
			
			Если  не ЗначениеЗаполнено(Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("4880681001"+НовУслСС.Номер+"00000")) Тогда
				Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("48806",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000023"))) Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//8;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//8;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000023");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//8;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000014");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Расчеты по расходам по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48806");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//8;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Срочная, Расчеты по расходам по займам выданным";
				КонецЕсли;
			КонецЕсли;
			
			//Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("48810",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000023"))) Тогда
			//	КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
			//	Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
			//	Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
			//	Нстр.КлючеваяАналитика = Истина;
			//	Нстр.ЗаполнятьОбязательно = Ложь;
			//	Нстр.ЗначениеАналитики = Контрагент;
			//	Нстр.ЭтоОбъект = Истина;
			//	Нстр.КлючСтроки = КлючСтроки;//9;
			//	Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
			//	Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
			//	Нстр.КлючеваяАналитика = Истина;
			//	Нстр.ЗаполнятьОбязательно = Ложь;
			//	Нстр.ЗначениеАналитики = НовУслСС;
			//	Нстр.ЭтоОбъект = Истина;
			//	Нстр.КлючСтроки = КлючСтроки;//9;
			//	Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
			//	Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоКоду("0000000034");
			//	Нстр.КлючеваяАналитика = Истина;
			//	Нстр.ЗаполнятьОбязательно = Ложь;
			//	Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000025");
			//	Нстр.ЭтоОбъект = Истина;
			//	Нстр.КлючСтроки = КлючСтроки;//9;
			//	Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
			//	Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
			//	Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000015");
			//	Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
			//	Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48810");
			//	Нстр.ОткрыватьСчет = Истина;
			//	Нстр.КлючСтроки = КлючСтроки;//9;
			//	Нстр.ДатаОткрытия = ДатаКонтракта;
			//	Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Беспроблемная, Резервы под обесценение по займам выданным";
			//КонецЕсли;
			#КонецОбласти 
			////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 
			#Область область48801_09_2
			Если  не ЗначениеЗаполнено(Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("4880181002"+НовУслСС.Номер+"00000")) Тогда
				Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("48801",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000024"))) Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//    КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//    КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000024");  
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000014"); 
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Займы выданные");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48801");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000024"))+", Займы выданные";
				КонецЕсли;
			КонецЕсли;
			
			Если  не ЗначениеЗаполнено(Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("4880781002"+НовУслСС.Номер+"00000")) Тогда
				Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("48807",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000024"))) Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000024");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаАктивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000014");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Корректировки по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48807");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000024"))+", Корректировки по займам выданным";
				КонецЕсли;
			КонецЕсли;
			
			Если  не ЗначениеЗаполнено(Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("4880881002"+НовУслСС.Номер+"00000")) Тогда
				Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("48808",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000024"))) Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000024");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаПассивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000014");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Корректировки по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48808");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000024"))+", Корректировки по займам выданным";
				КонецЕсли;
			КонецЕсли;
			
			Если  не ЗначениеЗаполнено(Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("4880281002"+НовУслСС.Номер+"00000")) Тогда
				Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("48802",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000024"))) Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000024");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000014");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Начисленные проценты по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48802");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000024"))+", Начисленные проценты по займам выданным";
				КонецЕсли;
			КонецЕсли;
			
			Если  не ЗначениеЗаполнено(Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("4880381002"+НовУслСС.Номер+"00000")) Тогда
				Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("48803",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000024"))) Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000024");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000014");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Начисленные прочие доходы по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48803");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000024"))+", Начисленные прочие доходы по займам выданным";
				КонецЕсли;
			КонецЕсли;
			
			Если  не ЗначениеЗаполнено(Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("4880581002"+НовУслСС.Номер+"00000")) Тогда
				Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("48805",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000024"))) Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000024");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000014");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Начисленные расходы по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48805");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000024"))+", Начисленные расходы по займам выданным";
				КонецЕсли;
			КонецЕсли;
			
			Если  не ЗначениеЗаполнено(Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("4880981002"+НовУслСС.Номер+"00000")) Тогда
				Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("48809",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000024"))) Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000024");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000014");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Расчеты по процентам по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48809");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000024"))+", Расчеты по процентам по займам выданным";
				КонецЕсли;
			КонецЕсли;
			
			Если  не ЗначениеЗаполнено(Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("4880481002"+НовУслСС.Номер+"00000")) Тогда
				Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("48804",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000024"))) Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;// КлючСтроки;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000024");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000014");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Расчеты по прочим доходам по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48804");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;// КлючСтроки;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000024"))+",Расчеты по прочим доходам по займам выданным";
				КонецЕсли;
			КонецЕсли;
			
			Если  не ЗначениеЗаполнено(Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("4880681002"+НовУслСС.Номер+"00000")) Тогда
				Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("48806",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000024"))) Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;// КлючСтроки;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;// КлючСтроки;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000024");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000014");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Расчеты по расходам по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48806");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;// КлючСтроки;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000024"))+", Расчеты по расходам по займам выданным";
				КонецЕсли;
			КонецЕсли;
			
			#КонецОбласти	
			//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			
			#Область область48810_1_и_2
			Если  не ЗначениеЗаполнено(Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("4881081001"+НовУслСС.Номер+"00000")) Тогда
				Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("48810",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000025"))) Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//9;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//9;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоКоду("0000000034");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000025");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//9;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000015");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48810");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//9;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Беспроблемная, Резервы под обесценение по займам выданным";
				КонецЕсли;
			КонецЕсли;
			
			
			Если  не ЗначениеЗаполнено(Справочники.БНФОСчетаАналитическогоУчета.НайтиПоКоду("4881081002"+НовУслСС.Номер+"00000")) Тогда
				Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("48810",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000026"))) Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//9;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//9;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоКоду("0000000034");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000026");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//9;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000015");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48810");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//9;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Беспроблемная, Резервы под обесценение по займам выданным";
				КонецЕсли;
			КонецЕсли;
			
			#КонецОбласти
			
			#Область Область60324 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("60324",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000028"))) Тогда
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//15;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				//Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКонтрагента;
				//Нстр.КлючеваяАналитика = Истина;
				//Нстр.ЗаполнятьОбязательно = Ложь;
				//Нстр.ЗначениеАналитики = ДоговорКонтрагента;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//15;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");//ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000028");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//15;
				//  
				//НСчет = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
				//  НСчет.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60324");	
				//  НСчет.Код = "60324"+"81000"+Прав(НомерДоговора,10)+"00000";
				//  НСчет.ПроизвольныйСегмент =  "0"+Прав(НомерДоговора,10)+"00000"; //0005500006600000
				//  НСчет.Наименование =  "Резервы  "+Строка(ФИО)+" по договору "+Строка(НомерДоговора);
				//  НСчет.Валюта  = Справочники.Валюты.НайтиПоКоду("643");
				//  НСчет.Организация  = Справочники.Организации.НайтиПоИНН("7838492459");
				//  НСчет.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
				//  НСчет.ТребуетсяПереоценка = ложь;
				//  НСчет.ТребуетсяСверка = ложь;
				//  НСчет.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
				//  НСчет.ГруппаФинансовогоУчета =Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
				//  НСчет.ПовторноеИспользованиеНомераСчета = Истина;
				//  НСчет.Комментарий = "Резервы  "+Строка(ФИО)+" по договору "+Строка(НомерДоговора); 
				//  НСчет.СпособХранения = 1;
				//  НСчет.Записать();
				
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.Резервы;
				//Нстр.СчетАналитическогоУчета =  НСчет;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60324");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//15;
				Нстр.ДатаОткрытия = ТекущаяДата();
				Нстр.Наименование = "Резервы  "+Строка(ФИО)+" по договору "+Строка(НомерДоговора);
			КонецЕсли;
			#КонецОбласти
			
			#Область область60322_23 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("60322",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000028"))) Тогда   
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000028");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаПассивный;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр.ДатаОткрытия = ТекущаяДата();
				Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора);
			КонецЕсли; 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("60323",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000028"))) Тогда
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000028");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаАктивный;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр.ДатаОткрытия = ТекущаяДата();
				Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора);
			КонецЕсли;
			#КонецОбласти
			
			#Область область60322_23_000000029 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("60322",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000029"))) Тогда   
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000029");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаПассивный;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр.ДатаОткрытия = ТекущаяДата();
				Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000029"));
			КонецЕсли; 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("60323",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000029"))) Тогда
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000029");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаАктивный;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр.ДатаОткрытия = ТекущаяДата();
				Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000029"));
			КонецЕсли;
			#КонецОбласти
			
			#Область  область60322_23_000000030 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("60322",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000030"))) Тогда   
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000030");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаПассивный;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр.ДатаОткрытия = ТекущаяДата();
				Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000030"));
			КонецЕсли; 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("60323",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000030"))) Тогда
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000030");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаАктивный;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр.ДатаОткрытия = ТекущаяДата();
				Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000030"));
			КонецЕсли;
			#КонецОбласти
			
			#Область область60322_23_000000031 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("60322",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000031"))) Тогда   
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000031");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаПассивный;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр.ДатаОткрытия = ТекущаяДата();
				Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000031"));
			КонецЕсли; 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("60323",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000031"))) Тогда
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000031");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаАктивный;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр.ДатаОткрытия = ТекущаяДата();
				Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000031"));
			КонецЕсли;
			#КонецОбласти
			
			#Область  область60322_23_000000032 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("60322",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000032"))) Тогда   
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000032");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаПассивный;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр.ДатаОткрытия = ТекущаяДата();
				Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000032"));
			КонецЕсли; 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("60323",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000032"))) Тогда
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000032");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаАктивный;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр.ДатаОткрытия = ТекущаяДата();
				Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000032"));
			КонецЕсли;
			#КонецОбласти
			
			#Область  область60322_23_000000033 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("60322",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000033"))) Тогда   
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000033");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаПассивный;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр.ДатаОткрытия = ТекущаяДата();
				Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000033"));
			КонецЕсли; 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("60323",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000033"))) Тогда
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000033");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаАктивный;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр.ДатаОткрытия = ТекущаяДата();
				Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000033"));
			КонецЕсли;
			#КонецОбласти
			
			#Область  область60322_23_000000034 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("60322",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000034"))) Тогда   
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000034");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаПассивный;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр.ДатаОткрытия = ТекущаяДата();
				Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000034"));
			КонецЕсли; 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("60323",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000034"))) Тогда
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000034");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаАктивный;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр.ДатаОткрытия = ТекущаяДата();
				Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000034"));
			КонецЕсли;
			#КонецОбласти
			
			#Область  область60322_23_000000035 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("60322",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000035"))) Тогда   
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000035");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаПассивный;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр.ДатаОткрытия = ТекущаяДата();
				Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000035"));
			КонецЕсли; 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("60323",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000035"))) Тогда
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000035");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаАктивный;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр.ДатаОткрытия = ТекущаяДата();
				Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000035"));
			КонецЕсли;
			#КонецОбласти
			
			#Область  область60322_23_000000036 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("60322",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000036"))) Тогда   
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000036");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаПассивный;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//11;
				Нстр.ДатаОткрытия = ТекущаяДата();
				Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000036"));
			КонецЕсли; 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("60323",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000036"))) Тогда
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000036");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаАктивный;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр.ДатаОткрытия = ТекущаяДата();
				Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000036"));
			КонецЕсли;
			#КонецОбласти
			
			#Область область61217_000000085 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("61217",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000085"))) Тогда
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид выбытия займов");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000085");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000033");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Выбытие займов");
				
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("61217");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр.ДатаОткрытия = ТекущаяДата();
				Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000036"));
			КонецЕсли;
			#КонецОбласти
			
			#Область Область61217_000000086 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("61217",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000086"))) Тогда
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =  ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид выбытия займов");
				
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000086");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000033");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Выбытие займов");
				
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("61217");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр.ДатаОткрытия = ТекущаяДата();
				Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000036"));
			КонецЕсли;
			#КонецОбласти
			
			#Область Область61217_000000087 
			Если не ЗначениеЗаполнено(ПолучитьСчетКонтрактаПоАналитике("61217",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000087"))) Тогда
				КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Контрагент;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = НовУслСС;
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
				Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид выбытия займов");
				Нстр.КлючеваяАналитика = Истина;
				Нстр.ЗаполнятьОбязательно = Ложь;
				Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000087");
				Нстр.ЭтоОбъект = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
				Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
				Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000033");
				Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Выбытие займов");
				Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("61217");
				Нстр.ОткрыватьСчет = Истина;
				Нстр.КлючСтроки = КлючСтроки;//10;
				Нстр.ДатаОткрытия = ТекущаяДата();
				Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000036"));
			КонецЕсли;
			#КонецОбласти
			
			//Вид выбытия займов
			Если ДокументОбъект.СчетаУчета.Количество() > 0 Тогда
				ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
			КонецЕсли; 
			ЗафиксироватьТранзакцию();
			УстановитьПривилегированныйРежим(Ложь);	
		Исключение
			Text = ОписаниеОшибки(); 
			ОтменитьТранзакцию();
			УстановитьПривилегированныйРежим(Ложь);	
			ВызватьИсключение  Text;
		КонецПопытки;
	Иначе 
		Стр.Вставить("УсловиеЗайма",Справочники.БНФОДоговорыКредитовИДепозитов.ПустаяСсылка());
		Стр.Вставить("Контрагент",Справочники.Контрагенты.ПустаяСсылка());
		Стр.Вставить("ДоговорКонтрагента",Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
	КонецЕсли;
	Стр.Вставить("_48801_1",ПолучитьСчетКонтрактаПоАналитике("48801",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000023")));
	Стр.Вставить("_48802_1",ПолучитьСчетКонтрактаПоАналитике("48802",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000023")));
	Стр.Вставить("_48803_1",ПолучитьСчетКонтрактаПоАналитике("48803",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000023")));
	Стр.Вставить("_48804_1",ПолучитьСчетКонтрактаПоАналитике("48804",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000023")));
	Стр.Вставить("_48805_1",ПолучитьСчетКонтрактаПоАналитике("48805",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000023")));
	Стр.Вставить("_48806_1",ПолучитьСчетКонтрактаПоАналитике("48806",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000023")));
	Стр.Вставить("_48807_1",ПолучитьСчетКонтрактаПоАналитике("48807",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000023")));
	Стр.Вставить("_48808_1",ПолучитьСчетКонтрактаПоАналитике("48808",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000023")));
	Стр.Вставить("_48809_1",ПолучитьСчетКонтрактаПоАналитике("48809",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000023")));
	Стр.Вставить("_48810_1",ПолучитьСчетКонтрактаПоАналитике("48810",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000025")));
	Стр.Вставить("_48801_2",ПолучитьСчетКонтрактаПоАналитике("48801",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000024")));
	Стр.Вставить("_48802_2",ПолучитьСчетКонтрактаПоАналитике("48802",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000024")));
	Стр.Вставить("_48803_2",ПолучитьСчетКонтрактаПоАналитике("48803",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000024")));
	Стр.Вставить("_48804_2",ПолучитьСчетКонтрактаПоАналитике("48804",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000024")));
	Стр.Вставить("_48805_2",ПолучитьСчетКонтрактаПоАналитике("48805",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000024")));
	Стр.Вставить("_48806_2",ПолучитьСчетКонтрактаПоАналитике("48806",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000024")));
	Стр.Вставить("_48807_2",ПолучитьСчетКонтрактаПоАналитике("48807",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000024")));
	Стр.Вставить("_48808_2",ПолучитьСчетКонтрактаПоАналитике("48808",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000024")));
	Стр.Вставить("_48809_2",ПолучитьСчетКонтрактаПоАналитике("48809",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000024")));
	Стр.Вставить("_48810_2",ПолучитьСчетКонтрактаПоАналитике("48810",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000026")));
	Стр.Вставить("_60322_1",ПолучитьСчетКонтрактаПоАналитике("60322",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000028")));
	Стр.Вставить("_60323_1",ПолучитьСчетКонтрактаПоАналитике("60323",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000028")));
	Стр.Вставить("_60322_2",ПолучитьСчетКонтрактаПоАналитике("60322",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000029")));
	Стр.Вставить("_60323_2",ПолучитьСчетКонтрактаПоАналитике("60323",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000029")));
	Стр.Вставить("_60322_3",ПолучитьСчетКонтрактаПоАналитике("60322",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000030")));
	Стр.Вставить("_60323_3",ПолучитьСчетКонтрактаПоАналитике("60323",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000030")));
	Стр.Вставить("_60322_4",ПолучитьСчетКонтрактаПоАналитике("60322",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000031")));
	Стр.Вставить("_60323_4",ПолучитьСчетКонтрактаПоАналитике("60323",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000031")));
	Стр.Вставить("_60322_5",ПолучитьСчетКонтрактаПоАналитике("60322",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000032")));
	Стр.Вставить("_60323_5",ПолучитьСчетКонтрактаПоАналитике("60323",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000032")));
	Стр.Вставить("_60322_6",ПолучитьСчетКонтрактаПоАналитике("60322",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000033")));
	Стр.Вставить("_60323_6",ПолучитьСчетКонтрактаПоАналитике("60323",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000033")));
	Стр.Вставить("_60322_7",ПолучитьСчетКонтрактаПоАналитике("60322",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000034")));
	Стр.Вставить("_60323_7",ПолучитьСчетКонтрактаПоАналитике("60323",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000034")));
	Стр.Вставить("_60322_8",ПолучитьСчетКонтрактаПоАналитике("60322",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000035")));
	Стр.Вставить("_60323_8",ПолучитьСчетКонтрактаПоАналитике("60323",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000035")));
	Стр.Вставить("_60322_9",ПолучитьСчетКонтрактаПоАналитике("60322",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000036")));
	Стр.Вставить("_60323_9",ПолучитьСчетКонтрактаПоАналитике("60323",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000036")));
	Стр.Вставить("_60324_1",ПолучитьСчетПоАналитике("60324",НовУслСС));
	Стр.Вставить("_61217_1",ПолучитьСчетКонтрактаПоАналитике("61217",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000085")));
	Стр.Вставить("_61217_2",ПолучитьСчетКонтрактаПоАналитике("61217",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000086")));
	Стр.Вставить("_61217_3",ПолучитьСчетКонтрактаПоАналитике("61217",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000087")));
	Возврат Стр;
КонецФункции // ()

//Этот алгоритм рассчитан на то что аналитика счета может быть крива 
//или занята. Счета будут созданы в любом случае,
//В случае ошибки открытия операции будут вестись по неоткрытым счетам.
//Так как ошибки открытия как и регламент ведения учета никак не проверить,
//То почетную обязанность открывать счета стоит возложить на FD
//Функция ОткрытьСчетаИП_БыстрыйАлгоритм(Аналитика)Экспорт
Функция ОткрытьСчетаИП_БыстрыйАлгоритм(Стр,Контрагент,ФИО,НомерДоговора,ДоговорКонтрагента,НовУслСС)
	//Это мы теперь выполняем выше по вызову
	//Работаем = Ложь;
	//Запрос = Новый Запрос;
	//Стр = Новый Структура;
	//Запрос.Текст = "ВЫБРАТЬ
	//|	БНФОДоговорыКредитовИДепозитов.Ссылка КАК УсловиеЗайма,
	//|	БНФОДоговорыКредитовИДепозитов.Контрагент.Ссылка КАК Контрагент,
	//|	БНФОДоговорыКредитовИДепозитов.ДоговорКонтрагента.Ссылка КАК ДоговорКонтрагента,
	//|	БНФОДоговорыКредитовИДепозитов.Номер КАК НомерДоговора,
	//|	БНФОДоговорыКредитовИДепозитов.Контрагент.Наименование КАК ФИО
	//|ИЗ
	//|	Справочник.БНФОДоговорыКредитовИДепозитов КАК БНФОДоговорыКредитовИДепозитов
	//|ГДЕ
	//|	БНФОДоговорыКредитовИДепозитов.Ссылка = &Ссылка";
	//Запрос.УстановитьПараметр("Ссылка",Аналитика );
	//Выборка = Запрос.Выполнить().Выбрать();
	//Пока Выборка.Следующий() Цикл
	//	Контрагент    = Выборка.Контрагент;
	//	ФИО           = Выборка.ФИО;
	//	НомерДоговора = Выборка.НомерДоговора;
	//	ДоговорКонтрагента = Выборка.ДоговорКонтрагента;
	//	НовУслСС      = Выборка.УсловиеЗайма;
	//	Работаем      = Истина;  
	//КонецЦикла;
	//Запрос.Текст = "ВЫБРАТЬ
	//|	БНФОДоговорыКредитовИДепозитов.Ссылка КАК УсловиеЗайма,
	//|	БНФОДоговорыКредитовИДепозитов.Контрагент.Ссылка КАК Контрагент,
	//|	БНФОДоговорыКредитовИДепозитов.ДоговорКонтрагента.Ссылка КАК ДоговорКонтрагента,
	//|	БНФОДоговорыКредитовИДепозитов.Номер КАК НомерДоговора,
	//|	БНФОДоговорыКредитовИДепозитов.Контрагент.Наименование КАК ФИО
	//|ИЗ
	//|	Справочник.БНФОДоговорыКредитовИДепозитов КАК БНФОДоговорыКредитовИДепозитов
	//|ГДЕ
	//|	БНФОДоговорыКредитовИДепозитов.Контрагент = &Ссылка";
	//Запрос.УстановитьПараметр("Ссылка",Аналитика );
	//Выборка = Запрос.Выполнить().Выбрать();
	//Пока Выборка.Следующий() Цикл
	//	Контрагент    = Выборка.Контрагент;
	//	ФИО           = Выборка.ФИО;
	//	НомерДоговора = Выборка.НомерДоговора;
	//	ДоговорКонтрагента = Выборка.ДоговорКонтрагента;
	//	НовУслСС      = Выборка.УсловиеЗайма;
	//	Работаем      = Истина;  
	//КонецЦикла;
	//Запрос.Текст = "ВЫБРАТЬ
	//|	БНФОДоговорыКредитовИДепозитов.Ссылка КАК УсловиеЗайма,
	//|	БНФОДоговорыКредитовИДепозитов.Контрагент.Ссылка КАК Контрагент,
	//|	БНФОДоговорыКредитовИДепозитов.ДоговорКонтрагента.Ссылка КАК ДоговорКонтрагента,
	//|	БНФОДоговорыКредитовИДепозитов.Номер КАК НомерДоговора,
	//|	БНФОДоговорыКредитовИДепозитов.Контрагент.Наименование КАК ФИО
	//|ИЗ
	//|	Справочник.БНФОДоговорыКредитовИДепозитов КАК БНФОДоговорыКредитовИДепозитов
	//|ГДЕ
	//|	БНФОДоговорыКредитовИДепозитов.ДоговорКонтрагента = &Ссылка";
	//Запрос.УстановитьПараметр("Ссылка",Аналитика);
	//Выборка = Запрос.Выполнить().Выбрать();
	//Пока Выборка.Следующий() Цикл
	//	Контрагент    = Выборка.Контрагент;
	//	ФИО           = Выборка.ФИО;
	//	ДоговорКонтрагента = Выборка.ДоговорКонтрагента;
	//	НомерДоговора = Выборка.НомерДоговора;
	//	НовУслСС      = Выборка.УсловиеЗайма;
	//	Работаем      = Истина;  
	//КонецЦикла;
	//Запрос.Текст = "ВЫБРАТЬ
	//|	БНФОДоговорыКредитовИДепозитов.Ссылка КАК УсловиеЗайма,
	//|	БНФОДоговорыКредитовИДепозитов.Контрагент.Ссылка КАК Контрагент,
	//|	БНФОДоговорыКредитовИДепозитов.ДоговорКонтрагента.Ссылка КАК ДоговорКонтрагента,
	//|	БНФОДоговорыКредитовИДепозитов.Номер КАК НомерДоговора,
	//|	БНФОДоговорыКредитовИДепозитов.Контрагент.Наименование КАК ФИО
	//|ИЗ
	//|	Справочник.БНФОДоговорыКредитовИДепозитов КАК БНФОДоговорыКредитовИДепозитов
	//|ГДЕ
	//|	БНФОДоговорыКредитовИДепозитов.Номер = &Номер";
	//Запрос.УстановитьПараметр("Номер",Аналитика);
	//Выборка = Запрос.Выполнить().Выбрать();
	//Пока Выборка.Следующий() Цикл
	//	Контрагент    = Выборка.Контрагент;
	//	ФИО           = Выборка.ФИО;
	//	НомерДоговора = Выборка.НомерДоговора;
	//	ДоговорКонтрагента = Выборка.ДоговорКонтрагента;
	//	НовУслСС      = Выборка.УсловиеЗайма;
	//	Работаем      = Истина;  
	//КонецЦикла;
	ДатаКонтракта = НачалоДня(ТекущаяДата()); 
	//Если Работаем Тогда
	Стр.Вставить("УсловиеЗайма",НовУслСС);
	Стр.Вставить("Контрагент",Контрагент);
	Стр.Вставить("ДоговорКонтрагента",ДоговорКонтрагента);
	
	Запрос1 = Новый Запрос;
	Запрос1.Текст = "ВЫБРАТЬ
	|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
	|ГДЕ
	|	БНФОСчетаАналитическогоУчета.Код = ""4940181001""+&Номер+""00000""
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 0
	|ВЫБРАТЬ
	|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
	|ГДЕ
	|	БНФОСчетаАналитическогоУчета.Код = ""4940281001""+&Номер+""00000""
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////  1
	|ВЫБРАТЬ
	|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
	|ГДЕ
	|	БНФОСчетаАналитическогоУчета.Код = ""4940381001""+&Номер+""00000""
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////   2
	|ВЫБРАТЬ
	|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
	|ГДЕ
	|	БНФОСчетаАналитическогоУчета.Код = ""4940481001""+&Номер+""00000""
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////   3
	|ВЫБРАТЬ
	|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
	|ГДЕ
	|	БНФОСчетаАналитическогоУчета.Код = ""4940581001""+&Номер+""00000""
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////   4
	|ВЫБРАТЬ
	|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
	|ГДЕ
	|	БНФОСчетаАналитическогоУчета.Код = ""4940681001""+&Номер+""00000""
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////   5
	|ВЫБРАТЬ
	|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
	|ГДЕ
	|	БНФОСчетаАналитическогоУчета.Код = ""4940781001""+&Номер+""00000""
	|;
	|////////////////////////////////////////////////////////////////////////////////  6
	|ВЫБРАТЬ
	|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
	|ГДЕ
	|	БНФОСчетаАналитическогоУчета.Код = ""4940881001""+&Номер+""00000""
	|;
	|////////////////////////////////////////////////////////////////////////////////  7
	|ВЫБРАТЬ
	|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
	|ГДЕ
	|	БНФОСчетаАналитическогоУчета.Код = ""4940981001""+&Номер+""00000""
	|;
	|////////////////////////////////////////////////////////////////////////////////  8
	|ВЫБРАТЬ
	|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
	|ГДЕ
	|	БНФОСчетаАналитическогоУчета.Код = ""4941081001""+&Номер+""00000""
	|;
	|//////////////////////////////////////////////////////////////////////////////// 9
	|ВЫБРАТЬ
	|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
	|ГДЕ
	|	БНФОСчетаАналитическогоУчета.Код = ""4940181002""+&Номер+""00000""
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 10
	|ВЫБРАТЬ
	|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
	|ГДЕ
	|	БНФОСчетаАналитическогоУчета.Код = ""4940281002""+&Номер+""00000""
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 11
	|ВЫБРАТЬ
	|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
	|ГДЕ
	|	БНФОСчетаАналитическогоУчета.Код = ""4940381002""+&Номер+""00000""
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 12
	|ВЫБРАТЬ
	|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
	|ГДЕ
	|	БНФОСчетаАналитическогоУчета.Код = ""4940481002""+&Номер+""00000""
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 13
	|ВЫБРАТЬ
	|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
	|ГДЕ
	|	БНФОСчетаАналитическогоУчета.Код = ""4940581002""+&Номер+""00000""
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 14
	|ВЫБРАТЬ
	|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
	|ГДЕ
	|	БНФОСчетаАналитическогоУчета.Код = ""4940681002""+&Номер+""00000""
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 15
	|ВЫБРАТЬ
	|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
	|ГДЕ
	|	БНФОСчетаАналитическогоУчета.Код = ""4940781002""+&Номер+""00000""
	|;
	|////////////////////////////////////////////////////////////////////////////////  16
	|ВЫБРАТЬ
	|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
	|ГДЕ
	|	БНФОСчетаАналитическогоУчета.Код = ""4940881002""+&Номер+""00000""
	|;
	|////////////////////////////////////////////////////////////////////////////////  17
	|ВЫБРАТЬ
	|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
	|ГДЕ
	|	БНФОСчетаАналитическогоУчета.Код = ""4940981002""+&Номер+""00000""
	|;
	|//////////////////////////////////////////////////////////////////////////////// 18
	|ВЫБРАТЬ
	|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
	|ГДЕ
	|	БНФОСчетаАналитическогоУчета.Код = ""4941081002""+&Номер+""00000""
	|;
	
	|////////////////////////////////////////////////////////////////////////////////  19
	|ВЫБРАТЬ
	|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
	|ГДЕ
	|	БНФОСчетаАналитическогоУчета.Код = ""6032281000""+&Номер+""00000""
	|;
	
	|////////////////////////////////////////////////////////////////////////////////   20
	|ВЫБРАТЬ
	|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
	|ГДЕ
	|	БНФОСчетаАналитическогоУчета.Код = ""6032281002""+&Номер+""00000""
	|;
	|////////////////////////////////////////////////////////////////////////////////  21
	|ВЫБРАТЬ
	|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
	|ГДЕ
	|	БНФОСчетаАналитическогоУчета.Код = ""6032281003""+&Номер+""00000""
	|;
	|////////////////////////////////////////////////////////////////////////////////  22
	|ВЫБРАТЬ
	|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
	|ГДЕ
	|	БНФОСчетаАналитическогоУчета.Код = ""6032281004""+&Номер+""00000""
	|;
	|////////////////////////////////////////////////////////////////////////////////   23
	|ВЫБРАТЬ
	|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
	|ГДЕ
	|	БНФОСчетаАналитическогоУчета.Код = ""6032281005""+&Номер+""00000""
	|;
	|////////////////////////////////////////////////////////////////////////////////  24
	|ВЫБРАТЬ
	|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
	|ГДЕ
	|	БНФОСчетаАналитическогоУчета.Код = ""6032281006""+&Номер+""00000""
	|;
	|////////////////////////////////////////////////////////////////////////////////   25
	|ВЫБРАТЬ
	|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
	|ГДЕ
	|	БНФОСчетаАналитическогоУчета.Код = ""6032281007""+&Номер+""00000""
	|;
	|////////////////////////////////////////////////////////////////////////////////   26
	|ВЫБРАТЬ
	|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
	|ГДЕ
	|	БНФОСчетаАналитическогоУчета.Код = ""6032281008""+&Номер+""00000""
	|;
	|////////////////////////////////////////////////////////////////////////////////   27
	|ВЫБРАТЬ
	|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
	|ГДЕ
	|	БНФОСчетаАналитическогоУчета.Код = ""6032281009""+&Номер+""00000""
	|;
	|////////////////////////////////////////////////////////////////////////////////   28
	|ВЫБРАТЬ
	|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
	|ГДЕ
	|	БНФОСчетаАналитическогоУчета.Код = ""6032381000""+&Номер+""00000""
	|;
	|////////////////////////////////////////////////////////////////////////////////   29
	|ВЫБРАТЬ
	|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
	|ГДЕ
	|	БНФОСчетаАналитическогоУчета.Код = ""6032381002""+&Номер+""00000""
	|;
	|////////////////////////////////////////////////////////////////////////////////   30
	|ВЫБРАТЬ
	|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
	|ГДЕ
	|	БНФОСчетаАналитическогоУчета.Код = ""6032381003""+&Номер+""00000""
	|;
	|////////////////////////////////////////////////////////////////////////////////   31
	|ВЫБРАТЬ
	|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
	|ГДЕ
	|	БНФОСчетаАналитическогоУчета.Код = ""6032381004""+&Номер+""00000""
	|;
	|////////////////////////////////////////////////////////////////////////////////   32
	|ВЫБРАТЬ
	|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
	|ГДЕ
	|	БНФОСчетаАналитическогоУчета.Код = ""6032381005""+&Номер+""00000""
	|;
	|////////////////////////////////////////////////////////////////////////////////    33
	|ВЫБРАТЬ
	|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
	|ГДЕ
	|	БНФОСчетаАналитическогоУчета.Код = ""6032381006""+&Номер+""00000""
	|;
	|////////////////////////////////////////////////////////////////////////////////    34
	|ВЫБРАТЬ
	|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
	|ГДЕ
	|	БНФОСчетаАналитическогоУчета.Код = ""6032381007""+&Номер+""00000""
	|;
	|////////////////////////////////////////////////////////////////////////////////    35
	|ВЫБРАТЬ                                                                             
	|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
	|ГДЕ
	|	БНФОСчетаАналитическогоУчета.Код = ""6032381008""+&Номер+""00000""
	|;
	|////////////////////////////////////////////////////////////////////////////////    36
	|ВЫБРАТЬ
	|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
	|ГДЕ
	|	БНФОСчетаАналитическогоУчета.Код = ""6032381009""+&Номер+""00000""
	|;
	|////////////////////////////////////////////////////////////////////////////////    37
	|ВЫБРАТЬ
	|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
	|ГДЕ
	|	БНФОСчетаАналитическогоУчета.Код = ""6032481000""+&Номер+""00000""
	|;
	|////////////////////////////////////////////////////////////////////////////////    38
	|ВЫБРАТЬ
	|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
	|ГДЕ
	|	БНФОСчетаАналитическогоУчета.Код = ""6121781001""+&Номер+""00000""
	|;
	|////////////////////////////////////////////////////////////////////////////////    39
	|ВЫБРАТЬ
	|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
	|ГДЕ
	|	БНФОСчетаАналитическогоУчета.Код = ""6121781002""+&Номер+""00000""
	|;
	|////////////////////////////////////////////////////////////////////////////////     40
	|ВЫБРАТЬ
	|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
	|ГДЕ
	|	БНФОСчетаАналитическогоУчета.Код = ""6121781003""+&Номер+""00000"" 	
	|;
	|////////////////////////////////////////////////////////////////////////////////    41
	|ВЫБРАТЬ
	|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
	|ГДЕ
	|	БНФОСчетаАналитическогоУчета.Код = ""4940181003""+&Номер+""00000""
	|;
	|////////////////////////////////////////////////////////////////////////////////    42
	|ВЫБРАТЬ
	|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
	|ГДЕ
	|	БНФОСчетаАналитическогоУчета.Код = ""4940281003""+&Номер+""00000""
	|;
	|////////////////////////////////////////////////////////////////////////////////     43
	|ВЫБРАТЬ
	|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
	|ГДЕ
	|	БНФОСчетаАналитическогоУчета.Код = ""4941081003""+&Номер+""00000"" 
	|;
	|////////////////////////////////////////////////////////////////////////////////     44
	|ВЫБРАТЬ
	|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
	|ГДЕ                                      
	|	БНФОСчетаАналитическогоУчета.Код = ""6032281012""+&Номер+""00000"" 
	|;
	|////////////////////////////////////////////////////////////////////////////////     45
	|ВЫБРАТЬ
	|	БНФОСчетаАналитическогоУчета.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.БНФОСчетаАналитическогоУчета КАК БНФОСчетаАналитическогоУчета
	|ГДЕ
	|	БНФОСчетаАналитическогоУчета.Код = ""6032381012""+&Номер+""00000"" ///////////    46";
	Запрос1.УстановитьПараметр("Номер",		НовУслСС.Номер );
	МассРез = Запрос1.ВыполнитьПакет();
	МассивдляСоздания = новый Массив;
	//Сначала создадим счета
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 
	//ВыборкаИзМасРез = МассРез[0].Выбрать();
	
	ВыборкаИзМасРез = МассРез[0].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
		Стр.Вставить("_49401_1",ВыборкаИзМасРез.Ссылка);//0].Ссылка);
	Иначе 
		НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
		НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);НовыйСчетАналитики.Код = "4940181001"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
		НовыйСчетАналитики.ПроизвольныйСегмент = "1"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
		НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
		НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49401");
		НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
		НовыйСчетАналитики.Комментарий = "_49401_1";
		НовыйСчетАналитики.Записать();
		МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
	КонецЕсли;  				
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 
	ВыборкаИзМасРез = МассРез[1].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
		Стр.Вставить("_49402_1",ВыборкаИзМасРез.Ссылка);//1].Ссылка);
	Иначе 
		НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
		НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);НовыйСчетАналитики.Код = "4940281001"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
		НовыйСчетАналитики.ПроизвольныйСегмент = "1"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
		НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
		НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49402");
		НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
		НовыйСчетАналитики.Комментарий = "_49402_1";
		НовыйСчетАналитики.Записать();
		МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
	КонецЕсли; 
	
	ВыборкаИзМасРез = МассРез[2].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
		Стр.Вставить("_49403_1",ВыборкаИзМасРез.Ссылка);//2].Ссылка);
	Иначе 
		НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
		НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);НовыйСчетАналитики.Код = "4940381001"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
		НовыйСчетАналитики.ПроизвольныйСегмент = "1"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
		НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
		НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49403");
		НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
		НовыйСчетАналитики.Комментарий = "_49403_1";
		НовыйСчетАналитики.Записать();
		МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
	КонецЕсли;  
	
	ВыборкаИзМасРез = МассРез[3].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
		Стр.Вставить("_49404_1",ВыборкаИзМасРез.Ссылка);//3].Ссылка);
	Иначе 
		НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
		НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);НовыйСчетАналитики.Код = "4940481001"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
		НовыйСчетАналитики.ПроизвольныйСегмент = "1"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
		НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
		НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49404");
		НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
		НовыйСчетАналитики.Комментарий = "_49404_1";
		НовыйСчетАналитики.Записать();
		МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
	КонецЕсли;  
	
	ВыборкаИзМасРез = МассРез[4].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
		Стр.Вставить("_49405_1",ВыборкаИзМасРез.Ссылка);//4].Ссылка);
	Иначе 
		НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
		НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);НовыйСчетАналитики.Код = "4940581001"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
		НовыйСчетАналитики.ПроизвольныйСегмент = "1"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
		НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
		НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49405");
		НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
		НовыйСчетАналитики.Комментарий = "_49405_1";
		НовыйСчетАналитики.Записать();
		МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
	КонецЕсли;  
	
	ВыборкаИзМасРез = МассРез[5].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
		Стр.Вставить("_49406_1",ВыборкаИзМасРез.Ссылка);//5].Ссылка);
	Иначе 
		НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
		НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);НовыйСчетАналитики.Код = "4940681001"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
		НовыйСчетАналитики.ПроизвольныйСегмент = "1"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
		НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
		НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49406");
		НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
		НовыйСчетАналитики.Комментарий = "_49406_1";
		НовыйСчетАналитики.Записать();
		МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
	КонецЕсли;  
	
	ВыборкаИзМасРез = МассРез[6].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
		Стр.Вставить("_49407_1",ВыборкаИзМасРез.Ссылка);//6].Ссылка);
	Иначе 
		НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
		НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);НовыйСчетАналитики.Код = "4940781001"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
		НовыйСчетАналитики.ПроизвольныйСегмент = "1"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
		НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
		НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49407");
		НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
		НовыйСчетАналитики.Комментарий = "_49407_1";
		НовыйСчетАналитики.Записать();
		МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
	КонецЕсли;  
	
	ВыборкаИзМасРез = МассРез[7].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
		Стр.Вставить("_49408_1",ВыборкаИзМасРез.Ссылка);//7].Ссылка);
	Иначе 
		НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
		НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);НовыйСчетАналитики.Код = "4940881001"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
		НовыйСчетАналитики.ПроизвольныйСегмент = "1"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
		НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
		НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49408");
		НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
		НовыйСчетАналитики.Комментарий = "_49408_1";
		НовыйСчетАналитики.Записать();
		МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
	КонецЕсли;  
	
	ВыборкаИзМасРез = МассРез[8].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
		Стр.Вставить("_49409_1",ВыборкаИзМасРез.Ссылка);//8].Ссылка);
	Иначе 
		НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
		НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);НовыйСчетАналитики.Код = "4940981001"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
		НовыйСчетАналитики.ПроизвольныйСегмент = "1"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
		НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
		НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49409");
		НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
		НовыйСчетАналитики.Комментарий = "_49409_1";
		НовыйСчетАналитики.Записать();
		МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
	КонецЕсли;  
	
	ВыборкаИзМасРез = МассРез[9].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
		Стр.Вставить("_49410_1",ВыборкаИзМасРез.Ссылка);//9].Ссылка);
	Иначе 
		НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
		НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);НовыйСчетАналитики.Код = "4941081001"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
		НовыйСчетАналитики.ПроизвольныйСегмент = "1"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
		НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
		НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49410");
		НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
		НовыйСчетАналитики.Комментарий = "_49410_1";
		НовыйСчетАналитики.Записать();
		МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
	КонецЕсли;   
	
	ВыборкаИзМасРез = МассРез[10].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
		Стр.Вставить("_49401_2",ВыборкаИзМасРез.Ссылка);//10].Ссылка);
	Иначе 
		НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
		НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);НовыйСчетАналитики.Код = "4940181002"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
		НовыйСчетАналитики.ПроизвольныйСегмент = "2"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
		НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
		НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49401");
		НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
		НовыйСчетАналитики.Комментарий = "_49401_2";
		НовыйСчетАналитики.Записать();
		МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
	КонецЕсли;  
	
	ВыборкаИзМасРез = МассРез[11].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
		Стр.Вставить("_49402_2",ВыборкаИзМасРез.Ссылка);//11].Ссылка);
	Иначе 
		НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
		НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);НовыйСчетАналитики.Код = "4940281002"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
		НовыйСчетАналитики.ПроизвольныйСегмент = "2"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
		НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
		НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49402");
		НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
		НовыйСчетАналитики.Комментарий = "_49402_2";
		НовыйСчетАналитики.Записать();
		МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
	КонецЕсли;  
	
	ВыборкаИзМасРез = МассРез[12].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
		Стр.Вставить("_49403_2",ВыборкаИзМасРез.Ссылка);//12].Ссылка);
	Иначе 
		НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
		НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);НовыйСчетАналитики.Код = "4940381002"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
		НовыйСчетАналитики.ПроизвольныйСегмент = "2"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
		НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
		НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49403");
		НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
		НовыйСчетАналитики.Комментарий = "_49403_2";
		НовыйСчетАналитики.Записать();
		МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
	КонецЕсли;  
	
	ВыборкаИзМасРез = МассРез[13].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
		Стр.Вставить("_49404_2",ВыборкаИзМасРез.Ссылка);//13].Ссылка);
	Иначе 
		НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
		НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);НовыйСчетАналитики.Код = "4940481002"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
		НовыйСчетАналитики.ПроизвольныйСегмент = "2"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
		НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
		НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49404");
		НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
		НовыйСчетАналитики.Комментарий = "_49404_2";
		НовыйСчетАналитики.Записать();
		МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
	КонецЕсли;  
	
	ВыборкаИзМасРез = МассРез[14].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
		Стр.Вставить("_49405_2",ВыборкаИзМасРез.Ссылка);//14].Ссылка);
	Иначе 
		НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
		НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);НовыйСчетАналитики.Код = "4940581002"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
		НовыйСчетАналитики.ПроизвольныйСегмент = "2"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
		НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
		НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49405");
		НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
		НовыйСчетАналитики.Комментарий = "_49405_2";
		НовыйСчетАналитики.Записать();
		МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
	КонецЕсли;  
	
	ВыборкаИзМасРез = МассРез[15].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
		Стр.Вставить("_49406_2",ВыборкаИзМасРез.Ссылка);//15].Ссылка);
	Иначе 
		НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
		НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);НовыйСчетАналитики.Код = "4940681002"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
		НовыйСчетАналитики.ПроизвольныйСегмент = "2"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
		НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
		НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49406");
		НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
		НовыйСчетАналитики.Комментарий = "_49406_2";
		НовыйСчетАналитики.Записать();
		МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
	КонецЕсли;  
	
	ВыборкаИзМасРез = МассРез[16].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
		Стр.Вставить("_49407_2",ВыборкаИзМасРез.Ссылка);//16].Ссылка);
	Иначе 
		НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
		НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);НовыйСчетАналитики.Код = "4940781002"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
		НовыйСчетАналитики.ПроизвольныйСегмент = "2"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
		НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
		НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49407");
		НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
		НовыйСчетАналитики.Комментарий = "_49407_2";
		НовыйСчетАналитики.Записать();
		МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
	КонецЕсли;  
	
	ВыборкаИзМасРез = МассРез[17].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
		Стр.Вставить("_49408_2",ВыборкаИзМасРез.Ссылка);//17].Ссылка);
	Иначе 
		НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
		НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);НовыйСчетАналитики.Код = "4940881002"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
		НовыйСчетАналитики.ПроизвольныйСегмент = "2"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
		НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
		НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49408");
		НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
		НовыйСчетАналитики.Комментарий = "_49408_2";
		НовыйСчетАналитики.Записать();
		МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
	КонецЕсли;  
	
	ВыборкаИзМасРез = МассРез[18].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
		Стр.Вставить("_49409_2",ВыборкаИзМасРез.Ссылка);//18].Ссылка);
	Иначе 
		НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
		НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);НовыйСчетАналитики.Код = "4940981002"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
		НовыйСчетАналитики.ПроизвольныйСегмент = "2"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
		НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
		НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49409");
		НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
		НовыйСчетАналитики.Комментарий = "_49409_2";
		НовыйСчетАналитики.Записать();
		МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
	КонецЕсли;  
	
	ВыборкаИзМасРез = МассРез[19].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
		Стр.Вставить("_49410_2",ВыборкаИзМасРез.Ссылка);//19].Ссылка);
	Иначе 
		НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
		НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);НовыйСчетАналитики.Код = "4941081002"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
		НовыйСчетАналитики.ПроизвольныйСегмент = "2"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
		НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
		НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49410");
		НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
		НовыйСчетАналитики.Комментарий = "_49410_2";
		НовыйСчетАналитики.Записать();
		МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
	КонецЕсли;   
	
	ВыборкаИзМасРез = МассРез[20].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
		Стр.Вставить("_60322_1",ВыборкаИзМасРез.Ссылка);//20].Ссылка);
	Иначе 
		НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
		НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);НовыйСчетАналитики.Код = "6032281000"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
		НовыйСчетАналитики.ПроизвольныйСегмент = "0"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
		НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
		НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
		НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
		НовыйСчетАналитики.Комментарий = "_60322_1";
		НовыйСчетАналитики.Записать();
		МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
	КонецЕсли;    
	
	ВыборкаИзМасРез = МассРез[21].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
		Стр.Вставить("_60322_2",ВыборкаИзМасРез.Ссылка);//21].Ссылка);
	Иначе 
		НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
		НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);НовыйСчетАналитики.Код = "6032281002"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
		НовыйСчетАналитики.ПроизвольныйСегмент = "2"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
		НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
		НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
		НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
		НовыйСчетАналитики.Комментарий = "_60322_2";
		НовыйСчетАналитики.Записать();
		МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
	КонецЕсли;     
	
	ВыборкаИзМасРез = МассРез[22].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
		Стр.Вставить("_60322_3",ВыборкаИзМасРез.Ссылка);//22].Ссылка);
	Иначе 
		НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
		НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);НовыйСчетАналитики.Код = "6032281003"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
		НовыйСчетАналитики.ПроизвольныйСегмент = "3"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
		НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
		НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
		НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
		НовыйСчетАналитики.Комментарий = "_60322_3";
		НовыйСчетАналитики.Записать();
		МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
	КонецЕсли;     
	
	ВыборкаИзМасРез = МассРез[23].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
		Стр.Вставить("_60322_4",ВыборкаИзМасРез.Ссылка);//23].Ссылка);
	Иначе 
		НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
		НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);НовыйСчетАналитики.Код = "6032281004"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
		НовыйСчетАналитики.ПроизвольныйСегмент = "4"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
		НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
		НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
		НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
		НовыйСчетАналитики.Комментарий = "_60322_4";
		НовыйСчетАналитики.Записать();
		МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
	КонецЕсли;     
	
	ВыборкаИзМасРез = МассРез[24].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
		Стр.Вставить("_60322_5",ВыборкаИзМасРез.Ссылка);//24].Ссылка);
	Иначе 
		НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
		НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);НовыйСчетАналитики.Код = "6032281005"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
		НовыйСчетАналитики.ПроизвольныйСегмент = "5"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
		НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
		НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
		НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
		НовыйСчетАналитики.Комментарий = "_60322_5";
		НовыйСчетАналитики.Записать();
		МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
	КонецЕсли;     
	
	ВыборкаИзМасРез = МассРез[25].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
		Стр.Вставить("_60322_6",ВыборкаИзМасРез.Ссылка);//25].Ссылка);
	Иначе 
		НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
		НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);НовыйСчетАналитики.Код = "6032281006"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
		НовыйСчетАналитики.ПроизвольныйСегмент = "6"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
		НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
		НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
		НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
		НовыйСчетАналитики.Комментарий = "_60322_6";
		НовыйСчетАналитики.Записать();
		МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
	КонецЕсли;     
	
	ВыборкаИзМасРез = МассРез[26].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
		Стр.Вставить("_60322_7",ВыборкаИзМасРез.Ссылка);//26].Ссылка);
	Иначе 
		НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
		НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);НовыйСчетАналитики.Код = "6032281007"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
		НовыйСчетАналитики.ПроизвольныйСегмент = "7"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
		НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
		НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
		НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
		НовыйСчетАналитики.Комментарий = "_60322_7";
		НовыйСчетАналитики.Записать();
		МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
	КонецЕсли;     
	
	ВыборкаИзМасРез = МассРез[27].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
		Стр.Вставить("_60322_8",ВыборкаИзМасРез.Ссылка);//27].Ссылка);
	Иначе 
		НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
		НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);НовыйСчетАналитики.Код = "6032281008"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
		НовыйСчетАналитики.ПроизвольныйСегмент = "8"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
		НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
		НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
		НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
		НовыйСчетАналитики.Комментарий = "_60322_8";
		НовыйСчетАналитики.Записать();
		МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
	КонецЕсли;    
	
	ВыборкаИзМасРез = МассРез[28].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
		Стр.Вставить("_60322_9",ВыборкаИзМасРез.Ссылка);//28].Ссылка);
	Иначе 
		НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
		НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);НовыйСчетАналитики.Код = "6032281009"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
		НовыйСчетАналитики.ПроизвольныйСегмент = "9"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
		НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
		НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
		НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
		НовыйСчетАналитики.Комментарий = "_60322_9";
		НовыйСчетАналитики.Записать();
		МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
	КонецЕсли;     
	
	ВыборкаИзМасРез = МассРез[29].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
		Стр.Вставить("_60323_0",ВыборкаИзМасРез.Ссылка);//29].Ссылка);
	Иначе 
		НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
		НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);НовыйСчетАналитики.Код = "6032381000"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
		НовыйСчетАналитики.ПроизвольныйСегмент = "0"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
		НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
		НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
		НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
		НовыйСчетАналитики.Комментарий = "_60323_0";
		НовыйСчетАналитики.Записать();
		МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
	КонецЕсли;     
	
	ВыборкаИзМасРез = МассРез[30].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
		Стр.Вставить("_60323_2",ВыборкаИзМасРез.Ссылка);//30].Ссылка);
	Иначе 
		НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
		НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);НовыйСчетАналитики.Код = "6032381002"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
		НовыйСчетАналитики.ПроизвольныйСегмент = "2"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
		НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
		НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
		НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
		НовыйСчетАналитики.Комментарий = "_60323_2";
		НовыйСчетАналитики.Записать();
		МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
	КонецЕсли;     
	
	ВыборкаИзМасРез = МассРез[31].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
		Стр.Вставить("_60323_3",ВыборкаИзМасРез.Ссылка);//31].Ссылка);
	Иначе 
		НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
		НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);НовыйСчетАналитики.Код = "6032381003"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
		НовыйСчетАналитики.ПроизвольныйСегмент = "3"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
		НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
		НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
		НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
		НовыйСчетАналитики.Комментарий = "_60323_3";
		НовыйСчетАналитики.Записать();
		МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
	КонецЕсли;     
	
	ВыборкаИзМасРез = МассРез[32].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
		Стр.Вставить("_60323_4",ВыборкаИзМасРез.Ссылка);//32].Ссылка);
	Иначе 
		НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
		НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);НовыйСчетАналитики.Код = "6032381004"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
		НовыйСчетАналитики.ПроизвольныйСегмент = "4"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
		НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
		НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
		НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
		НовыйСчетАналитики.Комментарий = "_60323_4";
		НовыйСчетАналитики.Записать();
		МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
	КонецЕсли;     
	
	ВыборкаИзМасРез = МассРез[33].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
		Стр.Вставить("_60323_5",ВыборкаИзМасРез.Ссылка);//33].Ссылка);
	Иначе 
		НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
		НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);НовыйСчетАналитики.Код = "6032381005"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
		НовыйСчетАналитики.ПроизвольныйСегмент = "5"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
		НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
		НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
		НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
		НовыйСчетАналитики.Комментарий = "_60323_5";
		НовыйСчетАналитики.Записать();
		МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
	КонецЕсли;     
	ВыборкаИзМасРез = МассРез[34].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
		Стр.Вставить("_60323_6",ВыборкаИзМасРез.Ссылка);//34].Ссылка);
	Иначе 
		НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
		НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);НовыйСчетАналитики.Код = "6032381006"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
		НовыйСчетАналитики.ПроизвольныйСегмент = "6"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
		НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
		НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
		НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
		НовыйСчетАналитики.Комментарий = "_60323_6";
		НовыйСчетАналитики.Записать();
		МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
	КонецЕсли;     
	ВыборкаИзМасРез = МассРез[35].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
		Стр.Вставить("_60323_7",ВыборкаИзМасРез.Ссылка);//35].Ссылка);
	Иначе 
		НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
		НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);НовыйСчетАналитики.Код = "6032381007"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
		НовыйСчетАналитики.ПроизвольныйСегмент = "7"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
		НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
		НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
		НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
		НовыйСчетАналитики.Комментарий = "_60323_7";
		НовыйСчетАналитики.Записать();
		МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
	КонецЕсли;     
	ВыборкаИзМасРез = МассРез[36].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
		Стр.Вставить("_60323_8",ВыборкаИзМасРез.Ссылка);//36].Ссылка);
	Иначе 
		НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
		НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);НовыйСчетАналитики.Код = "6032381008"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
		НовыйСчетАналитики.ПроизвольныйСегмент = "8"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
		НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
		НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
		НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
		НовыйСчетАналитики.Комментарий = "_60323_8";
		НовыйСчетАналитики.Записать();
		МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
	КонецЕсли;     
	ВыборкаИзМасРез = МассРез[37].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
		Стр.Вставить("_60323_9",ВыборкаИзМасРез.Ссылка);//37].Ссылка);
	Иначе 
		НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
		НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);НовыйСчетАналитики.Код = "6032381009"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
		НовыйСчетАналитики.ПроизвольныйСегмент = "9"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
		НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
		НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
		НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
		НовыйСчетАналитики.Комментарий = "_60323_9";
		НовыйСчетАналитики.Записать();
		МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
	КонецЕсли;      
	ВыборкаИзМасРез = МассРез[38].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
		Стр.Вставить("_60324_1",ВыборкаИзМасРез.Ссылка);//38].Ссылка);
	Иначе 
		НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
		НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);НовыйСчетАналитики.Код = "6032481000"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
		НовыйСчетАналитики.ПроизвольныйСегмент = "0"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
		НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
		НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60324");
		НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
		НовыйСчетАналитики.Комментарий = "_60324_1";
		НовыйСчетАналитики.Записать();
		МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
	КонецЕсли; 
	ВыборкаИзМасРез = МассРез[39].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
		Стр.Вставить("_61217_1",ВыборкаИзМасРез.Ссылка);//39].Ссылка);
	Иначе 
		НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
		НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);НовыйСчетАналитики.Код = "6121781001"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
		НовыйСчетАналитики.ПроизвольныйСегмент = "1"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
		НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
		НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("61217");
		НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
		НовыйСчетАналитики.Комментарий = "_61217_1";
		НовыйСчетАналитики.Записать();
		МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
	КонецЕсли;  
	ВыборкаИзМасРез = МассРез[40].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
		Стр.Вставить("_61217_2",ВыборкаИзМасРез.Ссылка);//40].Ссылка);
	Иначе 
		НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
		НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);НовыйСчетАналитики.Код = "6121781002"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
		НовыйСчетАналитики.ПроизвольныйСегмент = "2"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
		НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
		НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("61217");
		НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
		НовыйСчетАналитики.Комментарий = "_61217_2";
		НовыйСчетАналитики.Записать();
		МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
	КонецЕсли;  
	ВыборкаИзМасРез = МассРез[41].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
		Стр.Вставить("_61217_3",ВыборкаИзМасРез.Ссылка);//41].Ссылка);
	Иначе 
		НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
		НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);НовыйСчетАналитики.Код = "6121781003"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
		НовыйСчетАналитики.ПроизвольныйСегмент = "3"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
		НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
		НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("61217");
		НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
		НовыйСчетАналитики.Комментарий = "_61217_3";
		НовыйСчетАналитики.Записать();
		МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
	КонецЕсли;  
	
	//**********************************
	
	ВыборкаИзМасРез = МассРез[42].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
		Стр.Вставить("_49401_3",ВыборкаИзМасРез.Ссылка);//0].Ссылка);
	Иначе 
		НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
		НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
		НовыйСчетАналитики.Код = "4940181003"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
		НовыйСчетАналитики.ПроизвольныйСегмент = "3"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
		НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
		НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49401");
		НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
		НовыйСчетАналитики.Комментарий = "_49401_3";
		НовыйСчетАналитики.Записать();
		МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
	КонецЕсли;  				
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 
	ВыборкаИзМасРез = МассРез[43].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
		Стр.Вставить("_49402_3",ВыборкаИзМасРез.Ссылка);//1].Ссылка);
	Иначе 
		НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
		НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
		НовыйСчетАналитики.Код = "4940281003"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
		НовыйСчетАналитики.ПроизвольныйСегмент = "3"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
		НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
		НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49402");
		НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
		НовыйСчетАналитики.Комментарий = "_49402_3";
		НовыйСчетАналитики.Записать();
		МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
	КонецЕсли; 
	
	ВыборкаИзМасРез = МассРез[44].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
		Стр.Вставить("_49410_3",ВыборкаИзМасРез.Ссылка);//2].Ссылка);
	Иначе 
		НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
		НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
		НовыйСчетАналитики.Код = "4941081003"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
		НовыйСчетАналитики.ПроизвольныйСегмент = "3"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
		НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
		НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49410");
		НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
		НовыйСчетАналитики.Комментарий = "_49410_3";
		НовыйСчетАналитики.Записать();
		МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
	КонецЕсли;  
	
	
	
	//6032281012хххххххххх00000
	
	ВыборкаИзМасРез = МассРез[44].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
		Стр.Вставить("_60322_12",ВыборкаИзМасРез.Ссылка);//2].Ссылка);
	Иначе 
		НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
		НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
		НовыйСчетАналитики.Код = "4941081003"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
		НовыйСчетАналитики.ПроизвольныйСегмент = "3"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
		НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
		НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49410");
		НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
		НовыйСчетАналитики.Комментарий = "_60322_12";
		НовыйСчетАналитики.Записать();
		МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
	КонецЕсли;
	
	
	
	
	
	ВыборкаИзМасРез = МассРез[44].Выбрать(); Если ВыборкаИзМасРез.Следующий()   Тогда
		Стр.Вставить("_60322_12",ВыборкаИзМасРез.Ссылка);//2].Ссылка);
	Иначе 
		НовыйСчетАналитики = Справочники.БНФОСчетаАналитическогоУчета.СоздатьЭлемент();
		НовыйСчетАналитики.Наименование = "Расчеты с "+Строка(Контрагент)+" по договору "+Строка(НовУслСС.Номер);
		НовыйСчетАналитики.Код = "4941081003"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Организация = Справочники.Организации.НайтиПоИНН("7838492459");
		НовыйСчетАналитики.ПроизвольныйСегмент = "3"+НовУслСС.Номер+"00000";
		НовыйСчетАналитики.Валюта =  Справочники.Валюты.НайтиПоКоду("643");	
		НовыйСчетАналитики.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
		НовыйСчетАналитики.Владелец = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49410");
		НовыйСчетАналитики.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
		НовыйСчетАналитики.Комментарий = "_49410_3";
		НовыйСчетАналитики.Записать();
		МассивдляСоздания.Добавить(НовыйСчетАналитики.Ссылка);
	КонецЕсли;
	//**********************************
	
	
	
	Для каждого СчетУчетаДляОткрытия Из МассивдляСоздания Цикл
		Стр.Вставить(СчетУчетаДляОткрытия.Комментарий,СчетУчетаДляОткрытия);
	КонецЦикла;
	
	НачатьТранзакцию();
	Попытка
		УстановитьПривилегированныйРежим(Истина);
		
		Если МассивдляСоздания.Количество() > 0 Тогда
			ДокументОбъект = Документы.БНФООткрытиеСчетовАналитическогоУчета.СоздатьДокумент();
			ДокументОбъект.ПризнакДоверительногоУправления = Перечисления.БНФОПризнакиДоверительногоУправления.СобственныеОперации;
			ДокументОбъект.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Займы выданные");
			ДокументОбъект.Организация  = Справочники.Организации.НайтиПоИНН("7838492459");
			ДокументОбъект.Валюта = Справочники.Валюты.НайтиПоКоду("643");									
			ДокументОбъект.Дата =  ДатаКонтракта;
			Нстр  =  ДокументОбъект.ДополнительныеГруппыФинансовогоУчета.Добавить();
			Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49407-49408 Корректировки по займам выданным ИП");
			Нстр  =  ДокументОбъект.ДополнительныеГруппыФинансовогоУчета.Добавить();
			Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49402 Начисленные проценты по займам выданным ИП");
			Нстр  =  ДокументОбъект.ДополнительныеГруппыФинансовогоУчета.Добавить();
			Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Начисленные прочие доходы по займам выданным");
			Нстр  =  ДокументОбъект.ДополнительныеГруппыФинансовогоУчета.Добавить();
			Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Начисленные расходы по займам выданным");
			Нстр  =  ДокументОбъект.ДополнительныеГруппыФинансовогоУчета.Добавить();
			Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Расчеты по процентам по займам выданным");
			Нстр  =  ДокументОбъект.ДополнительныеГруппыФинансовогоУчета.Добавить();
			Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Расчеты по прочим доходам по займам выданным");
			Нстр  =  ДокументОбъект.ДополнительныеГруппыФинансовогоУчета.Добавить();
			Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Расчеты по расходам по займам выданным");
			Нстр  =  ДокументОбъект.ДополнительныеГруппыФинансовогоУчета.Добавить();
			Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49401 Займы выданные ИП");
			Нстр  =  ДокументОбъект.ДополнительныеГруппыФинансовогоУчета.Добавить();
			Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49403 Начисленные прочие доходы по займам выданным ИП");
			Нстр  =  ДокументОбъект.ДополнительныеГруппыФинансовогоУчета.Добавить();
			Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Расчеты по расходам по займам выданным");
			Нстр  =  ДокументОбъект.ДополнительныеГруппыФинансовогоУчета.Добавить();
			Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
			//Нстр  =  ДокументОбъект.ДополнительныеГруппыФинансовогоУчета.Добавить();
			//Нстр.ГруппаФинансовогоУчета =  Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
			//ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
			Для каждого СчетУчетаДляОткрытия Из МассивдляСоздания Цикл
				#Область  область49401_09_1
				Если СчетУчетаДляОткрытия.Комментарий = "_49401_1" Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//0;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//0;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000023");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//0;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49401 Займы выданные ИП");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49401");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//0;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Срочная, Займы выданные";
				КонецЕсли; 
				Если СчетУчетаДляОткрытия.Комментарий = "_49402_1" Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//3;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//3;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000023");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//3;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49402 Начисленные проценты по займам выданным ИП");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49402");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//3;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Срочная, Начисленные проценты по займам выданным";
				КонецЕсли; 
				Если СчетУчетаДляОткрытия.Комментарий = "_49403_1" Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//4;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//4;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000023");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//4;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49403 Начисленные прочие доходы по займам выданным ИП");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49403");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//4;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Срочная, Начисленные прочие доходы по займам выданным";
				КонецЕсли;	 
				Если СчетУчетаДляОткрытия.Комментарий = "_49404_1" Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//7;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//7;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000023");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//7;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49404 Расчеты по прочим доходам по займам выданным ИП");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49404");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//7;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Срочная,Расчеты по прочим доходам по займам выданным";
				КонецЕсли; 
				Если СчетУчетаДляОткрытия.Комментарий = "_49405_1" Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//5;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//5;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000023");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//5;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49405 Начисленные расходы по займам выданным ИП");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49405");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//5;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Срочная, Начисленные расходы по займам выданным";
				КонецЕсли; 
				
				Если СчетУчетаДляОткрытия.Комментарий = "_49406_1" Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//8;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//8;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000023");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//8;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49406 Расчеты по расходам по займам выданным ИП");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49406");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//8;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Срочная, Расчеты по расходам по займам выданным";
				КонецЕсли; 
				Если СчетУчетаДляОткрытия.Комментарий = "_49407_1"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//1;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//1;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000023");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//1;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаАктивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49407-49408 Корректировки по займам выданным ИП");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49407");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//1;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Срочная, Корректировки по займам выданным";
				КонецЕсли; 
				Если СчетУчетаДляОткрытия.Комментарий = "_49408_1"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//2;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//2;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000023");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//2;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаПассивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49407-49408 Корректировки по займам выданным ИП");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49408");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//2;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Срочная, Корректировки по займам выданным";
				КонецЕсли; 
				Если СчетУчетаДляОткрытия.Комментарий = "_49409_1" Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//6;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//6;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000023");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//6;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49409 Расчеты по процентам по займам выданным ИП");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49409");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//6;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Срочная, Расчеты по процентам по займам выданным";
				КонецЕсли; 
				#КонецОбласти	 
				#Область область49401_09_2
				
				Если СчетУчетаДляОткрытия.Комментарий = "_49401_2"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//    КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//    КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000024");  
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034"); 
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49401 Займы выданные ИП");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49401");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000024"))+", Займы выданные";
				КонецЕсли; 
				
				Если СчетУчетаДляОткрытия.Комментарий = "_49402_2"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000024");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49402 Начисленные проценты по займам выданным ИП");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49402");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000024"))+", Начисленные проценты по займам выданным";
				КонецЕсли; 
				
				Если не СчетУчетаДляОткрытия.Комментарий = "_49403_2"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000024");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49403 Начисленные прочие доходы по займам выданным ИП");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49403");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000024"))+", Начисленные прочие доходы по займам выданным";
				КонецЕсли; 
				Если СчетУчетаДляОткрытия.Комментарий = "_49404_2"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;// КлючСтроки;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000024");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49404 Расчеты по прочим доходам по займам выданным ИП");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49404");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;// КлючСтроки;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000024"))+",Расчеты по прочим доходам по займам выданным";
				КонецЕсли; 
				Если СчетУчетаДляОткрытия.Комментарий = "_49405_2"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000024");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49405 Начисленные расходы по займам выданным ИП");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49405");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000024"))+", Начисленные расходы по займам выданным";
				КонецЕсли; 
				
				Если СчетУчетаДляОткрытия.Комментарий = "_49406_2"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;// КлючСтроки;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;// КлючСтроки;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000024");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49406 Расчеты по расходам по займам выданным ИП");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49406");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;// КлючСтроки;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000024"))+", Расчеты по расходам по займам выданным";
				КонецЕсли;
				
				Если СчетУчетаДляОткрытия.Комментарий = "_49407_2" Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000024");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаАктивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49407-49408 Корректировки по займам выданным ИП");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49407");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000024"))+", Корректировки по займам выданным";
				КонецЕсли; 
				Если СчетУчетаДляОткрытия.Комментарий = "_49408_2"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000024");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаПассивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49407-49408 Корректировки по займам выданным ИП");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49408");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000024"))+", Корректировки по займам выданным";
				КонецЕсли; 
				Если СчетУчетаДляОткрытия.Комментарий = "_49409_2"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000024");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49409 Расчеты по процентам по займам выданным ИП");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49409");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//ДокументОбъект.ВидыАналитик.Количество();
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000024"))+", Расчеты по процентам по займам выданным";
				КонецЕсли; 
				
				
				#КонецОбласти	 
				#Область область48810_1_и_2
				Если СчетУчетаДляОткрытия.Комментарий = "_49410_1"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//9;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//9;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоКоду("0000000034");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000025");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//9;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000035");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49410 Резервы под обесценение по займам выданным ИП");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48810");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//9;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Беспроблемная, Резервы под обесценение по займам выданным";
				КонецЕсли;
				Если СчетУчетаДляОткрытия.Комментарий = "_49410_2" Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//9;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//9;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоКоду("0000000034");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000026");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//9;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000035");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49410 Резервы под обесценение по займам выданным ИП");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("48810");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//9;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+" Договор "+Строка(НомерДоговора)+", вид задолженности: Беспроблемная, Резервы под обесценение по займам выданным";
				КонецЕсли;
				#КонецОбласти
				#Область Область60324 
				Если СчетУчетаДляОткрытия.Комментарий = "_60324_1"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//15;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//15;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");//ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000028");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//15;
					
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.Резервы;
					//Нстр.СчетАналитическогоУчета =  НСчет;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60324");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//15;
					Нстр.ДатаОткрытия = ТекущаяДата();
					Нстр.Наименование = "Резервы  "+Строка(ФИО)+" по договору "+Строка(НомерДоговора);
				КонецЕсли;
				#КонецОбласти
				#Область область60322_23 
				Если СчетУчетаДляОткрытия.Комментарий = "_60322_1"  Тогда   
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000028");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаПассивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр.ДатаОткрытия = ТекущаяДата();
					Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора);
				КонецЕсли; 
				Если СчетУчетаДляОткрытия.Комментарий = "_60323_1"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000028");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаАктивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр.ДатаОткрытия = ТекущаяДата();
					Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора);
				КонецЕсли;
				#КонецОбласти
				#Область область60322_23_000000029 
				Если СчетУчетаДляОткрытия.Комментарий = "_60322_2"   Тогда   
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000029");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаПассивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр.ДатаОткрытия = ТекущаяДата();
					Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000029"));
				КонецЕсли; 
				Если СчетУчетаДляОткрытия.Комментарий = "_60323_2" Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000029");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаАктивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр.ДатаОткрытия = ТекущаяДата();
					Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000029"));
				КонецЕсли;
				#КонецОбласти
				#Область  область60322_23_000000030 
				Если СчетУчетаДляОткрытия.Комментарий = "_60322_3"  Тогда   
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000030");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаПассивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр.ДатаОткрытия = ТекущаяДата();
					Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000030"));
				КонецЕсли; 
				Если СчетУчетаДляОткрытия.Комментарий = "_60323_3"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000030");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаАктивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр.ДатаОткрытия = ТекущаяДата();
					Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000030"));
				КонецЕсли;
				#КонецОбласти
				#Область область60322_23_000000031 
				Если СчетУчетаДляОткрытия.Комментарий = "_60322_4"  Тогда   
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000031");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаПассивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр.ДатаОткрытия = ТекущаяДата();
					Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000031"));
				КонецЕсли; 
				Если СчетУчетаДляОткрытия.Комментарий = "_60323_4"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000031");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаАктивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр.ДатаОткрытия = ТекущаяДата();
					Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000031"));
				КонецЕсли;
				#КонецОбласти
				#Область  область60322_23_000000032 
				Если СчетУчетаДляОткрытия.Комментарий = "_60322_5"  Тогда   
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000032");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаПассивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр.ДатаОткрытия = ТекущаяДата();
					Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000032"));
				КонецЕсли; 
				Если СчетУчетаДляОткрытия.Комментарий = "_60323_5"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000032");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаАктивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр.ДатаОткрытия = ТекущаяДата();
					Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000032"));
				КонецЕсли;
				#КонецОбласти
				#Область  область60322_23_000000033 
				Если СчетУчетаДляОткрытия.Комментарий = "_60322_6"  Тогда   
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000033");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаПассивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр.ДатаОткрытия = ТекущаяДата();
					Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000033"));
				КонецЕсли; 
				Если СчетУчетаДляОткрытия.Комментарий = "_60323_6"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000033");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаАктивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр.ДатаОткрытия = ТекущаяДата();
					Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000033"));
				КонецЕсли;
				#КонецОбласти
				#Область  область60322_23_000000034 
				Если СчетУчетаДляОткрытия.Комментарий = "_60322_7"  Тогда   
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000034");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаПассивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр.ДатаОткрытия = ТекущаяДата();
					Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000034"));
				КонецЕсли; 
				Если СчетУчетаДляОткрытия.Комментарий = "_60323_7"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000034");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаАктивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр.ДатаОткрытия = ТекущаяДата();
					Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000034"));
				КонецЕсли;
				#КонецОбласти
				#Область  область60322_23_000000035 
				Если СчетУчетаДляОткрытия.Комментарий = "_60322_8" Тогда   
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000035");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаПассивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр.ДатаОткрытия = ТекущаяДата();
					Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000035"));
				КонецЕсли; 
				Если СчетУчетаДляОткрытия.Комментарий = "_60322_8"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000035");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаАктивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр.ДатаОткрытия = ТекущаяДата();
					Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000035"));
				КонецЕсли;
				#КонецОбласти
				#Область  область60322_23_000000036 
				Если СчетУчетаДляОткрытия.Комментарий = "_60322_9"  Тогда   
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000036");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаПассивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60322");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//11;
					Нстр.ДатаОткрытия = ТекущаяДата();
					Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000036"));
				КонецЕсли; 
				Если СчетУчетаДляОткрытия.Комментарий = "_60323_9"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид требования");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000036");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчетаАктивный;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000007");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Резервы под обесценение по займам выданным");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("60323");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр.ДатаОткрытия = ТекущаяДата();
					Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000036"));
				КонецЕсли;
				#КонецОбласти
				#Область область61217_000000085 
				Если СчетУчетаДляОткрытия.Комментарий = "_61217_1"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид выбытия займов");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000085");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000033");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Выбытие займов");
					
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("61217");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр.ДатаОткрытия = ТекущаяДата();
					Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000036"));
				КонецЕсли;
				#КонецОбласти
				#Область Область61217_000000086 
				Если СчетУчетаДляОткрытия.Комментарий = "_61217_2"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =  ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид выбытия займов");
					
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000086");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000033");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Выбытие займов");
					
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("61217");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр.ДатаОткрытия = ТекущаяДата();
					Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000036"));
				КонецЕсли;
				#КонецОбласти
				#Область Область61217_000000087 
				Если СчетУчетаДляОткрытия.Комментарий = "_61217_3"  Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид выбытия займов");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000087");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000033");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("Выбытие займов");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("61217");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//10;
					Нстр.ДатаОткрытия = ТекущаяДата();
					Нстр.Наименование = "Расчеты с "+Строка(ФИО)+" по договору "+Строка(НомерДоговора)+" Вид "+Строка(Справочники.БНФОСубконто.НайтиПоКоду("000000036"));
				КонецЕсли;
				#КонецОбласти
				
				
				
				#Область  область49401_02_10_3
				Если СчетУчетаДляОткрытия.Комментарий = "_49401_3" Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//0;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//0;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000089");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//0;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49401 Займы выданные ИП");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49401");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//0;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+"ИП Договор "+Строка(НомерДоговора)+", вид задолженности: Дефолт, Займы выданные";
				КонецЕсли; 
				Если СчетУчетаДляОткрытия.Комментарий = "_49402_3" Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//3;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//3;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000089");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//3;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49402 Начисленные проценты по займам выданным ИП");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49402");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//3;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+"ИП Договор "+Строка(НомерДоговора)+", вид задолженности: Дефолт, Начисленные проценты по займам выданным";
				КонецЕсли; 
				Если СчетУчетаДляОткрытия.Комментарий = "_49410_3" Тогда
					КлючСтроки = ДокументОбъект.СчетаУчета.Количество();
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.Контрагент;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Контрагент;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//4;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.ДоговорКредитаДепозита;
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = НовУслСС;
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//4;
					Нстр  =  ДокументОбъект.ВидыАналитик.Добавить();
					Нстр.ВидАналитики =   ПланыВидовХарактеристик.БНФОВидыАналитикСчетовАналитическогоУчета.НайтиПоНаименованию("Вид задолженности");
					Нстр.КлючеваяАналитика = Истина;
					Нстр.ЗаполнятьОбязательно = Ложь;
					Нстр.ЗначениеАналитики = Справочники.БНФОСубконто.НайтиПоКоду("000000089");
					Нстр.ЭтоОбъект = Истина;
					Нстр.КлючСтроки = КлючСтроки;//4;
					Нстр  =  ДокументОбъект.СчетаУчета.Добавить();
					Нстр.ВидСчетаУчета = Перечисления.БНФОВидыСчетовРеглУчета.СчетУчета;
					Нстр.ШаблонОткрытия = Справочники.БНФОШаблоныОткрытияСчетовАналитическогоУчета.НайтиПоКоду("000000034");
					Нстр.ГруппаФинансовогоУчета = Справочники.БНФОГруппыФинансовогоУчетаФинансовыхИнструментов.НайтиПоНаименованию("49410 Резервы под обесценение по займам выданным ИП");
					Нстр.СчетУчета = ПланыСчетов.БНФОБанковский.НайтиПоКоду("49403");
					Нстр.ОткрыватьСчет = Истина;
					Нстр.КлючСтроки = КлючСтроки;//4;
					Нстр.ДатаОткрытия = ДатаКонтракта;
					Нстр.Наименование = Строка(ФИО)+"ИП Договор "+Строка(НомерДоговора)+", вид задолженности: Дефолт, Начисленные прочие доходы по займам выданным";
				КонецЕсли;	 
				#КонецОбласти
				
				
				
				
				//
				Нстр.СчетАналитическогоУчета = СчетУчетаДляОткрытия; 
			КонецЦикла; 
			//			Если ДокументОбъект.СчетаУчета.Количество() > 0 Тогда
			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
			//			КонецЕсли; 
		КонецЕсли; 
		ЗафиксироватьТранзакцию();
		УстановитьПривилегированныйРежим(Ложь);	
	Исключение
		Text = "Ошибка открытия счетов!!!!!!!!!!!"+Символы.ПС;
		Text = Text +"Контрагент: "+ФИО+Символы.ПС;
		Text = Text +"Договор №: "+НомерДоговора+Символы.ПС;
		Text = Text +"Следующие Счета созданы но не открыты: "+Символы.ПС;
		Для каждого СчетУчетаДляОткрытия Из МассивдляСоздания Цикл
			Text = Text + СчетУчетаДляОткрытия.Код + Символы.ПС;
		КонецЦикла;
		Text = Text +"Описание ошибки: "+Символы.ПС;
		Text = Text + ОписаниеОшибки(); 
		ОтменитьТранзакцию();
		УстановитьПривилегированныйРежим(Ложь);	
		pcru_ex_Почта.Сообщить_об_ошибке(Text);
		//ВызватьИсключение  Text;
	КонецПопытки;
	//Иначе 
	//	Стр.Вставить("УсловиеЗайма",Справочники.БНФОДоговорыКредитовИДепозитов.ПустаяСсылка());
	//	Стр.Вставить("Контрагент",Справочники.Контрагенты.ПустаяСсылка());
	//	Стр.Вставить("ДоговорКонтрагента",Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
	//КонецЕсли;
	//Стр.Вставить("_49401_1",ПолучитьСчетКонтрактаПоАналитике("49401",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000023")));
	//Стр.Вставить("_49402_1",ПолучитьСчетКонтрактаПоАналитике("49402",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000023")));
	//Стр.Вставить("_49403_1",ПолучитьСчетКонтрактаПоАналитике("49403",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000023")));
	//Стр.Вставить("_49404_1",ПолучитьСчетКонтрактаПоАналитике("49404",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000023")));
	//Стр.Вставить("_49405_1",ПолучитьСчетКонтрактаПоАналитике("49405",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000023")));
	//Стр.Вставить("_49406_1",ПолучитьСчетКонтрактаПоАналитике("49406",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000023")));
	//Стр.Вставить("_49407_1",ПолучитьСчетКонтрактаПоАналитике("49407",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000023")));
	//Стр.Вставить("_49408_1",ПолучитьСчетКонтрактаПоАналитике("49408",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000023")));
	//Стр.Вставить("_49409_1",ПолучитьСчетКонтрактаПоАналитике("49409",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000023")));
	//Стр.Вставить("_49410_1",ПолучитьСчетКонтрактаПоАналитике("49410",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000025")));
	//Стр.Вставить("_49401_2",ПолучитьСчетКонтрактаПоАналитике("49401",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000024")));
	//Стр.Вставить("_49402_2",ПолучитьСчетКонтрактаПоАналитике("49402",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000024")));
	//Стр.Вставить("_49403_2",ПолучитьСчетКонтрактаПоАналитике("49403",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000024")));
	//Стр.Вставить("_49404_2",ПолучитьСчетКонтрактаПоАналитике("49404",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000024")));
	//Стр.Вставить("_49405_2",ПолучитьСчетКонтрактаПоАналитике("49405",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000024")));
	//Стр.Вставить("_49406_2",ПолучитьСчетКонтрактаПоАналитике("49406",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000024")));
	//Стр.Вставить("_49407_2",ПолучитьСчетКонтрактаПоАналитике("49407",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000024")));
	//Стр.Вставить("_49408_2",ПолучитьСчетКонтрактаПоАналитике("49408",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000024")));
	//Стр.Вставить("_49409_2",ПолучитьСчетКонтрактаПоАналитике("49409",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000024")));
	//Стр.Вставить("_49410_2",ПолучитьСчетКонтрактаПоАналитике("49410",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000026")));
	//Стр.Вставить("_60322_1",ПолучитьСчетКонтрактаПоАналитике("60322",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000028")));
	//Стр.Вставить("_60323_1",ПолучитьСчетКонтрактаПоАналитике("60323",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000028")));
	//Стр.Вставить("_60322_2",ПолучитьСчетКонтрактаПоАналитике("60322",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000029")));
	//Стр.Вставить("_60323_2",ПолучитьСчетКонтрактаПоАналитике("60323",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000029")));
	//Стр.Вставить("_60322_3",ПолучитьСчетКонтрактаПоАналитике("60322",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000030")));
	//Стр.Вставить("_60323_3",ПолучитьСчетКонтрактаПоАналитике("60323",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000030")));
	//Стр.Вставить("_60322_4",ПолучитьСчетКонтрактаПоАналитике("60322",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000031")));
	//Стр.Вставить("_60323_4",ПолучитьСчетКонтрактаПоАналитике("60323",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000031")));
	//Стр.Вставить("_60322_5",ПолучитьСчетКонтрактаПоАналитике("60322",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000032")));
	//Стр.Вставить("_60323_5",ПолучитьСчетКонтрактаПоАналитике("60323",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000032")));
	//Стр.Вставить("_60322_6",ПолучитьСчетКонтрактаПоАналитике("60322",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000033")));
	//Стр.Вставить("_60323_6",ПолучитьСчетКонтрактаПоАналитике("60323",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000033")));
	//Стр.Вставить("_60322_7",ПолучитьСчетКонтрактаПоАналитике("60322",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000034")));
	//Стр.Вставить("_60323_7",ПолучитьСчетКонтрактаПоАналитике("60323",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000034")));
	//Стр.Вставить("_60322_8",ПолучитьСчетКонтрактаПоАналитике("60322",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000035")));
	//Стр.Вставить("_60323_8",ПолучитьСчетКонтрактаПоАналитике("60323",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000035")));
	//Стр.Вставить("_60322_9",ПолучитьСчетКонтрактаПоАналитике("60322",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000036")));
	//Стр.Вставить("_60323_9",ПолучитьСчетКонтрактаПоАналитике("60323",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000036")));
	//Стр.Вставить("_60324_1",ПолучитьСчетПоАналитике("60324",НовУслСС));
	//Стр.Вставить("_61217_1",ПолучитьСчетКонтрактаПоАналитике("61217",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000085")));
	//Стр.Вставить("_61217_2",ПолучитьСчетКонтрактаПоАналитике("61217",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000086")));
	//Стр.Вставить("_61217_3",ПолучитьСчетКонтрактаПоАналитике("61217",НовУслСС,Справочники.БНФОСубконто.НайтиПоКоду("000000087")));
	Возврат Стр;
КонецФункции // ()

// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ПолучитьСтруктуруСчетов()
	
	
	
КонецФункции // ()


// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция Новая()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	МАКСИМУМ(ВЫРАЗИТЬ(БНФОБанковскийДвиженияССубконто.Регистратор.Комментарий КАК СТРОКА(250))) КАК Name,
	|	БНФОБанковскийДвиженияССубконто.СчетДт КАК СчетДт,
	|	БНФОБанковскийДвиженияССубконто.СчетКт КАК СчетКт,
	|	МАКСИМУМ(БНФОБанковскийДвиженияССубконто.СчетАналитическогоУчетаДт) КАК СчетАналитическогоУчетаДт,
	|	МАКСИМУМ(БНФОБанковскийДвиженияССубконто.СубконтоДт1) КАК СубконтоДт1,
	|	МАКСИМУМ(БНФОБанковскийДвиженияССубконто.СубконтоДт2) КАК СубконтоДт2,
	|	МАКСИМУМ(БНФОБанковскийДвиженияССубконто.СубконтоДт3) КАК СубконтоДт3,
	|	МАКСИМУМ(БНФОБанковскийДвиженияССубконто.СчетАналитическогоУчетаКт) КАК СчетАналитическогоУчетаКт,
	|	МАКСИМУМ(БНФОБанковскийДвиженияССубконто.СубконтоКт1) КАК СубконтоКт1,
	|	МАКСИМУМ(БНФОБанковскийДвиженияССубконто.СубконтоКт2) КАК СубконтоКт2,
	|	МАКСИМУМ(БНФОБанковскийДвиженияССубконто.СубконтоКт3) КАК СубконтоКт3,
	|	"""",
	|	"""",
	|	"""",
	|	МАКСИМУМ(ВЫРАЗИТЬ(БНФОБанковскийДвиженияССубконто.Регистратор.Комментарий КАК СТРОКА(250))) КАК Комментарий,
	|	МАКСИМУМ(БНФОБанковскийДвиженияССубконто.Содержание) КАК Содержание
	|ИЗ
	|	РегистрБухгалтерии.БНФОБанковский.ДвиженияССубконто(
	|			ДАТАВРЕМЯ(2019, 1, 1),
	|			ДАТАВРЕМЯ(2019, 1, 31),
	|			Регистратор ССЫЛКА Документ.БНФОМемориальныйОрдер
	|				И ПОДСТРОКА(Регистратор.Комментарий, 1, 1) = ""#"",
	|			,
	|			) КАК БНФОБанковскийДвиженияССубконто
	|
	|СГРУППИРОВАТЬ ПО
	|	БНФОБанковскийДвиженияССубконто.СчетДт,
	|	БНФОБанковскийДвиженияССубконто.СчетКт";
	Запрос.УстановитьПараметр("", );
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		
		
	КонецЦикла;
	Справочники.pcru_ex_ЗапросыNAV.НайтиПоНаименованию("СтандартнаяПроводка(1к1)"); 	 
	
КонецФункции // Новая()


Функция ПолучитьСоздатьУслугу()Экспорт
КонецФункции

// <Описание функции>
//
// Параметры:
//  КостЦентр  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ПолучитьПодразделениеПоКостЦентру(КостЦентр)Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПодразделенияОрганизаций.Ссылка КАК Ссылка,
	|	ПодразделенияОрганизаций.Наименование КАК Наименование
	|ИЗ
	|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций";
	Табл = Запрос.Выполнить().Выгрузить();
	Для каждого СтрокаТаблицы Из Табл Цикл
		Если pcru_ex_РаботаСоСтроками.ПолучитьТолькоЦифры(Лев(СтрокаТаблицы.Наименование,7)) = pcru_ex_РаботаСоСтроками.ПолучитьТолькоЦифры(Лев(КостЦентр,7)) Тогда
			Возврат СтрокаТаблицы.Ссылка;
		КонецЕсли;
	КонецЦикла;
	Возврат Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
КонецФункции // ПолучитьПодразделениеПоКостЦентру()

