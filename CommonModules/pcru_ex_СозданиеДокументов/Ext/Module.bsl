Функция СоздатьПлатежноеПОручение(Param) Экспорт
	СтруктураПараметров                   = pcru_ex_WSWORKS.СтрокуJSONВСтруктуру(Param);
	//Дата	"2020-10-05T00:00:00"
	//Подразделение	"SD"
	//ТипДокумента	"Заявка на оплату"
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПлатежноеПоручение.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПлатежноеПоручение КАК ПлатежноеПоручение
	|ГДЕ
	|	ПлатежноеПоручение.АЭ_Идентификатор = &Номер";
	Запрос.УстановитьПараметр("Номер",Стрзаменить(СокрЛП(СтруктураПараметров.Номер),"-",""));
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Возврат "Документ уже существует";
	КонецЦикла;
	Попытка
		НовДок                            = Документы.ПлатежноеПоручение.СоздатьДокумент();
		НовДок.АЭ_Идентификатор           = Стрзаменить(СокрЛП(СтруктураПараметров.Номер),"-","");
		НовДок.Дата                       = ТекущаяДата();
		НовДок.ВидОперации                = Перечисления.ВидыОперацийСписаниеДенежныхСредств.ОплатаПоставщику;
		//НовДок.ДокументОснование        = ;
		НовДок.Организация                = pcru_УМФО.Организация();
		НовДок.Налог                      = Справочники.ВидыНалоговИПлатежейВБюджет.НайтиПоНаименованию("");
		НовДок.ВидНалоговогоОбязательства = Перечисления.ВидыПлатежейВГосБюджет.Налог;
		НовДок.СчетОрганизации            = Справочники.БанковскиеСчета.НайтиПоРеквизиту("НомерСчета","40702810903000479930",,НовДок.Организация);
		НовДок.Контрагент                 = Справочники.Контрагенты.НайтиПоРеквизиту("ИНН",СтруктураПараметров.Контрагент);
		//Запрос                            = Новый Запрос;
		//Запрос.Текст                      = "ВЫБРАТЬ
		//|	БанковскиеСчета.Ссылка КАК Ссылка
		//|ИЗ
		//|	Справочник.БанковскиеСчета КАК БанковскиеСчета
		//|ГДЕ
		//|	БанковскиеСчета.Владелец        = &Владелец";
		//Запрос.УстановитьПараметр("Владелец",НовДок.Контрагент);
		//Выборка                           = Запрос.Выполнить().Выбрать();
		//Пока Выборка.Следующий() Цикл
		//	НовДок.СчетКонтрагента        = Выборка.Ссылка;
		//КонецЦикла;
		НовДок.СчетКонтрагента            = НовДок.Контрагент.ОсновнойБанковскийСчет;
		НовДок.СуммаДокумента             = СтруктураПараметров.Сумма;
		НовДок.СтавкаНДС                  = Перечисления.СтавкиНДС.НДС20;
		НовДок.СуммаНДС                   = (СтруктураПараметров.Сумма * 20)/120;
		НовДок.ВидПлатежа                 = "";
		НовДок.ОчередностьПлатежа         = 5;
		НовДок.НазначениеПлатежа          = "Оплата счета №" + СтруктураПараметров.Номер + " от " + СтруктураПараметров.Дата;
		НовДок.ВалютаДокумента            = pcru_УМФО.ВалютаРубль();
		НовДок.ТекстПлательщика           = УчетДенежныхСредствБП.СформироватьТекстНаименованияПлательщикаПолучателя("", НовДок.Организация,     НовДок.СчетОрганизации, Ложь, НовДок.Дата);
		НовДок.ТекстПолучателя            = УчетДенежныхСредствБП.СформироватьТекстНаименованияПлательщикаПолучателя("", НовДок.Контрагент,      НовДок.СчетКонтрагента, Ложь, НовДок.Дата);
		НовДок.Комментарий                = "Загружено из документооборота оплата счета №" + СтруктураПараметров.НомерДокумента + " от " + СтруктураПараметров.Дата;
		НовДок.ИННПлательщика             = НовДок.Организация.ИНН;
		НовДок.КПППлательщика             = НовДок.Организация.КПП;
		НовДок.ИННПолучателя              = НовДок.Контрагент.ИНН;
		НовДок.СтатьяДвиженияДенежныхСредств  =  Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоНаименованию("Оплата поставщикам (подрядчикам)") ;
		Попытка
			НовДок.КПППолучателя          = НовДок.Контрагент.КПП;
		Исключение
		КонецПопытки;
		НовДок.ПодразделениеОрганизации   = Справочники.ПодразделенияОрганизаций.НайтиПоКоду("000000003");;
		Таблица                           = Неопределено;
		Если СтруктураПараметров.Свойство("Таблица",Таблица) Тогда
			Для каждого СтрокаТаблицы Из Таблица Цикл
				СтрРЗ = НовДок.пкру_РаспределениеЗатрат.Добавить();
				СтрРЗ.пкру_CostCentr      = pcru_УМФО.ПолучитьПодразделениеПоКостЦентру(СтрокаТаблицы.CostCentr);
				//++ Севрюгин А.А  30.12.2020 20:44:55   
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ
				               |	pcru_ex_СопоставлениеВнешнихДанных.Значение КАК Значение
				               |ИЗ
				               |	РегистрСведений.pcru_ex_СопоставлениеВнешнихДанных КАК pcru_ex_СопоставлениеВнешнихДанных
				               |ГДЕ
				               |	pcru_ex_СопоставлениеВнешнихДанных.КодВнешнихДанных = &КодВнешнихДанных";
				Запрос.УстановитьПараметр("КодВнешнихДанных",СтрокаТаблицы.СтатьяРасходов );
				Выборка = Запрос.Выполнить().Выбрать();
				Пока Выборка.Следующий() Цикл
					 СтрРЗ.пкру_СтатьяРасходов =  Выборка.Значение;
				КонецЦикла;
				//-- Севрюгин А.А  30.12.2020 20:44:57 Администратор
				//Запрос                    = Новый Запрос;
				//Запрос.Текст = "ВЫБРАТЬ 
				//|	ПрочиеДоходыИРасходы.Ссылка КАК Ссылка,
				//|	ПрочиеДоходыИРасходы.Наименование КАК Наименование
				//|ИЗ
				//|	Справочник.ПрочиеДоходыИРасходы КАК ПрочиеДоходыИРасходы";
				////Запрос.УстановитьПараметр("Наименование","%"+pcru_ex_РаботаСоСтроками.ПолучитьТолькоЦифры(СтрокаТаблицы.СтатьяРасходов)+"%");
				//ТЗ = Запрос.Выполнить().Выгрузить();
				//Для Каждого СтрокаТЗ Из ТЗ Цикл
				//	Если СтрЧислоВхождений(СтрокаТЗ.Наименование,pcru_ex_РаботаСоСтроками.ПолучитьТолькоЦифры(СтрокаТаблицы.СтатьяРасходов)) > 0 Тогда
				//		СтрРЗ.пкру_СтатьяРасходов =  СтрокаТЗ.Ссылка;
				//	КонецЕсли;
				//КонецЦикла;
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ
				|	БНФОСубконто.Ссылка КАК Ссылка
				|ИЗ
				|	Справочник.БНФОСубконто КАК БНФОСубконто
				|ГДЕ
				|	БНФОСубконто.Владелец.Наименование = ""Тип затрат""
				|	И БНФОСубконто.Наименование = &Наименование";
				Запрос.УстановитьПараметр("Наименование",СтрокаТаблицы.ТипЗатрат );
				Выборка = Запрос.Выполнить().Выбрать();
				Пока Выборка.Следующий() Цикл
					СтрРЗ.ТипЗатрат       = Выборка.Ссылка;
				КонецЦикла;
				СтрРЗ.Сумма               = СтрокаТаблицы.Сумма;
			КонецЦикла; 
		КонецЕсли;
		НовДок.ДополнительныеСвойства.Вставить("АвторВерсии", Справочники.Пользователи.НайтиПоНаименованию("USER"));
		НовДок.Ответственный                  =  Справочники.Пользователи.НайтиПоНаименованию("USER");
		НовДок.Записать();
	Исключение
		Ошибка                            = ОписаниеОшибки();
		Возврат Ошибка;
	КонецПопытки;
	Возврат "ОК";
	//	 НовДок.КодБК                          =  ;
	//	 НовДок.КодОКАТО                       =  ;
	//	 НовДок.ПоказательДаты                 =  ;
	//	 НовДок.ПоказательНомера               =  ;
	//	 НовДок.ПоказательОснования            =  ;
	//	 НовДок.ПоказательПериода              =  ;
	//	 НовДок.ПоказательТипа                 =  ;
	//	 НовДок.СтатусСоставителя              =  ;
	//	 НовДок.Ответственный                  =  ;
	//	 НовДок.ПеречислениеВБюджет            =  ;
	//	 НовДок.ВидПеречисленияВБюджет         =  ;
	//	 НовДок.ДоговорКонтрагента             =  ;
	//	 НовДок.ИдентификаторПлатежа           =  ;
	//	 НовДок.ВидОперации                    =  ;
	//	 НовДок.ПлатежнаяВедомость             =  ;
	//	 НовДок.Банк                           =  ;
	//	 НовДок.СуммаПроцентов                 =  ;
	//	 НовДок.БНФОВнутрибанковскийПеревод    =  ;
	//	 НовДок.БНФОВидПлатежаПоКредитамЗаймам =  ;
	//	 НовДок.БНФОДоговорКредитаДепозита     =  ;
	//	 НовДок.АЭ_ДокументОснование           =  ;
	//	 НовДок.Налогоплательщик               =  ;
	//	 НовДок.АЭ_Идентификатор               =  ;
	//	 НовДок.АЭ_ДанныеИнтеграции            =  ;
	//	 НовДок.НачислениеДивидендов           =  ;
	//	 НовДок.АЭ_РежимИнтеграции             =  ;
	//	 НовДок.БНФОКонверсионныйДоговор       =  ;
	//	 НовДок.КодВыплат                      =  ;
	//	 НовДок.КодВидаДохода                  =  ;
	//   НовДок.Дата                           =  ;
	//	 НовДок.ДокументОснование              =  ;
	//	 НовДок.Организация                    =  ;
	//	 НовДок.Налог                          =  ;
	//	 НовДок.ВидНалоговогоОбязательства     =  ;
	//	 НовДок.СчетОрганизации                =  ;
	//	 НовДок.Контрагент                     =  ;
	//	 НовДок.СчетКонтрагента                =  ;
	//	 НовДок.СуммаДокумента                 =  ;
	//	 НовДок.СтавкаНДС                      =  ;
	//	 НовДок.СуммаНДС                       =  ;
	//	 НовДок.ВидПлатежа                     =  ;
	//	 НовДок.ОчередностьПлатежа             =  ;
	//	 НовДок.НазначениеПлатежа              =  ;
	//	 НовДок.ВалютаДокумента                =  ;
	//	 НовДок.ТекстПлательщика               =  ;
	//	 НовДок.ТекстПолучателя                =  ;
	//	 НовДок.Комментарий                    =  ;
	//	 НовДок.ИННПлательщика                 =  ;
	//	 НовДок.КПППлательщика                 =  ;
	//	 НовДок.ИННПолучателя                  =  ;
	//	 НовДок.КПППолучателя                  =  ;
	//	 НовДок.КодБК                          =  ;
	//	 НовДок.КодОКАТО                       =  ;
	//	 НовДок.ПоказательДаты                 =  ;
	//	 НовДок.ПоказательНомера               =  ;
	//	 НовДок.ПоказательОснования            =  ;
	//	 НовДок.ПоказательПериода              =  ;
	//	 НовДок.ПоказательТипа                 =  ;
	//	 НовДок.СтатусСоставителя              =  ;
	//	 НовДок.Ответственный                  =  ;
	//	 НовДок.ПодразделениеОрганизации       =  ;
	//	 НовДок.ПеречислениеВБюджет            =  ;
	//	 НовДок.ВидПеречисленияВБюджет         =  ;
	//	 НовДок.ДоговорКонтрагента             =  ;
	//	 НовДок.СтатьяДвиженияДенежныхСредств  =  ;
	//	 НовДок.ИдентификаторПлатежа           =  ;
	//	 НовДок.ВидОперации                    =  ;
	//	 НовДок.ПлатежнаяВедомость             =  ;
	//	 НовДок.Банк                           =  ;
	//	 НовДок.СуммаПроцентов                 =  ;
	//	 НовДок.БНФОВнутрибанковскийПеревод    =  ;
	//	 НовДок.БНФОВидПлатежаПоКредитамЗаймам =  ;
	//	 НовДок.БНФОДоговорКредитаДепозита     =  ;
	//	 НовДок.АЭ_ДокументОснование           =  ;
	//	 НовДок.Налогоплательщик               =  ;
	//	 НовДок.АЭ_Идентификатор               =  ;
	//	 НовДок.АЭ_ДанныеИнтеграции            =  ;
	//	 НовДок.НачислениеДивидендов           =  ;
	//	 НовДок.АЭ_РежимИнтеграции             =  ;
	//	 НовДок.БНФОКонверсионныйДоговор       =  ;
	//	 НовДок.КодВыплат                      =  ;
	//	 НовДок.КодВидаДохода                  =  ;
КонецФункции
