
#Область  Документооборот

Функция ПолучитьСписокПодразделенийДО()Экспорт
	
	ВебСервис = Справочники.ОбменДаннымиКлиенты.НайтиПоКоду("DOCMNG");
	Определение = Новый WSОпределения(ВебСервис.МестоположениеWSDL,ВебСервис.Пользователь,ВебСервис.Пароль,,,,False);
	Прокси = Новый WSПрокси(Определение,ВебСервис.URIПространстваИменСервиса, ВебСервис.ИмяСервиса, ВебСервис.ИмяТочкиПодключения,,,,,False);       
	Прокси.Пользователь = ВебСервис.Пользователь;
	Прокси.Пароль = ВебСервис.Пароль;

	//Определение = Новый WSОпределения("http://ruspbpacc01/DOCMNG/ws/DocumentWorkflow.1cws?wsdl","WS","WS159753");
	//Прокси = Новый WSПрокси(Определение, "http://ruspbpacc01/DocumentWorkflow","Pcru_DocumentWorkflow" ,"Pcru_DocumentWorkflowSoap" );       
	//Прокси.Пользователь = "WS";      Прокси.Пароль = "WS159753";
	
	Результат = СтрокуJSONВСтруктуру(Прокси.GetUnitList());
	Список = новый СписокЗначений;
	Для каждого СтрМасс Из Результат.Массив Цикл
		Список.Добавить(СтрМасс.Код,СтрМасс.Наименование);
	КонецЦикла; 
	Возврат Список;
КонецФункции // ПолучитьСписокПодразделенийДО()

Процедура ОбновитьСостояния()Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	pcru_ex_ДокументыДиадок.ИдентификаторДиадок КАК ИдентификаторДиадок
	|ИЗ
	|	РегистрСведений.pcru_ex_ДокументыДиадок КАК pcru_ex_ДокументыДиадок
	|ГДЕ
	|	pcru_ex_ДокументыДиадок.Состояние <> &Состояние1
	|	И pcru_ex_ДокументыДиадок.Состояние <> &Состояние2";
	Запрос.УстановитьПараметр("Состояние1", "Согласован");
	Запрос.УстановитьПараметр("Состояние2","Оплачен" );
	//Выборка = Запрос.Выполнить().Выбрать();
	//Пока Выборка.Следующий() Цикл
	
	ТЗ = Запрос.Выполнить().Выгрузить();	
	Для Каждого Выборка Из ТЗ Цикл
		ВебСервис = Справочники.ОбменДаннымиКлиенты.НайтиПоКоду("DOCMNG");
		Определение = Новый WSОпределения(ВебСервис.МестоположениеWSDL,ВебСервис.Пользователь,ВебСервис.Пароль,,,,False);
		Прокси = Новый WSПрокси(Определение,ВебСервис.URIПространстваИменСервиса, ВебСервис.ИмяСервиса, ВебСервис.ИмяТочкиПодключения,,,,,False);       
		Прокси.Пользователь = ВебСервис.Пользователь;
		Прокси.Пароль = ВебСервис.Пароль;
		
		//Определение = Новый WSОпределения("http://ruspbpacc01/DOCMNG/ws/DocumentWorkflow.1cws?wsdl","WS","WS159753");
		//Прокси = Новый WSПрокси(Определение, "http://ruspbpacc01/DocumentWorkflow","Pcru_DocumentWorkflow" ,"Pcru_DocumentWorkflowSoap" );       
		//Прокси.Пользователь = "WS";      Прокси.Пароль = "WS159753";
		Результат = Прокси.GetDocStatus(Выборка.ИдентификаторДиадок);
		ЗагруженВДО = Прокси.GetDocDiadocToID(Выборка.ИдентификаторДиадок);
		
		Набор = РегистрыСведений.pcru_ex_ДокументыДиадок.СоздатьНаборЗаписей();
		Набор.Отбор.ИдентификаторДиадок.Установить(Выборка.ИдентификаторДиадок);
		Набор.Прочитать();
		Если Набор.Количество() > 0 Тогда
			Для Каждого Строка Из Набор Цикл
				Строка.Состояние = Результат;
			КонецЦикла;
		Иначе
			Строка = Набор.Добавить();
			Строка.ИдентификаторДиадок = Выборка.ИдентификаторДиадок;
			Строка.Состояние = Результат;
			Строка.ЗагруженВДО = ЗагруженВДО;
		КонецЕсли;
		Набор.Записать(ИСТИНА);
			
		//МЗ = РегистрыСведений.pcru_ex_ДокументыДиадок.СоздатьМенеджерЗаписи();
		//МЗ.ИдентификаторДиадок = Выборка.ИдентификаторДиадок ;
		//МЗ.Прочитать();
		//МЗ.Состояние = Результат;
		//МЗ.ИдентификаторДиадок = Выборка.ИдентификаторДиадок ;
		//МЗ.Записать(TRUE);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти


#Область  Сервис

Функция СтрокуJSONВСтруктуру(СтрокаJSON)Экспорт
	ЧтениеJSON = Новый ЧтениеJSON; 
	ЧтениеJSON.УстановитьСтроку(СтрокаJSON); 
	СтруктураДокумента= ПрочитатьJSON(ЧтениеJSON); 
	ЧтениеJSON.Закрыть();
	Возврат СтруктураДокумента;
КонецФункции

процедура ДобавитьСубконто(Счет, ВидСубконто)
	тз = Счет.ВидыСубконто.Выгрузить();
	НайденныйВидСубконто = тз.найти(ВидСубконто, "ВидСубконто");
	если НайденныйВидСубконто = неопределено и тз.количество() < 3 тогда 
		// добавляем вид субконто
		ДобавленноеСубконто = Счет.ВидыСубконто.Добавить();
		ДобавленноеСубконто.ВидСубконто = ВидСубконто;
	иначеесли тз.количество() >= 3 тогда
		сообщить("количество видов субконто для данного счета достигло максимального для данного плана счетов");
	конецесли;
	
КонецПроцедуры

Функция ПолучитьWS(ИмяНастройки="")Экспорт
	Попытка
		//Запрос = Новый Запрос;
		//Запрос.Текст = "ВЫБРАТЬ
		//|	pcru_ex_ВнешниеИнформационныеБазы.Сервер КАК Сервер,
		//|	pcru_ex_ВнешниеИнформационныеБазы.База КАК База,
		//|	pcru_ex_ВнешниеИнформационныеБазы.Пользователь КАК Пользователь,
		//|	pcru_ex_ВнешниеИнформационныеБазы.Пароль КАК Пароль
		//|ИЗ
		//|	Справочник.pcru_ex_ВнешниеИнформационныеБазы КАК pcru_ex_ВнешниеИнформационныеБазы
		//|ГДЕ
		//|	pcru_ex_ВнешниеИнформационныеБазы.Код = &Код";
		//Запрос.УстановитьПараметр("Код",ИмяНастройки);
		//Выборка = Запрос.Выполнить().Выбрать();
		//Пока Выборка.Следующий() Цикл
		//	Определение = Новый WSОпределения(Выборка.Сервер,Выборка.Пользователь,Выборка.Пароль,,,,true);
		//	Прокси = Новый WSПрокси(Определение,СтрПолучитьСтроку(Выборка.База,1), СтрПолучитьСтроку(Выборка.База,2), СтрПолучитьСтроку(Выборка.База,3),,,,,true);       
		//	Прокси.Пользователь =  Выборка.Пользователь;
		//	Прокси.Пароль = Выборка.Пароль; 
		//КонецЦикла;
		//
		Определение = Новый WSОпределения("http://ruspbsql01:7085/PC_EXT/WS/Proficredit X/Codeunit/_x0031_CExchange","PCRU\asevryugin","Cherrygarden1234567",,,,true);
		Прокси = Новый WSПрокси(Определение,"urn:microsoft-dynamics-schemas/codeunit/_x0031_CExchange", "_x0031_CExchange", "_x0031_CExchange_Port",,,,,true);       
		Прокси.Пользователь = "PCRU\asevryugin";
		Прокси.Пароль = "Cherrygarden123456"; 
		Возврат Прокси;
	Исключение
		Возврат Неопределено;
	КонецПопытки; 
КонецФункции

#КонецОбласти


#Область  НАВ

//Функция Функ123() Экспорт
//	
//	Определение = Новый WSОпределения("http://ruspbsql01:7085/PC_EXT/WS/Proficredit X/Codeunit/_x0031_CExchange","PCRU\asevryugin","Cherrygarden12345",,,,true);
//	Прокси = Новый WSПрокси(Определение,"urn:microsoft-dynamics-schemas/codeunit/_x0031_CExchange", "_x0031_CExchange", "_x0031_CExchange_Port",,,,,true);       
//	Прокси.Пользователь = "PCRU\asevryugin";
//	Прокси.Пароль = "Cherrygarden12345";
//	ДанныеЗаявки = Прокси.GetContractInfo("0009000143");//GetCorrespondenceCount("71802.2","48801.1",ТекущаяДата());
//	ЧтениеJSON = Новый ЧтениеJSON; 
//	ЧтениеJSON.УстановитьСтроку(ДанныеЗаявки); 
//	СтруктураДокумента= ПрочитатьJSON(ЧтениеJSON); 
//	ЧтениеJSON.Закрыть();
//	Возврат	 pcru_ex_РаботаСоСтроками.ПолучитьДатуИзСтроки(СтруктураДокумента.DisbursementDate,Истина);
//	
//КонецФункции

Функция ПолучитьДатуПодписания(НомерКонтракта)Экспорт
	
	Возврат DisbursementDate(НомерКонтракта);
	
	Прокси = ПолучитьWS();
	Попытка
		ДанныеЗаявки = Прокси.GetContractInfo(НомерКонтракта);//GetCorrespondenceCount("71802.2","48801.1",ТекущаяДата());
	Исключение
		Возврат DisbursementDate(НомерКонтракта);
	КонецПопытки;
	Попытка
	ЧтениеJSON = Новый ЧтениеJSON; 
	ЧтениеJSON.УстановитьСтроку(ДанныеЗаявки); 
	СтруктураДокумента= ПрочитатьJSON(ЧтениеJSON); 
	ЧтениеJSON.Закрыть();
	Исключение
		Возврат DisbursementDate(НомерКонтракта);	
	КонецПопытки;
	Возврат	 pcru_ex_РаботаСоСтроками.ПолучитьДатуИзСтроки(СтруктураДокумента.DisbursementDate,Истина);
КонецФункции // ПолучитьДатуПодписания()

Функция ПолучитьТаблицуДвижений(СчетДт,СчетКТ,Дата)Экспорт
	МассивДанных = Новый Массив;
	Прокси = ПолучитьWS(); 
		Колво = Прокси.GetCorrespondenceCount(СчетДт,СчетКТ,День(Дата),Месяц(Дата),Год(Дата));//GetCorrespondenceCount("71802.2","48801.1",ТекущаяДата());
		Для Стр = 1 По Колво Цикл
			ответ = Прокси.GetCorrespondence(СчетДт,СчетКТ,День(Дата),Месяц(Дата),Год(Дата),Стр);
			Если ЗначениеЗаполнено(ответ)  Тогда
				Структура =	СтрокуJSONВСтруктуру(ответ);
				Структура.Вставить("СчетДТ", СчетДт);
				Структура.Вставить("СчетКТ", СчетКТ);
				МассивДанных.Добавить(Структура);
			КонецЕсли;
		КонецЦикла; 	
	Возврат МассивДанных;
КонецФункции

Функция ПолучитьБазу()

	Возврат "PROFICREDIT"; 
	
КонецФункции // ()

Функция ПолучитьФирму()
	
	Возврат "Proficredit X";
	
КонецФункции // ПолучитьФирму()

Функция DisbursementDate(НОМЕРКОНТРАКТА) Экспорт
	
	База  = ПолучитьБазу();
	Фирма = ПолучитьФирму();
	
	УстановитьПривилегированныйРежим(Истина);
	Организация = Справочники.Организации.НайтиПоКоду("000000001");
	СтрокаПодключения = 
	"Provider=MSDASQL.1;
	|UID=1c_test;
	|Pwd=tset_c1;
	|Extended Properties=""DRIVER=SQL Server;
	|SERVER=RUSPBSQLPROD\CRMRU;
	|APP=1С Reglament Job;
	|DATABASE="+База+"""";
	Connection= Новый COMОбъект("ADODB.Connection");
	Command= Новый COMОбъект("ADODB.Command");
	RecordSet = Новый COMОбъект("ADODB.RecordSet");
	Connection.ConnectionString =СтрокаПодключения;	 
	Connection.Open();
	Command.ActiveConnection = Connection;
	Command.CommandText = "SELECT contrDT.[Disbursement Date] AS DisbursementDate FROM ["+База+"].dbo.["+Фирма+"$Contract] AS contrDT WHERE  contrDT.[Contract No_] = '"+НОМЕРКОНТРАКТА+"' ";
	RecordSet = Command.Execute();
	Если RecordSet.EOF() И RecordSet.BOF() Тогда
		RecordSet.Close();
		Возврат ДАта(1,1,1);
	КонецЕсли;
	
	RecordSet.MoveFirst();
	Пока НЕ RecordSet.EOF() Цикл
	DisbursementDate	= Строка(RecordSet.Fields("DisbursementDate").Value);
		RecordSet.MoveNext(); 
	КонецЦикла;
	RecordSet.Close();
	 Возврат	 pcru_ex_РаботаСоСтроками.ПолучитьДатуИзСтроки(DisbursementDate,Истина);

КонецФункции

#КонецОбласти
