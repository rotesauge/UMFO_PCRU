&Вместо("СформироватьДвиженияРеализацияСобственныхТоваровУслуг")
Процедура pcru_ex_СформироватьДвиженияРеализацияСобственныхТоваровУслуг(ТаблицаВыручкиОтРеализации, ПараметрыРеализации, Движения, Отказ)
	
	Если ТаблицаВыручкиОтРеализации.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ОсуществлятсяРеализацияТоваровЧерезСчетВыбытия = ПолучитьФункциональнуюОпцию("БНФООсуществлятьРеализациюТоваровЧерезСчетВыбытия");
	
	Период					= ПараметрыРеализации.Период;
	Организация				= ПараметрыРеализации.Организация;
	БезвозмезднаяРеализация	= ПараметрыРеализации.БезвозмезднаяРеализация;
	
	Если ДокументЯвляетсяВозвратом(ПараметрыРеализации.Регистратор) Тогда
		ТекстСодержанияПоТоварам = "Возврат от покупателя";
	ИначеЕсли БухгалтерскийУчетКлиентСерверПереопределяемый.ДокументЯвляетсяРеализациейПрочегоИмущества(ПараметрыРеализации.Регистратор) Тогда
		ТекстСодержанияПоТоварам = "Реализация прочего имущества";
	Иначе
		ТекстСодержанияПоТоварам = "Реализация товаров";
	КонецЕсли;
	
	Если БухгалтерскийУчетКлиентСерверПереопределяемый.ДокументЯвляетсяОтчетомКомитенту(ПараметрыРеализации.Регистратор) Тогда
		ТекстСодержанияПоУслугам = "Оказание услуг по договору комиссии";
	Иначе
		ТекстСодержанияПоУслугам = "Реализация услуг";
	КонецЕслИ;
	
	ОтражатьВНалоговомУчете  = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Организация, Период);
	
	УчетНДСПолученногоПоОтгрузке = БНФОУчетнаяПолитика.БНФОУчетНДСПолученногоПоОтгрузке(Организация, Период);
	
	// Выполним распределение суммы взаиморасчетов пропорционально сумме без НДС и сумме НДС.	
	БНФОУчетВзаиморасчетов.ОпределитьСуммуВзаиморасчетовНДС(ТаблицаВыручкиОтРеализации);
	
	КлассыВнеоборотныхАктивов = БНФОУчетНМА.ЗаполнитьКлассыВнеоборотныхАктивов(ОбщегоНазначенияБПВызовСервера.УдалитьПовторяющиесяЭлементыМассива(
	ТаблицаВыручкиОтРеализации.ВыгрузитьКолонку("Номенклатура")), Период, Организация,
	"БНФОГруппыВнеоборотныхАктивовОСОрганизаций","ОсновноеСредство");
	
	Для каждого СтрокаТаблицы Из ТаблицаВыручкиОтРеализации Цикл
		
		Если НЕ БезвозмезднаяРеализация тогда
			
			Проводка = Движения.БНФОБанковский.Добавить();
			
			Проводка.Период      = Период;
			Проводка.Организация = Организация;
			Проводка.Содержание  = ?(СтрокаТаблицы.ЭтоУслуга, ТекстСодержанияПоУслугам, ТекстСодержанияПоТоварам);
			
			Проводка.СчетДт = СтрокаТаблицы.КорСчетВладелец;
			Проводка.СчетАналитическогоУчетаДт = СтрокаТаблицы.КорСчет;
			ЗаполнитьАналитикуСчетаРасчетов(Проводка, СтрокаТаблицы, "Дт", ОтражатьВНалоговомУчете, СтрокаТаблицы.СуммаБУ - СтрокаТаблицы.СуммаНУ, ПараметрыРеализации);
			
			//++ Севрюгин А.А
			УЗКДЕстьВСубконто = Ложь;
			Для каждого СтрВидыСубконто Из СтрокаТаблицы.КорСчетВладелец.ВидыСубконто Цикл
				Если СтрВидыСубконто.ВидСубконто.Идентификатор = "ДоговорыКредитаДепозита" Тогда
					УЗКДЕстьВСубконто = Истина;
				КонецЕсли; 
			КонецЦикла; 
			Если ТипЗнч(СтрокаТаблицы.КорСубконто2) = Тип("СправочникСсылка.ДоговорыКонтрагентов")  И УЗКДЕстьВСубконто  Тогда
				БНФОБухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ДоговорыКредитаДепозита", Справочники.БНФОДоговорыКредитовИДепозитов.НайтиПоРеквизиту("Номер",СтрокаТаблицы.КорСубконто2.Номер));
			КонецЕсли; 
			//-- Севрюгин А.А

			
			ВидСубконтоКлассыВнеоборотныхАктивов = БНФОБухгалтерскийУчетВызовСервераПовтИсп.ВидСубконтоКлассыВнеоборотныхАктивовНаСчете(Проводка.СчетДт);
			Если ВидСубконтоКлассыВнеоборотныхАктивов <> Неопределено Тогда
				СтрокаКлассВнеоборотногоАктива = КлассыВнеоборотныхАктивов.Найти(СтрокаТаблицы.Номенклатура,"ВнеоборотныйАктив");
				Если Не СтрокаКлассВнеоборотногоАктива = Неопределено Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, ВидСубконтоКлассыВнеоборотныхАктивов, СтрокаКлассВнеоборотногоАктива.КлассВнеоборотногоАктива);
				КонецЕсли;
			КонецЕсли;
			
			Если СтрокаТаблицы.ЭтоУслуга Тогда
				Проводка.СчетКт 					= СтрокаТаблицы.СчетДоходовВладелец;
				Проводка.СчетАналитическогоУчетаКт	= СтрокаТаблицы.СчетДоходов;
			Иначе
				Проводка.СчетКт = СтрокаТаблицы.СчетВыбытияВладелец;
				Проводка.СчетАналитическогоУчетаКт = СтрокаТаблицы.СчетВыбытия;
			КонецЕсли;
			
			ВидСубконтоКлассыВнеоборотныхАктивов = БНФОБухгалтерскийУчетВызовСервераПовтИсп.ВидСубконтоКлассыВнеоборотныхАктивовНаСчете(Проводка.СчетКт);
			Если ВидСубконтоКлассыВнеоборотныхАктивов <> Неопределено Тогда
				СтрокаКлассВнеоборотногоАктива = КлассыВнеоборотныхАктивов.Найти(СтрокаТаблицы.Номенклатура,"ВнеоборотныйАктив");
				Если Не СтрокаКлассВнеоборотногоАктива = Неопределено Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, ВидСубконтоКлассыВнеоборотныхАктивов, СтрокаКлассВнеоборотногоАктива.КлассВнеоборотногоАктива);
				КонецЕсли;
			КонецЕсли;
			
			Проводка.Сумма = СтрокаТаблицы.СуммаРуб - СтрокаТаблицы.СуммаНДСРуб - СтрокаТаблицы.СуммаНДСРубСАвансов;
			
			ЗаполнитьАналитикуСчетаДохода(Проводка, СтрокаТаблицы, "Кт", ОтражатьВНалоговомУчете, СтрокаТаблицы.СуммаБУ - СтрокаТаблицы.СуммаНУ, ПараметрыРеализации);
			БНФОБухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ОсновныеСредства", СтрокаТаблицы.Номенклатура);
			
		КонецЕсли;	
		
		Если СтрокаТаблицы.СуммаНДСРуб <> 0 Тогда
			
			Если НЕ БезвозмезднаяРеализация тогда
				
				Проводка = Движения.БНФОБанковский.Добавить();
				Проводка.Период      = Период;
				Проводка.Организация = Организация;
				Проводка.Сумма       = СтрокаТаблицы.СуммаНДСРуб;
				Проводка.Содержание  = ?(СтрокаТаблицы.ЭтоУслуга, ТекстСодержанияПоУслугам, ТекстСодержанияПоТоварам);
				
				Проводка.СчетДт = СтрокаТаблицы.КорСчетВладелец;
				Проводка.СчетАналитическогоУчетаДт = СтрокаТаблицы.КорСчет;
				ЗаполнитьАналитикуСчетаРасчетовНДС(Проводка, СтрокаТаблицы, "Дт", ОтражатьВНалоговомУчете, 0, ПараметрыРеализации);
				
				//++ Севрюгин А.А
				УЗКДЕстьВСубконто = Ложь;
				Для каждого СтрВидыСубконто Из СтрокаТаблицы.КорСчетВладелец.ВидыСубконто Цикл
					Если СтрВидыСубконто.ВидСубконто.Идентификатор = "ДоговорыКредитаДепозита" Тогда
						УЗКДЕстьВСубконто = Истина;
					КонецЕсли; 
				КонецЦикла; 
				Если ТипЗнч(СтрокаТаблицы.КорСубконто2) = Тип("СправочникСсылка.ДоговорыКонтрагентов")  И УЗКДЕстьВСубконто  Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ДоговорыКредитаДепозита", Справочники.БНФОДоговорыКредитовИДепозитов.НайтиПоРеквизиту("Номер",СтрокаТаблицы.КорСубконто2.Номер));
				КонецЕсли; 
				//-- Севрюгин А.А

				ВидСубконтоКлассыВнеоборотныхАктивов = БНФОБухгалтерскийУчетВызовСервераПовтИсп.ВидСубконтоКлассыВнеоборотныхАктивовНаСчете(Проводка.СчетДт);
				Если ВидСубконтоКлассыВнеоборотныхАктивов <> Неопределено Тогда
					СтрокаКлассВнеоборотногоАктива = КлассыВнеоборотныхАктивов.Найти(СтрокаТаблицы.Номенклатура, "ВнеоборотныйАктив");
					Если Не СтрокаКлассВнеоборотногоАктива = Неопределено Тогда
						БНФОБухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, ВидСубконтоКлассыВнеоборотныхАктивов, СтрокаКлассВнеоборотногоАктива.КлассВнеоборотногоАктива);
					КонецЕсли;
				КонецЕсли;
				
				Если ОсуществлятсяРеализацияТоваровЧерезСчетВыбытия И НЕ СтрокаТаблицы.ЭтоУслуга Тогда
				
					Проводка.СчетКт = СтрокаТаблицы.СчетВыбытияВладелец;
					Проводка.СчетАналитическогоУчетаКт = СтрокаТаблицы.СчетВыбытия;
					
					ЗаполнитьАналитикуСчетаДоходаНДС(Проводка, СтрокаТаблицы, "Кт", ОтражатьВНалоговомУчете, 0);
					БНФОБухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ОсновныеСредства", СтрокаТаблицы.Номенклатура);
					
					//возможно тут должен быть алгоритм заполнения субконто по классам внеоборотных активов
					
				Иначе
					
					Проводка.СчетКт = СтрокаТаблицы.СчетУчетаНДСПоРеализацииВладелец;
					Проводка.СчетАналитическогоУчетаКт = СтрокаТаблицы.СчетУчетаНДСПоРеализации;
					
					ВидСубконтоКлассыВнеоборотныхАктивов = БНФОБухгалтерскийУчетВызовСервераПовтИсп.ВидСубконтоКлассыВнеоборотныхАктивовНаСчете(Проводка.СчетКт);
					Если ВидСубконтоКлассыВнеоборотныхАктивов <> Неопределено Тогда
						СтрокаКлассВнеоборотногоАктива = КлассыВнеоборотныхАктивов.Найти(СтрокаТаблицы.Номенклатура, "ВнеоборотныйАктив");
						Если Не СтрокаКлассВнеоборотногоАктива = Неопределено Тогда
							БНФОБухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, ВидСубконтоКлассыВнеоборотныхАктивов, СтрокаКлассВнеоборотногоАктива.КлассВнеоборотногоАктива);
						КонецЕсли;
					КонецЕсли;
					
					БНФОБухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "СтавкиНДС",		СтрокаТаблицы.СтавкаНДС);
					БНФОБухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Контрагенты",	СтрокаТаблицы.Контрагент);
					БНФОБухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "СФВыданные",	ПараметрыРеализации.Регистратор);
					БНФОБухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ВидыПлатежейВГосБюджет", Перечисления.ВидыПлатежейВГосБюджет.Налог);
					
					Если УчетНДСПолученногоПоОтгрузке Тогда
						БНФОБухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ВидыОперацийНДСПолученный", Перечисления.БНФОВидыОперацийНДСПолученный.Начисление);
					КонецЕсли;
					
					ЗаполнитьАналитикуСчетаРасчетовНДС(Проводка, СтрокаТаблицы, "Кт", ОтражатьВНалоговомУчете, 0, ПараметрыРеализации);
					
				КонецЕсли;
				
			Иначе	
			
				Проводка = Движения.БНФОБанковский.Добавить();
				
				Проводка.Период      = Период;
				Проводка.Организация = Организация;
				Проводка.Сумма       = СтрокаТаблицы.СуммаНДСРуб;
				
				Проводка.Содержание  = ТекстСодержанияПоТоварам;
				
				Проводка.СчетДт = СтрокаТаблицы.СчетВыбытияВладелец;
				Проводка.СчетАналитическогоУчетаДт = СтрокаТаблицы.СчетВыбытия;
				
				ЗаполнитьАналитикуСчетаДоходаНДС(Проводка, СтрокаТаблицы, "Дт", ОтражатьВНалоговомУчете, 0, ПараметрыРеализации);
				БНФОБухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ОсновныеСредства", СтрокаТаблицы.Номенклатура);
				
				
				Проводка.СчетКт = СтрокаТаблицы.СчетУчетаНДСПоРеализацииВладелец;
				Проводка.СчетАналитическогоУчетаКт = СтрокаТаблицы.СчетУчетаНДСПоРеализации;
				
				ВидСубконтоКлассыВнеоборотныхАктивов = БНФОБухгалтерскийУчетВызовСервераПовтИсп.ВидСубконтоКлассыВнеоборотныхАктивовНаСчете(Проводка.СчетКт);
				Если ВидСубконтоКлассыВнеоборотныхАктивов <> Неопределено Тогда
					СтрокаКлассВнеоборотногоАктива = КлассыВнеоборотныхАктивов.Найти(СтрокаТаблицы.Номенклатура, "ВнеоборотныйАктив");
					Если Не СтрокаКлассВнеоборотногоАктива = Неопределено Тогда
						БНФОБухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, ВидСубконтоКлассыВнеоборотныхАктивов, СтрокаКлассВнеоборотногоАктива.КлассВнеоборотногоАктива);
					КонецЕсли;
				КонецЕсли;
				
				БНФОБухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "СтавкиНДС",		СтрокаТаблицы.СтавкаНДС);
				БНФОБухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Контрагенты",	СтрокаТаблицы.Контрагент);
				БНФОБухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "СФВыданные",	ПараметрыРеализации.Регистратор);
				БНФОБухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ВидыПлатежейВГосБюджет", Перечисления.ВидыПлатежейВГосБюджет.Налог);
				
				Если УчетНДСПолученногоПоОтгрузке Тогда
					БНФОБухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ВидыОперацийНДСПолученный", Перечисления.БНФОВидыОперацийНДСПолученный.Начисление);
				КонецЕсли;
				
				ЗаполнитьАналитикуСчетаРасчетовНДС(Проводка, СтрокаТаблицы, "Кт", ОтражатьВНалоговомУчете, 0, ПараметрыРеализации);
				
			КонецЕсли;	
			
		КонецЕсли;
		
	КонецЦикла;
	
	Движения.БНФОБанковский.Записывать = Истина;

	
КонецПроцедуры


&Перед("СформироватьДвиженияРасчетаСписанияРБП")
Процедура pcru_ex_СформироватьДвиженияРасчетаСписанияРБП(ТаблицаСписаннияРБП, ТаблицаРеквизиты, Движения, Отказ, СписыватьОстаткиПоОбъектамСтроительства)
	
	Если ТаблицаРеквизиты.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ТаблицаРеквизиты.Колонки.Найти("Ссылка") <> Неопределено И ТипЗнч(ТаблицаРеквизиты[0].Ссылка) <> Тип("ДокументСсылка.БНФОСписаниеРасходовБудущихПериодов") Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаСписаннияРБП.Свернуть("ДатаНачала,ДатаОкончания,ДнейВПериоде,ДнейДоКонцаСрокаИспользования,ДоговорКонтрагента,ИмяСписка,Контрагент,Период,ПодразделениеЗатрат,ПодразделениеОрганизации,РБП,СинонимСписка,СодержаниеОперации,СпособПризнанияРасходов,Субконто1,Субконто2,СуммаДоговора,СчетЗатрат,СчетЗатратВладелец,СчетУчета,СчетУчетаВладелец",
		"КонОстаток,КонОстатокВР,КонОстатокНУ,КонОстатокПР,НачОстаток,НачОстатокВР,НачОстатокНУ,НачОстатокПР,Сумма,СуммаНУ,СуммаПР,СуммаВР,СуммаСписания");
	
	ТаблицаСписаннияРБП.Колонки.Добавить("НомерСтроки");
	НомерСтроки = 1;
	Для Каждого Строка Из ТаблицаСписаннияРБП Цикл
		Строка.НомерСтроки = НомерСтроки;
		НомерСтроки = НомерСтроки + 1;
	КонецЦикла;

КонецПроцедуры


&Вместо("СформироватьДвиженияПереоценкаВалютныхОстатков")
Процедура pcru_ex_СформироватьДвиженияПереоценкаВалютныхОстатков(ТаблицаВалютныхОстатков, ТаблицаРеквизиты, Движения, Отказ)
	// Вставить содержимое метода.
	//ПродолжитьВызов(ТаблицаВалютныхОстатков, ТаблицаРеквизиты, Движения, Отказ);
	Параметры = ПодготовитьПараметрыПереоценкаВалютныхОстатков(ТаблицаВалютныхОстатков, ТаблицаРеквизиты);
	
	Если Параметры.Реквизиты.Количество() = 0
		ИЛИ Параметры.ТаблицаПереоценка.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Реквизиты = Параметры.Реквизиты[0];
	
	Дата              = Реквизиты.Период;
	Организация       = Реквизиты.Организация;
	ТаблицаПереоценка = Параметры.ТаблицаПереоценка;
	
	Проводки        = Движения.БНФОБанковский;
	
	ПустоеПодразделение = БухгалтерскийУчетПереопределяемый.ПустоеПодразделение();
	
	Для каждого СтрокаПереоценка Из ТаблицаПереоценка Цикл
			
		Проводка = Проводки.Вставить(0);
		
		Проводка.Период      = Дата;
		Проводка.Организация = Организация;
		Проводка.Содержание  = "Переоценка валютных остатков";
		
		// С 2010 года результат переоценки авансов в НУ не образует курсовых разниц в налоговом учете и относится на счет 99.09
		ЭтоАванс2010 = СтрокаПереоценка.ЭтоАванс И (Дата >= '20100101');
		
		// Начало изменений (Аудит-Эскорт, НСВ, 05.05.2017) >>
		КоэффициентСторно = ?(СтрокаПереоценка.АЭ_ЭтоСторно, -1 , 1); 
		// Конец изменений (Аудит-Эскорт, НСВ, 05.05.2017) <<
		
		Если (СтрокаПереоценка.СуммаПереоценки < 0) ИЛИ (СтрокаПереоценка.СуммаПереоценкиНУ < 0) Тогда
			
			Проводка.СчетКт						= СтрокаПереоценка.Счет;
			Проводка.СчетАналитическогоУчетаКт	= СтрокаПереоценка.СчетАналитическогоУчета;
			
			БНФОБухгалтерскийУчет.УстановитьСубконто(СтрокаПереоценка.Счет, Проводка.СубконтоКт, 1, СтрокаПереоценка.Субконто1);
			БНФОБухгалтерскийУчет.УстановитьСубконто(СтрокаПереоценка.Счет, Проводка.СубконтоКт, 2, СтрокаПереоценка.Субконто2);
			БНФОБухгалтерскийУчет.УстановитьСубконто(СтрокаПереоценка.Счет, Проводка.СубконтоКт, 3, СтрокаПереоценка.Субконто3);
			
			Если ЗначениеЗаполнено(СтрокаПереоценка.СтатьяДвиженияДенежныхСредств) Тогда
				БНФОБухгалтерскийУчет.УстановитьСубконто(СтрокаПереоценка.Счет, Проводка.СубконтоКт, "СтатьиДвиженияДенежныхСредств", СтрокаПереоценка.СтатьяДвиженияДенежныхСредств);
			КонецЕсли;
			
			Проводка.ВалютаКт = СтрокаПереоценка.Валюта;
			
			СвойстваСчетаКт = БНФОБухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетКт);
			
			Если СвойстваСчетаКт.УчетПоПодразделениям Тогда
				Проводка.ПодразделениеКт = СтрокаПереоценка.Подразделение;
			КонецЕсли;
						
			Проводка.СчетДт								= СтрокаПереоценка.СчетРасходов;
			Проводка.ПодразделениеДт					= СтрокаПереоценка.ПодразделениеРасходов;
			Проводка.СчетАналитическогоУчетаДт			= СтрокаПереоценка.СчетАналитическогоУчетаРасходов;
			Проводка.СубконтоДт.ПрочиеДоходыИРасходы	= СтрокаПереоценка.СтатьяРасходов;
			
			// Начало изменений (Аудит-Эскорт, НСВ, 05.05.2017) >>
			//Проводка.Сумма = -СтрокаПереоценка.СуммаПереоценки;
			Проводка.Сумма = -СтрокаПереоценка.СуммаПереоценки * КоэффициентСторно;
			// Конец изменений (Аудит-Эскорт, НСВ, 05.05.2017) <<
			
			СвойстваСчетаДт = БНФОБухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетДт);
			
			Если УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Организация, Дата) Тогда
				
				// Начало изменений (Аудит-Эскорт, НСВ, 05.05.2017) >>
				//СуммаНУ = -СтрокаПереоценка.СуммаПереоценкиНУ;
				СуммаНУ = -СтрокаПереоценка.СуммаПереоценкиНУ * КоэффициентСторно;
				// Конец изменений (Аудит-Эскорт, НСВ, 05.05.2017) <<
				
				ПринятиеКналоговомуУчету = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаПереоценка.СтатьяРасходов, "ПринятиеКналоговомуУчету");
				
				Если НЕ ПринятиеКналоговомуУчету Тогда	
					
					Если СвойстваСчетаДт.НалоговыйУчет Тогда
						Проводка.СуммаНУДт = 0;
						Проводка.СуммаПРДт = СуммаНУ;
						Проводка.СуммаВРДт = 0;
					КонецЕсли;
					
					Если СвойстваСчетаКт.НалоговыйУчет Тогда
						Проводка.СуммаНУКт = 0;
						Проводка.СуммаПРКт = СуммаНУ;
						Проводка.СуммаВРКт = 0;
					КонецЕсли;															
					
				Иначе 															
					
					Если СвойстваСчетаДт.НалоговыйУчет Тогда
						Проводка.СуммаНУДт = СуммаНУ;
						Проводка.СуммаВРДт = Проводка.Сумма - СуммаНУ;
						Проводка.СуммаПРДт = 0;
					КонецЕсли;
					
					Если СвойстваСчетаКт.НалоговыйУчет Тогда
						Проводка.СуммаНУКт = СуммаНУ;
						Проводка.СуммаВРКт = Проводка.Сумма - СуммаНУ;
						Проводка.СуммаПРКт = 0;
					КонецЕсли;										
					
				КонецЕсли; 								
				
			КонецЕсли;
					
			
			Если НЕ СвойстваСчетаДт.УчетПоПодразделениям Тогда
				Проводка.ПодразделениеДт = ПустоеПодразделение;
			КонецЕсли;
			
		Иначе
			
			Проводка.СчетДт						= СтрокаПереоценка.Счет;
			Проводка.СчетАналитическогоУчетаДт	= СтрокаПереоценка.СчетАналитическогоУчета;
			
			БНФОБухгалтерскийУчет.УстановитьСубконто(СтрокаПереоценка.Счет, Проводка.СубконтоДт, 1, СтрокаПереоценка.Субконто1);
			БНФОБухгалтерскийУчет.УстановитьСубконто(СтрокаПереоценка.Счет, Проводка.СубконтоДт, 2, СтрокаПереоценка.Субконто2);
			БНФОБухгалтерскийУчет.УстановитьСубконто(СтрокаПереоценка.Счет, Проводка.СубконтоДт, 3, СтрокаПереоценка.Субконто3);
			
			Если ЗначениеЗаполнено(СтрокаПереоценка.СтатьяДвиженияДенежныхСредств) Тогда
				БНФОБухгалтерскийУчет.УстановитьСубконто(СтрокаПереоценка.Счет, Проводка.СубконтоДт, "СтатьиДвиженияДенежныхСредств", СтрокаПереоценка.СтатьяДвиженияДенежныхСредств);
			КонецЕсли;
			
			Проводка.ВалютаДт = СтрокаПереоценка.Валюта;
			
			СвойстваСчетаДт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетДт);
			Если СвойстваСчетаДт.УчетПоПодразделениям Тогда
				Проводка.ПодразделениеДт = СтрокаПереоценка.Подразделение;
			КонецЕсли;
			
			Проводка.СчетКт								= СтрокаПереоценка.СчетДоходов;
			Проводка.ПодразделениеКт					= СтрокаПереоценка.ПодразделениеДоходов;
			Проводка.СчетАналитическогоУчетаКт			= СтрокаПереоценка.СчетАналитическогоУчетаДоходов;
			Проводка.СубконтоКт.ПрочиеДоходыИРасходы	= СтрокаПереоценка.СтатьяДоходов;
			
			// Начало изменений (Аудит-Эскорт, НСВ, 05.05.2017) >>
			//Проводка.Сумма = СтрокаПереоценка.СуммаПереоценки;
			Проводка.Сумма = СтрокаПереоценка.СуммаПереоценки * КоэффициентСторно;
			// Конец изменений (Аудит-Эскорт, НСВ, 05.05.2017) <<
			
			СвойстваСчетаКт = БНФОБухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетКт);
			
			Если УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Организация, Дата) Тогда
				
				// Начало изменений (Аудит-Эскорт, НСВ, 05.05.2017) >>
				//СуммаНУ = СтрокаПереоценка.СуммаПереоценкиНУ;
				СуммаНУ = СтрокаПереоценка.СуммаПереоценкиНУ * КоэффициентСторно;
				// Конец изменений (Аудит-Эскорт, НСВ, 05.05.2017) <<
				
				ПринятиеКналоговомуУчету = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаПереоценка.СтатьяДоходов, "ПринятиеКналоговомуУчету");
				
				Если НЕ ПринятиеКналоговомуУчету Тогда	
					
					Если СвойстваСчетаДт.НалоговыйУчет Тогда
						Проводка.СуммаНУДт = 0;
						Проводка.СуммаПРДт = СуммаНУ;
						Проводка.СуммаВРДт = 0;
					КонецЕсли;
					
					Если СвойстваСчетаКт.НалоговыйУчет Тогда
						Проводка.СуммаНУКт = 0;
						Проводка.СуммаПРКт = СуммаНУ;
						Проводка.СуммаВРКт = 0;
					КонецЕсли;															
					
				Иначе 															
					
					Если СвойстваСчетаДт.НалоговыйУчет Тогда
						Проводка.СуммаНУДт = СуммаНУ;
						Проводка.СуммаВРДт = Проводка.Сумма - СуммаНУ;
						Проводка.СуммаПРДт = 0;
					КонецЕсли;
					
					Если СвойстваСчетаКт.НалоговыйУчет Тогда
						Проводка.СуммаНУКт = СуммаНУ;
						Проводка.СуммаВРКт = Проводка.Сумма - СуммаНУ;
						Проводка.СуммаПРКт = 0;
					КонецЕсли;										
					
				КонецЕсли; 			
				
			КонецЕсли;
			
			
			Если НЕ СвойстваСчетаКт.УчетПоПодразделениям Тогда
				Проводка.ПодразделениеКт = ПустоеПодразделение;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Движения.БНФОБанковский.Записывать = Истина;

	
КонецПроцедуры

