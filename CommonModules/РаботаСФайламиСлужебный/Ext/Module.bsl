
&Вместо("ИменаСправочниковХраненияФайлов")
Функция pcru_ex_ИменаСправочниковХраненияФайлов(ВладелецФайлов, НеВызыватьИсключение)
	
	Результат = ПродолжитьВызов(ВладелецФайлов, НеВызыватьИсключение);
	Возврат Результат;

	Если ТипЗнч(ВладелецФайлов) = Тип("Тип") Тогда
		ТипВладельцаФайлов = ВладелецФайлов;
	Иначе
		ТипВладельцаФайлов = ТипЗнч(ВладелецФайлов);
	КонецЕсли;
	
	МетаданныеВладельца = Метаданные.НайтиПоТипу(ТипВладельцаФайлов);
	
	ИменаСправочников = Новый Соответствие;
	
	ИмяСтандартногоОсновногоСправочника = МетаданныеВладельца.Имя
		+ ?(СтрЗаканчиваетсяНа(МетаданныеВладельца.Имя, "ПрисоединенныеФайлы"), "", "ПрисоединенныеФайлы");
		
	Если Метаданные.Справочники.Найти(ИмяСтандартногоОсновногоСправочника) <> Неопределено Тогда
		ИменаСправочников.Вставить(ИмяСтандартногоОсновногоСправочника, Истина);
	ИначеЕсли Метаданные.ОпределяемыеТипы.ВладелецФайлов.Тип.СодержитТип(ТипВладельцаФайлов) Тогда
		ИменаСправочников.Вставить("Файлы", Истина);
	КонецЕсли;
	
	Если МетаданныеВладельца.Имя = "БНФОМемориальныйОрдер" Тогда
		ИменаСправочников.Вставить("Файлы", Истина);
	КонецЕсли;

	
	// Переопределение стандартного справочника хранения присоединенных файлов.
	РаботаСФайламиПереопределяемый.ПриОпределенииСправочниковХраненияФайлов(
		ТипВладельцаФайлов, ИменаСправочников);
	
	ОсновнойСправочникУказан = Ложь;
	
	Для каждого КлючИЗначение Из ИменаСправочников Цикл
		
		Если Метаданные.Справочники.Найти(КлючИЗначение.Ключ) = Неопределено Тогда
			
			ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Ошибка при определении имен справочников для хранения файлов.
				           |У владельца файлов типа ""%1""
				           |указан несуществующий справочник ""%2"".'"),
				Строка(ТипВладельцаФайлов),
				Строка(КлючИЗначение.Ключ));
				
		ИначеЕсли Не СтрЗаканчиваетсяНа(КлючИЗначение.Ключ, "ПрисоединенныеФайлы") И Не КлючИЗначение.Ключ ="Файлы" Тогда
			
			ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Ошибка при определении имен справочников для хранения файлов.
				           |У владельца файлов типа ""%1""
				           |указано имя справочника ""%2""
				           |без окончания ""ПрисоединенныеФайлы"".'"),
				Строка(ТипВладельцаФайлов),
				Строка(КлючИЗначение.Ключ));
			
		ИначеЕсли КлючИЗначение.Значение = Неопределено Тогда
			ИменаСправочников.Вставить(КлючИЗначение.Ключ, Ложь);
			
		ИначеЕсли КлючИЗначение.Значение = Истина Тогда
			Если ОсновнойСправочникУказан Тогда
				ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Ошибка при определении имен справочников для хранения файлов.
					           |У владельца файлов типа ""%1""
					           |основной справочник указан более одного раза.'"),
					Строка(ТипВладельцаФайлов),
					Строка(КлючИЗначение.Ключ));
			КонецЕсли;
			ОсновнойСправочникУказан = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Если ИменаСправочников.Количество() = 0 Тогда
		
		Если НеВызыватьИсключение Тогда
			Возврат ИменаСправочников;
		КонецЕсли;
		
		ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Ошибка при определении имен справочников для хранения файлов.
			           |У владельца файлов типа ""%1""
			           |не имеется справочников для хранения файлов.'"),
			Строка(ТипВладельцаФайлов));
	КонецЕсли;
	
	Возврат ИменаСправочников;
	

	
	//// Вставить содержимое метода.
	//Результат = ПродолжитьВызов(ВладелецФайлов, НеВызыватьИсключение);
	//Возврат Результат;
КонецФункции
