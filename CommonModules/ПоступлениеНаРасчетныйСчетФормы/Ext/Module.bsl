
&Вместо("ИнициализироватьСвойстваПлатежа")
Процедура pcru_ex_ИнициализироватьСвойстваПлатежа(Форма, ТолькоСоздатьКлючи, ПолучатьДоговор, ИнициализироватьСтатьюДДС)
	Если Форма.СвойстваПлатежа = Неопределено Тогда
		
		Если ТолькоСоздатьКлючи Тогда
			Форма.СвойстваПлатежа = ПоступлениеНаРасчетныйСчетФормыКлиентСервер.ПустаяСтруктураСвойстваПлатежа();
			Если ИнициализироватьСтатьюДДС Тогда
				Если ПоступлениеНаРасчетныйСчетФормыКлиентСервер.ФормаДокументаОднострочная(Форма)
					И Форма.Объект.РасшифровкаПлатежа.Количество() = 1 Тогда
					Форма.СвойстваПлатежа.Вставить("СтатьяДвиженияДенежныхСредств", Форма.РасшифровкаПлатежаСтатьяДвиженияДенежныхСредств);
					// Начало изменений (Аудит-Эскорт, СИМ, 28.11.2017) >>
					Форма.СвойстваПлатежа.Вставить("БНФОВидПлатежаПоКредитамЗаймам", Форма.РасшифровкаПлатежаБНФОВидПлатежаПоКредитамЗаймам);
					// Конец изменений (Аудит-Эскорт, СИМ, 28.11.2017) <<
				Иначе
					РасшифровкаПлатежа = ПоступлениеНаРасчетныйСчетФормыКлиентСервер.ПолучитьРасшифровкаПлатежа(Форма);
					//++ Севрюгин А.А
					Если РасшифровкаПлатежа.Количество() > 0 Тогда
						//-- Севрюгин А.А
						
						Форма.СвойстваПлатежа.Вставить("СтатьяДвиженияДенежныхСредств", РасшифровкаПлатежа[0].СтатьяДвиженияДенежныхСредств);
						// Начало изменений (Аудит-Эскорт, СИМ, 28.11.2017) >>
						Форма.СвойстваПлатежа.Вставить("БНФОВидПлатежаПоКредитамЗаймам", РасшифровкаПлатежа[0].БНФОВидПлатежаПоКредитамЗаймам);
						// Конец изменений (Аудит-Эскорт, СИМ, 28.11.2017) <<
						
						//++ Севрюгин А.А
					КонецЕсли; 
					//-- Севрюгин А.А
				КонецЕсли;
			КонецЕсли;
		Иначе
			ПараметрыОбъекта = ПоступлениеНаРасчетныйСчетФормыКлиентСервер.ТекущиеПараметрыОбъекта(Форма);
			Если ПоступлениеНаРасчетныйСчетФормыКлиентСервер.ФормаДокументаОднострочная(Форма)
				И Форма.Объект.РасшифровкаПлатежа.Количество() = 1 Тогда
				ПараметрыОбъекта.Вставить("ДоговорКонтрагента",            Форма.РасшифровкаПлатежаДоговорКонтрагента);
				ПараметрыОбъекта.Вставить("СтатьяДвиженияДенежныхСредств", Форма.РасшифровкаПлатежаСтатьяДвиженияДенежныхСредств);
				// Начало изменений (Аудит-Эскорт, СИМ, 28.11.2017) >>
				ПараметрыОбъекта.Вставить("БНФОВидПлатежаПоКредитамЗаймам", Форма.РасшифровкаПлатежаБНФОВидПлатежаПоКредитамЗаймам);
				// Конец изменений (Аудит-Эскорт, СИМ, 28.11.2017) <<
			Иначе
				РасшифровкаПлатежа = ПоступлениеНаРасчетныйСчетФормыКлиентСервер.ПолучитьРасшифровкаПлатежа(Форма);
				
				//++ Севрюгин А.А
				Если РасшифровкаПлатежа.Количество() > 0 Тогда
					//-- Севрюгин А.А
					
					ПараметрыОбъекта.Вставить("ДоговорКонтрагента",            РасшифровкаПлатежа[0].ДоговорКонтрагента);
					ПараметрыОбъекта.Вставить("СтатьяДвиженияДенежныхСредств", РасшифровкаПлатежа[0].СтатьяДвиженияДенежныхСредств);
					
					// Начало изменений (Аудит-Эскорт, СИМ, 28.11.2017) >>
					ПараметрыОбъекта.Вставить("БНФОВидПлатежаПоКредитамЗаймам", РасшифровкаПлатежа[0].БНФОВидПлатежаПоКредитамЗаймам);
					// Конец изменений (Аудит-Эскорт, СИМ, 28.11.2017) <<
					
					// {БНФО} 
					
					Если Форма.БНФОИспользуетсяУчетНФО Тогда
						ПараметрыОбъекта.Вставить("СчетУчетаРасчетовПоАвансам",    РасшифровкаПлатежа[0].СчетУчетаРасчетовПоАвансам);
						ПараметрыОбъекта.Вставить("СчетУчетаРасчетовСКонтрагентом",РасшифровкаПлатежа[0].СчетУчетаРасчетовСКонтрагентом);
					КонецЕсли;
					
					// {/БНФО} 
					
					//++ Севрюгин А.А
				КонецЕсли; 
				//-- Севрюгин А.А
				
			КонецЕсли;
			
			Форма.СвойстваПлатежа = ПоступлениеНаРасчетныйСчетФормыКлиентСервер.СвойстваСтрокРасшифровкиПлатежа(
			ПараметрыОбъекта, ПолучатьДоговор);
			Форма.СвойстваПлатежа.ПорядокОтраженияАванса = НалоговыйУчетУСН.ПорядокОтраженияАванса(
			ПараметрыОбъекта.Организация, ПараметрыОбъекта.Дата);
		КонецЕсли;
		
	КонецЕсли;
	
	
	
	//// Вставить содержимое метода.
	//ПродолжитьВызов(Форма, ТолькоСоздатьКлючи, ПолучатьДоговор, ИнициализироватьСтатьюДДС);
КонецПроцедуры

//&Вместо("СвойстваСтрокРасшифровкиПлатежаСервер")
//Функция pcru_ex_СвойстваСтрокРасшифровкиПлатежаСервер(Знач ПараметрыПлатежа, Знач ПолучатьДоговор)
//	СвойстваПлатежа = ПоступлениеНаРасчетныйСчетФормыКлиентСервер.ПустаяСтруктураСвойстваПлатежа();
//	
//	Если ПолучатьДоговор Тогда
//		ПараметрыПлатежа.ДоговорКонтрагента = УчетДенежныхСредствБП.ПолучитьДоговорКонтрагента(ПараметрыПлатежа);
//		
//		// {БНФО}       
//		
//		// {++НФО}
//		
//		БНФОИспользуетсяУчетНФО = БНФООбщегоНазначенияНФОПовтИсп.ИспользуетсяУчетНФО(ПараметрыПлатежа.Организация, ПараметрыПлатежа.Дата);
//		Если БНФОИспользуетсяУчетНФО 
//			И ПараметрыПлатежа.Свойство("БНФОКонверсионныйДоговор") И ЗначениеЗаполнено(ПараметрыПлатежа.БНФОКонверсионныйДоговор) Тогда
//			
//			Если ПараметрыПлатежа.ВидОперации = Перечисления.ВидыОперацийПоступлениеДенежныхСредств.ПриобретениеИностраннойВалюты Тогда
//				ПараметрыПлатежа.ДоговорКонтрагента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПараметрыПлатежа.БНФОКонверсионныйДоговор, "ДоговорКонтрагентаРублевый");
//			ИначеЕсли ПараметрыПлатежа.ВидОперации = Перечисления.ВидыОперацийПоступлениеДенежныхСредств.ПоступленияОтПродажиИностраннойВалюты Тогда
//				ПараметрыПлатежа.ДоговорКонтрагента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПараметрыПлатежа.БНФОКонверсионныйДоговор, "ДоговорКонтрагентаВалютный");
//			КонецЕсли;
//			
//		КонецЕсли;
//		
//		// {/++НФО}
//		
//		// {/БНФО}
//		
//	КонецЕсли;
//	
//	СвойстваПлатежа.ДоговорКонтрагента            = ПараметрыПлатежа.ДоговорКонтрагента;
//	СвойстваПлатежа.СпособПогашенияЗадолженности  = Перечисления.СпособыПогашенияЗадолженности.Автоматически;
//	СтатьяДДСПоУмолчанию = УчетДенежныхСредствБП.СтатьяДДСПоУмолчанию(ПараметрыПлатежа.ВидОперации);
//	СвойстваПлатежа.СтатьяДвиженияДенежныхСредств = ?(ЗначениеЗаполнено(СтатьяДДСПоУмолчанию) ИЛИ ПолучатьДоговор,
//	СтатьяДДСПоУмолчанию, ПараметрыПлатежа.СтатьяДвиженияДенежныхСредств);
//	
//	// Начало изменений (Аудит-Эскорт, СИМ, 12.10.2017) >>
//	Если ПараметрыПлатежа.Свойство("БНФОВидПлатежаПоКредитамЗаймам") Тогда  
//		СвойстваПлатежа.БНФОВидПлатежаПоКредитамЗаймам = ПараметрыПлатежа.БНФОВидПлатежаПоКредитамЗаймам;
//		// Статья ДДС
//		Если ПараметрыПлатежа.ВидОперации = Перечисления.ВидыОперацийПоступлениеДенежныхСредств.ВозвратЗаймаКонтрагентом Тогда
//			Если СвойстваПлатежа.БНФОВидПлатежаПоКредитамЗаймам = Перечисления.ВидыПлатежейПоКредитамЗаймам.АЭ_ТекущийСчетРасчетов
//				Или СвойстваПлатежа.БНФОВидПлатежаПоКредитамЗаймам = Перечисления.ВидыПлатежейПоКредитамЗаймам.АЭ_ПрочиеРасчеты Тогда
//				// Получить статью ДДС			
//				ДанынеСтроки = Новый Структура("БНФОДоговорКредитаДепозита", СвойстваПлатежа.ДоговорКонтрагента);			
//				ДанынеСтроки.Вставить("БНФОВидПлатежаПоКредитамЗаймам", СвойстваПлатежа.БНФОВидПлатежаПоКредитамЗаймам); 
//				СвойстваПлатежа.СтатьяДвиженияДенежныхСредств = АЭ_Займы.ПолучитьСтатьюДДСПоСтрокеПлатежногоДокумента(ДанынеСтроки, ПараметрыПлатежа);			
//			КонецЕсли;	
//		КонецЕсли;	
//	КонецЕсли;	
//	// Конец изменений (Аудит-Эскорт, СИМ, 12.10.2017) <<
//	
//	Если ЗначениеЗаполнено(ПараметрыПлатежа.ДоговорКонтрагента) Тогда
//		СвойстваДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
//		ПараметрыПлатежа.ДоговорКонтрагента, "ВалютаВзаиморасчетов, РасчетыВУсловныхЕдиницах");
//		СвойстваПлатежа.ВалютаДокумента                            = ПараметрыПлатежа.ВалютаДокумента;
//		СвойстваПлатежа.ДоговорКонтрагентаВалютаВзаиморасчетов     = СвойстваДоговора.ВалютаВзаиморасчетов;
//		СвойстваПлатежа.ДоговорКонтрагентаРасчетыВУсловныхЕдиницах = СвойстваДоговора.РасчетыВУсловныхЕдиницах;
//		
//		Если ПараметрыПлатежа.ВидОперации <> Перечисления.ВидыОперацийПоступлениеДенежныхСредств.ПриобретениеИностраннойВалюты Тогда
//			СтруктураКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(СвойстваДоговора.ВалютаВзаиморасчетов, ПараметрыПлатежа.Дата);
//		Иначе
//			СтруктураКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ПараметрыПлатежа.ВалютаДокумента, ПараметрыПлатежа.Дата);
//		КонецЕсли;
//		
//		СвойстваПлатежа.КурсВзаиморасчетов      = СтруктураКурса.Курс;
//		СвойстваПлатежа.КратностьВзаиморасчетов = СтруктураКурса.Кратность;
//		СвойстваПлатежа.КурсНаДатуПриобретенияРеализацииВалюты = СтруктураКурса.Курс;
//		
//		// {БНФО} 
//		
//		
//		БНФОИспользуетсяУчетНФО = БНФООбщегоНазначенияНФОПовтИсп.ИспользуетсяУчетНФО(ПараметрыПлатежа.Организация, ПараметрыПлатежа.Дата);
//		Если БНФОИспользуетсяУчетНФО Тогда
//			Если ПараметрыПлатежа.Свойство("СчетУчетаРасчетовПоАвансам") 
//				И ПараметрыПлатежа.Свойство("СчетУчетаРасчетовСКонтрагентом")
//				И СвойстваПлатежа.Свойство("СчетУчетаРасчетовПоАвансам") 
//				И СвойстваПлатежа.Свойство("СчетУчетаРасчетовСКонтрагентом")  Тогда
//				
//				ЗаполнитьЗначенияСвойств(СвойстваПлатежа, ПараметрыПлатежа, "СчетУчетаРасчетовСКонтрагентом, СчетУчетаРасчетовПоАвансам");
//				
//			КонецЕсли;
//		КонецЕсли;
//		
//		
//		// {/БНФО} 
//		
//	Иначе
//		
//		Если ЗначениеЗаполнено(ПараметрыПлатежа.ВалютаДокумента) Тогда
//			СвойстваПлатежа.ВалютаДокумента = ПараметрыПлатежа.ВалютаДокумента;
//		Иначе
//			СвойстваПлатежа.ВалютаДокумента = ПараметрыПлатежа.ВалютаРегламентированногоУчета;
//		КонецЕсли;
//		
//		СвойстваПлатежа.КурсВзаиморасчетов      = 1;
//		СвойстваПлатежа.КратностьВзаиморасчетов = 1;
//		СвойстваПлатежа.КурсНаДатуПриобретенияРеализацииВалюты = 1;
//	КонецЕсли;
//	
//	СтавкаНДС = СтавкаНДСРасшифровкиПлатежа(ПараметрыПлатежа.Дата, ПараметрыПлатежа.ВидОперации,
//	ПараметрыПлатежа.ДоговорКонтрагента, ПараметрыПлатежа.ПрименениеУСН,
//	ПараметрыПлатежа.ПрименяетсяОсобыйПорядокНалогообложения);
//	Если СтавкаНДС <> Неопределено Тогда
//		СвойстваПлатежа.СтавкаНДС = СтавкаНДС;
//	КонецЕсли;
//	
//	// Порядок отражения аванса по умолчанию
//	СвойстваПлатежа.ПорядокОтраженияАванса = НалоговыйУчетУСН.ПорядокОтраженияАванса(ПараметрыПлатежа.Организация, ПараметрыПлатежа.Дата);
//	
//	// {БНФО}
//	
//	БНФОИспользуетсяУчетНФО = БНФООбщегоНазначенияНФОПовтИсп.ИспользуетсяУчетНФО(ПараметрыПлатежа.Организация, ПараметрыПлатежа.Дата);
//	Если БНФОИспользуетсяУчетНФО Тогда
//		Если ПараметрыПлатежа.ВидОперации = Перечисления.ВидыОперацийПоступлениеДенежныхСредств.БНФОПоступлениеПоДепозитам Тогда
//			//++ Севрюгин А.А
//			ЗаполнитьЗначенияСвойств(СвойстваПлатежа, ПараметрыПлатежа, 
//			"БНФОВидПлатежаПоКредитамЗаймам,  СчетУчетаРасчетовСКонтрагентом");
//			//-- Севрюгин А.А
//		КонецЕсли;
//	КонецЕсли;	
//	
//	// {/БНФО}
//	
//	Возврат СвойстваПлатежа;
//	
//КонецФункции
