

// Замена Символа на перенос
//
// Параметры:
//  Стр  - Строка 
//  Что  - Строка 
// Возвращаемое значение:
//   Строка
//
Функция ЗаменитьНаПС(Стр,Что)
	Возврат СтрЗаменить(Стр,Что,Символы.ПС);
КонецФункции // ЗаменитьНаПС()


&НаСервере
&Вместо("ЗаполнитьСтрокуПоХозяйственнойОперации")
Процедура pcru_ex_ЗаполнитьСтрокуПоХозяйственнойОперации(РаспознанныеДанныеИзБанка, СтрокаТаблицы, ХозяйственнаяОперация)
	Если не ХозяйственнаяОперация.Свойство("Контрагент") или не ХозяйственнаяОперация.Свойство("БанковскийСчетКонтрагента") Тогда
		Для каждого Выписка  Из РаспознанныеДанныеИзБанка.Выписки Цикл
			Для каждого Операция Из Выписка.Значение.Операции Цикл
				Если Операция.НомерДокумента = СтрокаТаблицы.НомерДок Тогда
					Запрос = Новый Запрос;
					Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
					|	Контрагенты.Ссылка КАК Контрагент,
					|	ДоговорыКонтрагентов.Ссылка КАК Договор,
					|	БанковскиеСчета.Ссылка КАК Счет
					|ИЗ
					|	Справочник.Контрагенты КАК Контрагенты
					|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
					|		ПО Контрагенты.Ссылка = БанковскиеСчета.Владелец
					|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
					|		ПО Контрагенты.Ссылка = ДоговорыКонтрагентов.Владелец
					|ГДЕ
					|	Контрагенты.Наименование ПОДОБНО  &НаименованиеПолное + ""%""";
					Запрос.УстановитьПараметр("НаименованиеПолное",лев(Операция.ПлательщикРеквизиты.Наименование,40));
					Выборка = Запрос.Выполнить().Выбрать();
					Если Выборка.Следующий() Тогда
						Контрагент = Выборка.Контрагент;
						ДоговорКонтрагента = Выборка.Договор;
						БанковскийСчетКонтрагента   = Выборка.Счет;
					Иначе
						МногострокаЛС = Операция.НазначениеПлатежа;
						МногострокаЛС = ЗаменитьНаПС(МногострокаЛС,"(");
						МногострокаЛС = ЗаменитьНаПС(МногострокаЛС,"""");
						МногострокаЛС = ЗаменитьНаПС(МногострокаЛС,"/");
						МногострокаЛС = ЗаменитьНаПС(МногострокаЛС,"\");
						МногострокаЛС = ЗаменитьНаПС(МногострокаЛС,";");
						МногострокаЛС = ЗаменитьНаПС(МногострокаЛС,"%");
						МногострокаЛС = ЗаменитьНаПС(МногострокаЛС,"№");
						МногострокаЛС = ЗаменитьНаПС(МногострокаЛС,":");
						МногострокаЛС = ЗаменитьНаПС(МногострокаЛС,")");
						МногострокаЛС = ЗаменитьНаПС(МногострокаЛС,"[");
						МногострокаЛС = ЗаменитьНаПС(МногострокаЛС,"]");
						МногострокаЛС = ЗаменитьНаПС(МногострокаЛС," ");
						МногострокаЛС = ЗаменитьНаПС(МногострокаЛС,"	");
						МногострокаЛС = ЗаменитьНаПС(МногострокаЛС,"-");
						МногострокаЛС = ЗаменитьНаПС(МногострокаЛС,".");
						МногострокаЛС = ЗаменитьНаПС(МногострокаЛС,",");
						//МногострокаЛС = ЗаменитьНаПС(МногострокаЛС,"й");
						//МногострокаЛС = ЗаменитьНаПС(МногострокаЛС,"ц");
						//МногострокаЛС = ЗаменитьНаПС(МногострокаЛС,"у");
						//МногострокаЛС = ЗаменитьНаПС(МногострокаЛС,"к");
						//МногострокаЛС = ЗаменитьНаПС(МногострокаЛС,"е");
						//МногострокаЛС = ЗаменитьНаПС(МногострокаЛС,"н");
						//МногострокаЛС = ЗаменитьНаПС(МногострокаЛС,"г");
						//МногострокаЛС = ЗаменитьНаПС(МногострокаЛС,"ш");
						//МногострокаЛС = ЗаменитьНаПС(МногострокаЛС,"щ");
						//МногострокаЛС = ЗаменитьНаПС(МногострокаЛС,"з");
						//МногострокаЛС = ЗаменитьНаПС(МногострокаЛС,"х");
						//МногострокаЛС = ЗаменитьНаПС(МногострокаЛС,"ъ");
						//МногострокаЛС = ЗаменитьНаПС(МногострокаЛС,"ф");
						//МногострокаЛС = ЗаменитьНаПС(МногострокаЛС,"ы");
						//МногострокаЛС = ЗаменитьНаПС(МногострокаЛС,"в");
						//МногострокаЛС = ЗаменитьНаПС(МногострокаЛС,"а");
						//МногострокаЛС = ЗаменитьНаПС(МногострокаЛС,"п");
						//МногострокаЛС = ЗаменитьНаПС(МногострокаЛС,"р");
						//МногострокаЛС = ЗаменитьНаПС(МногострокаЛС,"о");
						//МногострокаЛС = ЗаменитьНаПС(МногострокаЛС,"л");
						//МногострокаЛС = ЗаменитьНаПС(МногострокаЛС,"д");
						//МногострокаЛС = ЗаменитьНаПС(МногострокаЛС,"ж");
						//МногострокаЛС = ЗаменитьНаПС(МногострокаЛС,"э");
						//МногострокаЛС = ЗаменитьНаПС(МногострокаЛС,"я");
						//МногострокаЛС = ЗаменитьНаПС(МногострокаЛС,"ч");
						//МногострокаЛС = ЗаменитьНаПС(МногострокаЛС,"с");
						//МногострокаЛС = ЗаменитьНаПС(МногострокаЛС,"м");
						//МногострокаЛС = ЗаменитьНаПС(МногострокаЛС,"и");
						//МногострокаЛС = ЗаменитьНаПС(МногострокаЛС,"т");
						//МногострокаЛС = ЗаменитьНаПС(МногострокаЛС,"ь");
						//МногострокаЛС = ЗаменитьНаПС(МногострокаЛС,"б");
						//МногострокаЛС = ЗаменитьНаПС(МногострокаЛС,"ю");
						Для Счетчик = 1 По СтрЧислоСтрок(МногострокаЛС) Цикл
							ТекСтрока = СтрПолучитьСтроку(МногострокаЛС, Счетчик);
							Если ЗначениеЗаполнено(ТекСтрока) Тогда
								Запрос = Новый Запрос;
								Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
								|	Контрагенты.Ссылка КАК Контрагент,
								|	ДоговорыКонтрагентов.Ссылка КАК Договор,
								|	БанковскиеСчета.Ссылка КАК Счет
								|ИЗ
								|	Справочник.Контрагенты КАК Контрагенты
								|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
								|		ПО Контрагенты.Ссылка = БанковскиеСчета.Владелец
								|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
								|		ПО Контрагенты.Ссылка = ДоговорыКонтрагентов.Владелец
								|ГДЕ
								|	Контрагенты.НаименованиеПолное ПОДОБНО ""%"" + &НаименованиеПолное + ""%""";
								Запрос.УстановитьПараметр("НаименованиеПолное",ТекСтрока );
								Выборка = Запрос.Выполнить().Выбрать();
								Если Выборка.Следующий() Тогда
									Контрагент = Выборка.Контрагент;
									ДоговорКонтрагента = Выборка.Договор;
									БанковскийСчетКонтрагента   = Выборка.Счет;
									Прервать;
								КонецЕсли;
							КонецЕсли;  
						КонецЦикла;
					КонецЕсли;
					Если ЗначениеЗаполнено(Контрагент)  Тогда
						ХозяйственнаяОперация.Вставить("Контрагент",Контрагент);
					КонецЕсли; 
					Если ЗначениеЗаполнено(БанковскийСчетКонтрагента)  Тогда
						ХозяйственнаяОперация.Вставить("БанковскийСчетКонтрагента",БанковскийСчетКонтрагента);
					Иначе
						БС = Справочники.БанковскиеСчета.СоздатьЭлемент();
						БС.Владелец = Контрагент;
					Если Операция.ПлательщикРеквизиты.Свойство("Банк") тогда
						БС.Банк = Справочники.Банки.НайтиПоНаименованию(Операция.ПлательщикРеквизиты.Банк);
					Иначе
						БС.Банк = Справочники.Банки.НайтиПоНаименованию(Операция.ПолучательРеквизиты.Банк);
					КонецЕсли;
					
					
					Если Операция.ПлательщикРеквизиты.Свойство("РасчСчет") тогда
						БС.НомерСчета = Справочники.Банки.НайтиПоНаименованию(Операция.ПлательщикРеквизиты.РасчСчет);
						БС.Наименование =Операция.ПлательщикРеквизиты.РасчСчет;
					Иначе
						БС.НомерСчета = Справочники.Банки.НайтиПоНаименованию(Операция.ПолучательРеквизиты.РасчСчет);
						БС.Наименование =Операция.ПолучательРеквизиты.РасчСчет;
					КонецЕсли;
					
					
					
					//БС.НомерСчета = Операция.ПлательщикРеквизиты.РасчСчет;
					//	БС.Наименование =Операция.ПлательщикРеквизиты.РасчСчет;
						БС.ВалютаДенежныхСредств = Справочники.Валюты.НайтиПоКоду("643");
						
						Если ЗначениеЗаполнено(БС.Владелец) Тогда
							БС.Записать();
							ХозяйственнаяОперация.Вставить("БанковскийСчетКонтрагента",БС.Ссылка);
						КонецЕсли;
					КонецЕсли; 
					Если ЗначениеЗаполнено(ДоговорКонтрагента)  Тогда
						ХозяйственнаяОперация.Вставить("ДоговорКонтрагента",ДоговорКонтрагента);
					КонецЕсли; 
				КонецЕсли; 
			КонецЦикла;
		КонецЦикла; 
	КонецЕсли;
	
	ШаблоныТекстов = Новый Структура;
	ШаблоныТекстов.Вставить("КонтрагентРасчетныйСчет");
	ШаблоныТекстов.Вставить("Договор");
	Если Объект.СоздаватьНенайденныеЭлементы Тогда
		ШаблоныТекстов.КонтрагентРасчетныйСчет = НСтр("ru = 'Не загружен (%1)'");
		ШаблоныТекстов.Договор                 = НСтр("ru = 'Не создан'");
	Иначе
		ШаблоныТекстов.КонтрагентРасчетныйСчет = НСтр("ru = 'Не найден (%1)'");
		ШаблоныТекстов.Договор                 = НСтр("ru = 'Не найден'");
	КонецЕсли;
	
	Если ХозяйственнаяОперация.Свойство("ВидОперацииДокумента") Тогда
		СтрокаТаблицы.ВидОперации = ХозяйственнаяОперация.ВидОперацииДокумента;
	КонецЕсли;
	Если ХозяйственнаяОперация.Свойство("СтатьяДвиженияДенежныхСредств") Тогда
		СтрокаТаблицы.СтатьяДДС   = ХозяйственнаяОперация.СтатьяДвиженияДенежныхСредств;
	КонецЕсли;
	
	// Контрагент
	Если ТипЗнч(СтрокаТаблицы.ВидОперации) = Тип("ПеречислениеСсылка.ВидыОперацийСписаниеДенежныхСредств") Тогда
		ТребуетсяКонтрагент = Документы.СписаниеСРасчетногоСчета.КонтрагентДолженБытьЗаполнен(СтрокаТаблицы.ВидОперации);
	Иначе
		ТребуетсяКонтрагент = Документы.ПоступлениеНаРасчетныйСчет.КонтрагентДолженБытьЗаполнен(СтрокаТаблицы.ВидОперации);
	КонецЕсли;
	Если ХозяйственнаяОперация.Свойство("Контрагент") Тогда
		РаспознанныйКонтрагент = ХозяйственнаяОперация.Контрагент;
		НовыйКонтрагент = ИдентификацияУчастниковБанковскихОпераций.ОписаниеНовогоОбъекта(
		РаспознанныйКонтрагент,
		РаспознанныеДанныеИзБанка.УчастникиОпераций);
		
		Если ЗначениеЗаполнено(РаспознанныйКонтрагент) Тогда
			Если НовыйКонтрагент = Неопределено Тогда
				СтрокаТаблицы.Контрагент = РаспознанныйКонтрагент;
				СтрокаТаблицы.КонтрагентОтображениеНенайденного = "";
				СтрокаТаблицы.РеквизитыКонтрагента = НовыйОписаниеКонтрагента();
			Иначе
				СтрокаТаблицы.КонтрагентСсылкаДляНового = РаспознанныйКонтрагент;
				ТипСсылкиКонтрагенты = Тип("СправочникСсылка.Контрагенты");
				Если ТипЗнч(РаспознанныйКонтрагент) = ТипСсылкиКонтрагенты Тогда
					СтрокаТаблицы.Контрагент = Справочники.Контрагенты.ПустаяСсылка();
					СтрокаТаблицы.КонтрагентОтображениеНенайденного = СтрШаблон(ШаблоныТекстов.КонтрагентРасчетныйСчет, НовыйКонтрагент.НаименованиеПолное);
					
					НовыйКонтрагентОписаниеСсылки = ИдентификацияУчастниковБанковскихОпераций.ОписаниеСсылки(
					РаспознанныйКонтрагент, РаспознанныеДанныеИзБанка.УчастникиОпераций);
					СтрокаТаблицы.РеквизитыКонтрагента = НовыйОписаниеКонтрагента();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицы.РеквизитыКонтрагента, НовыйКонтрагент);
					ЗаполнитьЗначенияСвойств(СтрокаТаблицы.РеквизитыКонтрагента, НовыйКонтрагентОписаниеСсылки);
					
					НастройкиЗаполнения = РаспознанныеДанныеИзБанка.Настройки.ЗаполнениеНовыхЭлементов[ТипСсылкиКонтрагенты];
					Если НастройкиЗаполнения <> Неопределено Тогда
						ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(СтрокаТаблицы.РеквизитыКонтрагента, НастройкиЗаполнения, Истина);
					КонецЕсли;
				ИначеЕсли ТипЗнч(РаспознанныйКонтрагент) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
					Наименование = СокрЛП(СтрЗаменить(НовыйКонтрагент.Наименование, НовыйКонтрагент.ИНН, ""));
					СтрокаТаблицы.Контрагент = Справочники.ФизическиеЛица.ПустаяСсылка();
					СтрокаТаблицы.КонтрагентОтображениеНенайденного = СтрШаблон(ШаблоныТекстов.КонтрагентРасчетныйСчет, Наименование);
					СтрокаТаблицы.РеквизитыКонтрагента = НовыйОписаниеКонтрагента();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицы.РеквизитыКонтрагента, НовыйКонтрагент);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ТребуетсяКонтрагент Тогда
		СтрокаТаблицы.Контрагент = Новый(УчетДенежныхСредствКлиентСервер.ТипКонтрагентаПоВидуОперации(СтрокаТаблицы.ВидОперации));
		СтрокаТаблицы.КонтрагентОтображениеНенайденного = НСтр("ru = 'Не указаны реквизиты контрагента'");
		СтрокаТаблицы.РеквизитыКонтрагента = НовыйОписаниеКонтрагента();
	КонецЕсли;
	
	// Счет контрагента
	Если ХозяйственнаяОперация.Свойство("БанковскийСчетКонтрагента") Тогда
		РаспознанныйСчетКонтрагента = ХозяйственнаяОперация.БанковскийСчетКонтрагента;
		Если ЗначениеЗаполнено(РаспознанныйСчетКонтрагента) Тогда
			НовыйСчетКонтрагента = ИдентификацияУчастниковБанковскихОпераций.ОписаниеНовогоОбъекта(
			РаспознанныйСчетКонтрагента,
			РаспознанныеДанныеИзБанка.УчастникиОпераций);
			Если НовыйСчетКонтрагента = Неопределено Тогда
				СтрокаТаблицы.СчетКонтрагента = РаспознанныйСчетКонтрагента;
			Иначе
				СтрокаТаблицы.СчетКонтрагента = Справочники.БанковскиеСчета.ПустаяСсылка();
				СтрокаТаблицы.СчетКонтрагентаСсылкаДляНового = РаспознанныйСчетКонтрагента;
				СтрокаТаблицы.СчетКонтрагентаОтображениеНенайденного = СтрШаблон(ШаблоныТекстов.КонтрагентРасчетныйСчет, НовыйСчетКонтрагента.НомерСчета);
			КонецЕсли;
		Иначе
			СтрокаТаблицы.СчетКонтрагента = Справочники.БанковскиеСчета.ПустаяСсылка();
			СтрокаТаблицы.СчетКонтрагентаСсылкаДляНового = РаспознанныйСчетКонтрагента;
			СтрокаТаблицы.СчетКонтрагентаОтображениеНенайденного = НСтр("ru = 'Не найден'");
		КонецЕсли;
	ИначеЕсли ТребуетсяКонтрагент Тогда
		СтрокаТаблицы.СчетКонтрагентаОтображениеНенайденного = НСтр("ru = 'Не указаны реквизиты расчетного счета'");
	КонецЕсли;
	
	// Договор
	Если ХозяйственнаяОперация.Свойство("ДоговорКонтрагента") Тогда
		РаспознанныйДоговор = ХозяйственнаяОперация.ДоговорКонтрагента;
		Если ЗначениеЗаполнено(РаспознанныйДоговор) Тогда
			НовыйДоговор = ИдентификацияУчастниковБанковскихОпераций.ОписаниеНовогоОбъекта(
			РаспознанныйДоговор,
			РаспознанныеДанныеИзБанка.УчастникиОпераций);
			Если НовыйДоговор = Неопределено Тогда
				СтрокаТаблицы.Договор = РаспознанныйДоговор;
			Иначе
				СтрокаТаблицы.ДоговорСсылкаДляНового = РаспознанныйДоговор;
				СтрокаТаблицы.ДоговорОтображениеНенайденного = ШаблоныТекстов.Договор;
			КонецЕсли;
		Иначе
			СтрокаТаблицы.Договор = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
			СтрокаТаблицы.ДоговорСсылкаДляНового = РаспознанныйДоговор;
			СтрокаТаблицы.ДоговорОтображениеНенайденного = ШаблоныТекстов.Договор;
		КонецЕсли;
	ИначеЕсли НЕ ТребуетсяКонтрагент Тогда
		СтрокаТаблицы.Договор = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
		СтрокаТаблицы.ДоговорОтображениеНенайденного = "";
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Документ) Тогда
		СтрокаТаблицы.СостояниеДокумента = 3;
	КонецЕсли;
	
КонецПроцедуры
