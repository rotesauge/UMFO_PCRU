
#Область ПЕРМЕННЫЕ_ПЛАТФОРМЫ

&НаКлиенте
Перем Платформа Экспорт;

&НаСервере
Перем ОбработкаОбъект;

#КонецОбласти

#Область ПРОЦЕДУРЫ_И_ФУНКЦИИ_ПЛАТФОРМЫ

&НаКлиенте
Функция МетодКлиента(ИмяМодуля= "", ИмяМетода, 
		Параметр0= NULL, Параметр1= NULL, Параметр2= NULL, Параметр3= NULL, Параметр4= NULL,
		Параметр5= NULL, Параметр6= NULL, Параметр7= NULL, Параметр8= NULL, Параметр9= NULL) Экспорт
	
	Возврат  Платформа.МетодКлиента(ИмяМодуля, ИмяМетода, 
	Параметр0, Параметр1, Параметр2, Параметр3, Параметр4,
	Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	
КонецФункции

&НаКлиенте
Функция МетодСервераБезКонтекста(ИмяМодуля= "", ИмяМетода,
		Параметр0= NULL, Параметр1= NULL, Параметр2= NULL, Параметр3= NULL, Параметр4= NULL, 
		Параметр5= NULL, Параметр6= NULL, Параметр7= NULL, Параметр8= NULL, Параметр9= NULL) Экспорт
	
	Возврат Платформа.МетодСервераБезКонтекста(ИмяМодуля, ИмяМетода,
	Параметр0, Параметр1, Параметр2, Параметр3, Параметр4,
	Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	
КонецФункции

&НаСервере
Функция МетодСервера(Знач ИмяМодуля= "", Знач ИмяМетода,
		Параметр0= NULL, Параметр1= NULL, Параметр2= NULL, Параметр3= NULL, Параметр4= NULL, 
		Параметр5= NULL, Параметр6= NULL, Параметр7= NULL, Параметр8= NULL, Параметр9= NULL) Экспорт
	
	Возврат ОбработкаОбъект().МетодСервера(ИмяМодуля, ИмяМетода, 
	Параметр0, Параметр1, Параметр2, Параметр3, Параметр4,
	Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	
КонецФункции

&НаСервере
Функция ОбработкаОбъект() Экспорт
	
	Если ОбработкаОбъект = Неопределено Тогда
		
		СтруктураОбработки= ПолучитьИзВременногоХранилища(Объект.ПараметрыКлиентСервер.ВременноеХранилище.АдресОбработкаОбъект);
		
		Если СтруктураОбработки <> Неопределено Тогда
			ОбработкаОбъект= СтруктураОбработки.ОбработкаОбъект;
		КонецЕсли;
		
		Если ОбработкаОбъект = Неопределено Тогда
			
			ОбработкаОбъект= РеквизитФормыВЗначение("Объект");
			
			Попытка
				ПоместитьВоВременноеХранилище(Новый Структура("ОбработкаОбъект", ОбработкаОбъект), Объект.ПараметрыКлиентСервер.ВременноеХранилище.АдресОбработкаОбъект);
			Исключение КонецПопытки;
		
		Иначе
			ОбработкаОбъект.ПараметрыКлиентСервер= Объект.ПараметрыКлиентСервер;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ОбработкаОбъект;
	
КонецФункции

&НаКлиенте
Функция ОсновнаяФорма(ТекущийВладелецФормы)
	
	Если ТекущийВладелецФормы = Неопределено Тогда
		Возврат Неопределено
	ИначеЕсли Прав(ТекущийВладелецФормы.ИмяФормы, 14) = "Форма_Основная" Тогда
		Возврат ТекущийВладелецФормы;
	Иначе
		Возврат ОсновнаяФорма(ТекущийВладелецФормы.ВладелецФормы);
	КонецЕсли;
	
КонецФункции


&НаСервере
Процедура ПлатформаПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ОбъектПараметрыКлиентСервер", Объект.ПараметрыКлиентСервер);
	
КонецПроцедуры

&НаКлиенте
Процедура ПлатформаПриОткрытии(Отказ)
	
	ОсновнаяФорма= ОсновнаяФорма(ВладелецФормы);
	
	Если ОсновнаяФорма <> Неопределено Тогда
		Платформа= ОсновнаяФорма.Платформа;
	КонецЕсли;
		
	Платформа.ПриОткрытииФормыОбработки(ЭтаФорма, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПлатформаПриЗакрытии()
	
	Платформа.ПриЗакрытииФормыОбработки(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ОтказатьВПодписи(Команда)
	
	Если НЕ ЗначениеЗаполнено(Комментарий) 
		И (Параметры.РежимИспользования = 1 ИЛИ Параметры.РежимИспользования = 4) Тогда
		ПоказатьПредупреждение(, "Укажите причину отказа", 120, Платформа.ПараметрыКлиент.СловарьWL.НаименованиеСистемы);
		
	Иначе

		Если ДляТекущегоДействияТребуетсяМЧД() Тогда

			КонтекстМЧД	= МетодКлиента("Модуль_Клиент", "МЧД_ДанныеПоИспользованиюДоверенностей", АдресЯщика);

			Оповещение	= Новый ОписаниеОповещения("ОтказВПодписиЗавершение", ЭтаФорма);
			КонтрактМЧД	= КонтекстМЧД.СписокМЧД.Получить(ИдентификаторВыбраннойМЧД);
			МетодКлиента("Модуль_Клиент", "ПроверитьМЧДИВыполнитьОповещение", Оповещение, КонтрактМЧД, АдресЯщика, ДействиеЭДО);

		Иначе

			РезультатВыбораМЧД = Новый Структура("РазрешитьДействие", Истина);
			ОтказВПодписиЗавершение(РезультатВыбораМЧД, Неопределено);

		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтказВПодписиЗавершение(Результат, ДополнительныеПараметры = Неопределено) Экспорт
	
	РазрешитьДействие = МетодКлиента("Модуль_Клиент", "СвойствоСтруктуры", Результат, "РазрешитьДействие", Ложь);
	
	Если РазрешитьДействие Тогда
		
		КонтрактМЧД = МетодКлиента("Модуль_Клиент", "СвойствоСтруктуры", Результат, "КонтрактМЧД");
		
		ПараметрыЗакрытияФормы = Новый Структура;
		ПараметрыЗакрытияФормы.Вставить("Комментарий", Комментарий);
		ПараметрыЗакрытияФормы.Вставить("КонтрактМЧД", КонтрактМЧД);
		Закрыть(ПараметрыЗакрытияФормы);
		
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ПлатформаПриСозданииНаСервере(Отказ, СтандартнаяОбработка);
	
	АдресЯщика = Параметры.АдресЯщика;
	
	НажатОК	= Ложь;
		
	Если Параметры.AuthenticateType = "Login" Тогда
		
		Элементы.ДекорацияПодписанта.Видимость		= Ложь;
		Элементы.ДекорацияПодписанта.Доступность	= Ложь;
		
		Элементы.ПредставлениеПодписи.Видимость		= Ложь;
		Элементы.ПредставлениеПодписи.Доступность	= Ложь;
		
		Элементы.ГруппаДоверенность.Видимость		= Ложь;
		Элементы.ГруппаДоверенность.Доступность		= Ложь;
		
	КонецЕсли;
	
	ПредставлениеДокумента	= Параметры.ПредставлениеДокумента;
	ПредставлениеПодписи	= Параметры.ПредставлениеПодписи;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПлатформаПриОткрытии(Отказ);
	
	ОбновитьЭлементыФормы();
	
	Если ДляТекущегоДействияТребуетсяМЧД() Тогда 
		ЗаполнитьСписокДоступныхМЧД();
	Иначе 
		Элементы.ГруппаДоверенность.Видимость = Ложь;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	ПлатформаПриЗакрытии();
	
КонецПроцедуры

&НаКлиенте
Функция ДляТекущегоДействияТребуетсяМЧД()
	
	Результат = Ложь;

	Если Параметры.РежимИспользования = 1
		Или	Параметры.РежимИспользования = 4
		Или	Параметры.РежимИспользования = 5
		Или	Параметры.РежимИспользования = 6
		Или Параметры.РежимИспользования = 7 Тогда
		
		Результат = МетодКлиента("Модуль_Клиент", "МЧД_ТребуетсяДоверенность", АдресЯщика);
		
	КонецЕсли;

	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура НастроитьМЧД(Команда)
	
	МетодКлиента("Модуль_Клиент", "ОткрытьФормуСпискаДоверенностей", АдресЯщика, ЭтотОбъект);
		
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСписокДоступныхМЧД()

	КонтекстМЧД		= МетодКлиента("Модуль_Клиент", "МЧД_ДанныеПоИспользованиюДоверенностей", АдресЯщика);
	ТребуетсяМЧД	= КонтекстМЧД.ТребуетсяМЧД;
	
	Если ТребуетсяМЧД Тогда
		
		СписокВыбораМЧД	= Элементы.ГруппаДоверенностьПредставление.СписокВыбора;
		
		Для Каждого КлючЗначение Из КонтекстМЧД.СписокМЧД Цикл
			КонтрактМЧД = КлючЗначение.Значение;
			СписокВыбораМЧД.Добавить(КонтрактМЧД.Идентификатор, КонтрактМЧД.ПредставлениеМЧД);
		КонецЦикла;
		
		ИдентификаторВыбраннойМЧД = КонтекстМЧД.МЧД;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЭлементыФормы()

	ДействияЭДО = МетодКлиента("Модуль_Клиент", "Перечисление_ТипыОтветногоДействия");
	
	Если Параметры.РежимИспользования = 1 Тогда		
		
		ДействиеЭДО = ДействияЭДО.ОтказВПодписиДокумента;
		
		ОбновитьЗаголовкиЭлеметновФормы("Отказ в подписи",		"Комментарий по отказу", 
										"Отказать в подписи",	"Документ будет подписан");
		
	ИначеЕсли Параметры.РежимИспользования = 2 Тогда
		
		ОбновитьЗаголовкиЭлеметновФормы("Согласование",	"Комментарий к согласованию", 
										"Согласовать",	"Документ будет согласован");

	ИначеЕсли Параметры.РежимИспользования = 3 Тогда
		
		ОбновитьЗаголовкиЭлеметновФормы("Отказ в согласовании",		"Комментарий по отказу в согласовании", 
										"Отказать в согласовании",	"Документ будет отказан в согласовании");

	ИначеЕсли Параметры.РежимИспользования = 4 Тогда
		
		ДействиеЭДО = ДействияЭДО.ЗапроcНаУточнениеДокумента;
		
		ОбновитьЗаголовкиЭлеметновФормы("Уведомление об уточнении",	"Комментарий к запросу", 
										"Отправить уведомление",	"Уведомление будет подписано");

	ИначеЕсли Параметры.РежимИспользования = 5 Тогда
		
		ДействиеЭДО = ДействияЭДО.ЗапроcНаАннулированиеДокумента;
		
		ОбновитьЗаголовкиЭлеметновФормы("Запрос на аннулирование",	"Комментарий к запросу", 
										"Аннулировать",				"Соглашение об аннулировании будет подписано");

	ИначеЕсли Параметры.РежимИспользования = 6 Тогда
		
		ДействиеЭДО = ДействияЭДО.ОтказОтАннулированияДокумента;
		
		ОбновитьЗаголовкиЭлеметновФормы("Отказ в аннулировании",	"Комментарий к отказу", 
										"Отказать",					"Соглашение об аннулировании будет подписано");

	ИначеЕсли Параметры.РежимИспользования = 7 Тогда
		
		ДействиеЭДО = ДействияЭДО.ЗапроcНаУточнениеДокумента;
		
		ОбновитьЗаголовкиЭлеметновФормы("Уведомление об уточнении",	"Комментарий к уведомлению", 
										"Отправить уведомление",	"Уведомление будет подписано");

	Иначе
		ВызватьИсключение("Не задан параметр контекста использования!");
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗаголовкиЭлеметновФормы(ЗаголовокФормы, ЗаголовокКомментарий, ЗаголовокПодписи, ЗаголовокПодписант)
	
	Заголовок									= ЗаголовокФормы;
	Элементы.Комментарий.Заголовок				= ЗаголовокКомментарий;
	Элементы.ФормаОтказатьВПодписи.Заголовок	= ЗаголовокПодписи;
	Элементы.ДекорацияПодписанта.Заголовок		= ЗаголовокПодписант;
	
КонецПроцедуры	

