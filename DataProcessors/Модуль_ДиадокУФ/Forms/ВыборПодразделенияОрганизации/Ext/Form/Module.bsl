
#Область ПЕРМЕННЫЕ_ПЛАТФОРМЫ

&НаКлиенте
Перем Платформа Экспорт;

&НаСервере
Перем ОбработкаОбъект;

#КонецОбласти

#Область ПРОЦЕДУРЫ_И_ФУНКЦИИ_ПЛАТФОРМЫ

&НаКлиенте
Функция МетодКлиента(ИмяМодуля= "", ИмяМетода, 
		Параметр0= NULL, Параметр1= NULL, Параметр2= NULL, Параметр3= NULL, Параметр4= NULL,
		Параметр5= NULL, Параметр6= NULL, Параметр7= NULL, Параметр8= NULL, Параметр9= NULL) Экспорт
	
	Возврат  Платформа.МетодКлиента(ИмяМодуля, ИмяМетода, 
	Параметр0, Параметр1, Параметр2, Параметр3, Параметр4,
	Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	
КонецФункции

&НаКлиенте
Функция МетодСервераБезКонтекста(ИмяМодуля= "", ИмяМетода,
		Параметр0= NULL, Параметр1= NULL, Параметр2= NULL, Параметр3= NULL, Параметр4= NULL, 
		Параметр5= NULL, Параметр6= NULL, Параметр7= NULL, Параметр8= NULL, Параметр9= NULL) Экспорт
	
	Возврат Платформа.МетодСервераБезКонтекста(ИмяМодуля, ИмяМетода,
	Параметр0, Параметр1, Параметр2, Параметр3, Параметр4,
	Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	
КонецФункции

&НаСервере
Функция МетодСервера(Знач ИмяМодуля= "", Знач ИмяМетода,
		Параметр0= NULL, Параметр1= NULL, Параметр2= NULL, Параметр3= NULL, Параметр4= NULL, 
		Параметр5= NULL, Параметр6= NULL, Параметр7= NULL, Параметр8= NULL, Параметр9= NULL) Экспорт
	
	Возврат ОбработкаОбъект().МетодСервера(ИмяМодуля, ИмяМетода, 
	Параметр0, Параметр1, Параметр2, Параметр3, Параметр4,
	Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	
КонецФункции

&НаСервере
Функция ОбработкаОбъект() Экспорт
	
	Если ОбработкаОбъект = Неопределено Тогда
		
		СтруктураОбработки= ПолучитьИзВременногоХранилища(Объект.ПараметрыКлиентСервер.ВременноеХранилище.АдресОбработкаОбъект);
		
		Если СтруктураОбработки <> Неопределено Тогда
			ОбработкаОбъект= СтруктураОбработки.ОбработкаОбъект;
		КонецЕсли;
		
		Если ОбработкаОбъект = Неопределено Тогда
			
			ОбработкаОбъект= РеквизитФормыВЗначение("Объект");
			
			Попытка
				ПоместитьВоВременноеХранилище(Новый Структура("ОбработкаОбъект", ОбработкаОбъект), Объект.ПараметрыКлиентСервер.ВременноеХранилище.АдресОбработкаОбъект);
			Исключение КонецПопытки;
		
		Иначе
			ОбработкаОбъект.ПараметрыКлиентСервер= Объект.ПараметрыКлиентСервер;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ОбработкаОбъект;
	
КонецФункции

&НаКлиенте
Функция ОсновнаяФорма(ТекущийВладелецФормы)
	
	Если ТекущийВладелецФормы = Неопределено Тогда
		Возврат Неопределено
	ИначеЕсли Прав(ТекущийВладелецФормы.ИмяФормы, 14) = "Форма_Основная" Тогда
		Возврат ТекущийВладелецФормы;
	Иначе
		Возврат ОсновнаяФорма(ТекущийВладелецФормы.ВладелецФормы);
	КонецЕсли;
	
КонецФункции


&НаСервере
Процедура ПлатформаПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ОбъектПараметрыКлиентСервер", Объект.ПараметрыКлиентСервер);
	
КонецПроцедуры

&НаКлиенте
Процедура ПлатформаПриОткрытии(Отказ)
	
	ОсновнаяФорма= ОсновнаяФорма(ВладелецФормы);
	
	Если ОсновнаяФорма <> Неопределено Тогда
		Платформа= ОсновнаяФорма.Платформа;
	КонецЕсли;
		
	Платформа.ПриОткрытииФормыОбработки(ЭтаФорма, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПлатформаПриЗакрытии()
	
	Платформа.ПриЗакрытииФормыОбработки(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОБРАБОТЧИКИ_ФОРМЫ

	&НаСервере
	Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

		ПлатформаПриСозданииНаСервере(Отказ, СтандартнаяОбработка);
		
		Если Параметры.Режим = "УстановитьДляВсех" Тогда
			Элементы.ГруппаУстановитьДляВсех.Видимость		= Истина;
			Элементы.ГруппаУстановитьДляВсех.Доступность	= Истина;
		КонецЕсли;
		
		DepartmentID = Параметры.DepartmentId;
		
	КонецПроцедуры
	
	&НаКлиенте
	Процедура ПриОткрытии(Отказ)

		ПлатформаПриОткрытии(Отказ);
		
		Box = МетодКлиента("Модуль_РаботаССерверомДиадок", "ДанныеКонтекстаДиадок", Параметры.OrganizationId, "Box");
		
		Если ЗначениеЗаполнено(Параметры.CounteragentID) Тогда
			Box = Box.GetCounteragentById(Параметры.CounteragentID);
		КонецЕсли;
		
		ДобавитьОрганизацию(Box);
		
	КонецПроцедуры
	
	&НаКлиенте
	Процедура ПриЗакрытии()
		
		ПлатформаПриЗакрытии();
		
	КонецПроцедуры

#КонецОбласти

#Область СОБЫТИЯ_ЭЛЕМЕНТОВ_ФОРМЫ

	&НаКлиенте
	Процедура ДеревоПодразделенийПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
		
		Отказ =	Истина;
		
	КонецПроцедуры
	
	&НаКлиенте
	Процедура ДеревоПодразделенийПередНачаломИзменения(Элемент, Отказ)
		
		Отказ = Истина;
		
	КонецПроцедуры
	
	&НаКлиенте
	Процедура ДеревоПодразделенийПередУдалением(Элемент, Отказ)
		
		Отказ = Истина;
		
	КонецПроцедуры
	
	&НаКлиенте
	Процедура ДеревоПодразделенийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
		
		СтандартнаяОбработка = Ложь;
		
		ВыбратьПодразделение();
	
	КонецПроцедуры

#КонецОбласти

#Область КОМАНДЫ

	&НаКлиенте
	Процедура Ок(Команда)
		
		ВыбратьПодразделение();
	
	КонецПроцедуры	
	
#КонецОбласти


&НаКлиенте
Процедура ДобавитьОрганизацию(Organization)
	
	СтрокаОрганизации = ДеревоПодразделений.ПолучитьЭлементы().Добавить();
	
	СтрокаОрганизации.Наименование		= Organization.Name;
	СтрокаОрганизации.OrganizationId	= Organization.ID;
	СтрокаОрганизации.DepartmentID		= "00000000-0000-0000-0000-000000000000";
	СтрокаОрганизации.DepartmentName	= "Головное подразделение";
	СтрокаОрганизации.КПП				= Organization.Kpp;
	
	AddressInfo = Неопределено;
	Если МетодКлиента("Модуль_Клиент", "ЕстьСвойствоCOMОбъекта", Organization, "Address", AddressInfo) Тогда
		СтруктураАдреса	= МетодКлиента("Модуль_Клиент", "Новый_AddressInfo");
		МетодКлиента("Модуль_Клиент", "ЗаполнитьСтруктуруПоКонтенту", AddressInfo, СтруктураАдреса, "AddressInfo");	
		СтрокаОрганизации.Адрес = МетодСервера("ПечатныеФормы", "ПредставлениеПротоСтруктурыАдреса", СтруктураАдреса);
	КонецЕсли;
	
	Если ПустаяСтрока(DepartmentID) Тогда
		СтрокаОрганизации.ТекущееПодразделение		= Истина;
	 	Элементы.ДеревоПодразделений.ТекущаяСтрока	= СтрокаОрганизации.ПолучитьИдентификатор();
	КонецЕсли;
	
	ДобавитьДеревоПодразделений(Organization.Departments, СтрокаОрганизации, Organization);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьДеревоПодразделений(Departments, РодительскаяСтрока, Organization)
	
	Для Индекс = 0 По Departments.Count - 1 Цикл
		
		Department = Departments.GetItem(Индекс);
		
		СтрокаПодразделения = РодительскаяСтрока.ПолучитьЭлементы().Добавить();
		
		СтрокаПодразделения.Наименование		= Department.Name;
		СтрокаПодразделения.OrganizationId		= Organization.ID;
		СтрокаПодразделения.DepartmentID		= Department.Id;
		СтрокаПодразделения.DepartmentName		= Department.Name;
		СтрокаПодразделения.КПП					= Department.Kpp;
		СтрокаПодразделения.КраткоеНаименование	= Department.Abbreviation;
		
		СтруктураАдреса	= МетодКлиента("Модуль_Клиент", "Новый_AddressInfo");
		МетодКлиента("Модуль_Клиент", "ЗаполнитьСтруктуруПоКонтенту", Department.Address, СтруктураАдреса, "AddressInfo");			
		СтрокаПодразделения.Адрес = МетодСервера("ПечатныеФормы", "ПредставлениеПротоСтруктурыАдреса", СтруктураАдреса);
		
		Если DepartmentID = Department.Id Тогда
			СтрокаПодразделения.ТекущееПодразделение	= Истина;
	 		Элементы.ДеревоПодразделений.ТекущаяСтрока	= СтрокаПодразделения.ПолучитьИдентификатор();
		КонецЕсли;

		ДобавитьДеревоПодразделений(Department.Subdepartments, СтрокаПодразделения, Organization);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПодразделение()
	
	Если Элементы.ДеревоПодразделений.ТекущиеДанные = Неопределено Тогда
		
		ТекстСообщения = НСтр("ru='Подразделение не выбрано!'");
		МетодКлиента("Модуль_Клиент", "СообщитьПользователю", ТекстСообщения);
		
		Возврат;
		
	КонецЕсли;
	
	ВозвращаемыеПараметры = Новый Структура("DepartmentID, DepartmentName, УстановитьДляВсех");
	
	ВозвращаемыеПараметры.DepartmentID		= Элементы.ДеревоПодразделений.ТекущиеДанные.DepartmentID;
	ВозвращаемыеПараметры.DepartmentName	= Элементы.ДеревоПодразделений.ТекущиеДанные.DepartmentName;
	ВозвращаемыеПараметры.УстановитьДляВсех	= УстановитьДляВсех;	
			
	ЭтаФорма.Закрыть(ВозвращаемыеПараметры);
	
КонецПроцедуры
