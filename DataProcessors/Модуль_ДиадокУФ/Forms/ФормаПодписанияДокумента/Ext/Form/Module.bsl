
#Область ПЕРМЕННЫЕ_ПЛАТФОРМЫ

&НаКлиенте
Перем Платформа Экспорт;

&НаСервере
Перем ОбработкаОбъект;

#КонецОбласти

#Область ПРОЦЕДУРЫ_И_ФУНКЦИИ_ПЛАТФОРМЫ

&НаКлиенте
Функция МетодКлиента(ИмяМодуля= "", ИмяМетода, 
		Параметр0= NULL, Параметр1= NULL, Параметр2= NULL, Параметр3= NULL, Параметр4= NULL,
		Параметр5= NULL, Параметр6= NULL, Параметр7= NULL, Параметр8= NULL, Параметр9= NULL) Экспорт
	
	Возврат  Платформа.МетодКлиента(ИмяМодуля, ИмяМетода, 
	Параметр0, Параметр1, Параметр2, Параметр3, Параметр4,
	Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	
КонецФункции

&НаКлиенте
Функция МетодСервераБезКонтекста(ИмяМодуля= "", ИмяМетода,
		Параметр0= NULL, Параметр1= NULL, Параметр2= NULL, Параметр3= NULL, Параметр4= NULL, 
		Параметр5= NULL, Параметр6= NULL, Параметр7= NULL, Параметр8= NULL, Параметр9= NULL) Экспорт
	
	Возврат Платформа.МетодСервераБезКонтекста(ИмяМодуля, ИмяМетода,
	Параметр0, Параметр1, Параметр2, Параметр3, Параметр4,
	Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	
КонецФункции

&НаСервере
Функция МетодСервера(Знач ИмяМодуля= "", Знач ИмяМетода,
		Параметр0= NULL, Параметр1= NULL, Параметр2= NULL, Параметр3= NULL, Параметр4= NULL, 
		Параметр5= NULL, Параметр6= NULL, Параметр7= NULL, Параметр8= NULL, Параметр9= NULL) Экспорт
	
	Возврат ОбработкаОбъект().МетодСервера(ИмяМодуля, ИмяМетода, 
	Параметр0, Параметр1, Параметр2, Параметр3, Параметр4,
	Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	
КонецФункции

&НаСервере
Функция ОбработкаОбъект() Экспорт
	
	Если ОбработкаОбъект = Неопределено Тогда
		
		СтруктураОбработки= ПолучитьИзВременногоХранилища(Объект.ПараметрыКлиентСервер.ВременноеХранилище.АдресОбработкаОбъект);
		
		Если СтруктураОбработки <> Неопределено Тогда
			ОбработкаОбъект= СтруктураОбработки.ОбработкаОбъект;
		КонецЕсли;
		
		Если ОбработкаОбъект = Неопределено Тогда
			
			ОбработкаОбъект= РеквизитФормыВЗначение("Объект");
			
			Попытка
				ПоместитьВоВременноеХранилище(Новый Структура("ОбработкаОбъект", ОбработкаОбъект), Объект.ПараметрыКлиентСервер.ВременноеХранилище.АдресОбработкаОбъект);
			Исключение КонецПопытки;
		
		Иначе
			ОбработкаОбъект.ПараметрыКлиентСервер= Объект.ПараметрыКлиентСервер;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ОбработкаОбъект;
	
КонецФункции

&НаКлиенте
Функция ОсновнаяФорма(ТекущийВладелецФормы)
	
	Если ТекущийВладелецФормы = Неопределено Тогда
		Возврат Неопределено
	ИначеЕсли Прав(ТекущийВладелецФормы.ИмяФормы, 14) = "Форма_Основная" Тогда
		Возврат ТекущийВладелецФормы;
	Иначе
		Возврат ОсновнаяФорма(ТекущийВладелецФормы.ВладелецФормы);
	КонецЕсли;
	
КонецФункции


&НаСервере
Процедура ПлатформаПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ОбъектПараметрыКлиентСервер", Объект.ПараметрыКлиентСервер);
	
КонецПроцедуры

&НаКлиенте
Процедура ПлатформаПриОткрытии(Отказ)
	
	ОсновнаяФорма= ОсновнаяФорма(ВладелецФормы);
	
	Если ОсновнаяФорма <> Неопределено Тогда
		Платформа= ОсновнаяФорма.Платформа;
	КонецЕсли;
		
	Платформа.ПриОткрытииФормыОбработки(ЭтаФорма, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПлатформаПриЗакрытии()
	
	Платформа.ПриЗакрытииФормыОбработки(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ПлатформаПриСозданииНаСервере(Отказ, СтандартнаяОбработка);
	
	ИНН						 = Параметры.ИНН;
	ФИОПодписанта			 = Параметры.ФИО;
	ДолжностьПодписанта		 = Параметры.Должность;
	ПредставлениеДокумента	 = Параметры.ПредставлениеДокумента;
	ПредставлениеПодписи	 = Параметры.ПредставлениеПодписи;
	DocumentType			 = Параметры.DocumentType;
	BoxId					 = Параметры.BoxId;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ПлатформаПриОткрытии(Отказ);

	Если DocumentType = "XmlTorg12" Тогда
		Заголовок=	"Подписание товарной накладной";
		Элементы.ДатаПолученияГруза.Заголовок=	"Дата получения";
	Иначе
		Заголовок=	"Подписание акта выполненных работ";
		Элементы.ДатаПолученияГруза.Заголовок=	"Дата приема";
		Элементы.ГруппаГрузополучателя.Заголовок = "Работы принял";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПредставлениеДокумента) Тогда
		Элементы.ПредставлениеДокумента.Заголовок=	ПредставлениеДокумента;
	Иначе
		Элементы.ПредставлениеДокумента.Видимость=	Ложь;
		Заголовок=	"Групповое подписание документов";
	КонецЕсли;
	
	ДатаПолученияГруза=		ТекущаяДата();
	
	Если НЕ МетодКлиента("Модуль_Клиент", "ЭтоФормализованныйДокумент", DocumentType) Тогда
		
		Заголовок = "Подписание документа";
		Элементы.ГруппаГрузополучателя.Видимость = Ложь;
		Элементы.ДатаПолученияГруза.Видимость	 = Ложь;
		
	КонецЕсли;
	
	ЗаполнитьСписокДоступныхМЧД();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСписокДоступныхМЧД()
	
	КонтекстМЧД		= МетодКлиента("Модуль_Клиент", "МЧД_ДанныеПоИспользованиюДоверенностей", BoxId);
	ТребуетсяМЧД	= КонтекстМЧД.ТребуетсяМЧД;
	
	Если ТребуетсяМЧД Тогда

		СписокВыбораМЧД	= Элементы.ГруппаДоверенностьПредставление.СписокВыбора;
		
		Для Каждого КлючЗначение Из КонтекстМЧД.СписокМЧД Цикл
			КонтрактМЧД = КлючЗначение.Значение;
			СписокВыбораМЧД.Добавить(КонтрактМЧД.Идентификатор, КонтрактМЧД.ПредставлениеМЧД);
		КонецЦикла;
		
		ИдентификаторВыбраннойМЧД = КонтекстМЧД.МЧД;
		
	Иначе 
		
		Элементы.ГруппаДоверенность.Видимость = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	ПлатформаПриЗакрытии();
	
КонецПроцедуры

&НаКлиенте
Процедура Отменить(Команда)
	
	ЭтаФорма.Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодписатьИОтправить(Команда)
	
	КонтекстМЧД		= МетодКлиента("Модуль_Клиент", "МЧД_ДанныеПоИспользованиюДоверенностей", BoxId);
	ТребуетсяМЧД	= КонтекстМЧД.ТребуетсяМЧД;
	
	Если ТребуетсяМЧД Тогда
		
		Оповещение	= Новый ОписаниеОповещения("ВыполнитьДействиеПослеПроверкиМЧД", ЭтаФорма);
		КонтрактМЧД	= КонтекстМЧД.СписокМЧД.Получить(ИдентификаторВыбраннойМЧД);
		МетодКлиента("Модуль_Клиент", "ПроверитьМЧДИВыполнитьОповещение", Оповещение, КонтрактМЧД, BoxId, "");
		
	Иначе 
		
		РезультатВыбораМЧД = Новый Структура("РазрешитьДействие", Истина);
		ВыполнитьДействиеПослеПроверкиМЧД(РезультатВыбораМЧД, Неопределено);
		
	КонецЕсли;	
		
		
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьДействиеПослеПроверкиМЧД(Результат, ДополнительныеПараметры) Экспорт
	
	РазрешитьДействие = МетодКлиента("Модуль_Клиент", "СвойствоСтруктуры", Результат, "РазрешитьДействие", Ложь);

	Если Не РазрешитьДействие Тогда
		Возврат;	
	КонецЕсли;
	
	СписокНезаполненныхПолей = "";
	
	Если НЕ ЗначениеЗаполнено(ДатаПолученияГруза) Тогда
		СписокНезаполненныхПолей=	СписокНезаполненныхПолей + "дата получения груза";
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДолжностьПодписанта) Тогда 
		СписокНезаполненныхПолей=	?(СписокНезаполненныхПолей = "", "", СписокНезаполненныхПолей+", ") +"должность";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СписокНезаполненныхПолей) Тогда
		ПоказатьПредупреждение(, 
		?(Найти(СписокНезаполненныхПолей, ",")=0, "Не заполнено обязательное поле:", "Не заполнены обязательные поля:")+"
		|"+ СписокНезаполненныхПолей, 120, Платформа.ПараметрыКлиент.СловарьWL.НаименованиеСистемы);
		Возврат;
	КонецЕсли;	
	
	КонтрактМЧД = МетодКлиента("Модуль_Клиент", "СвойствоСтруктуры", Результат, "КонтрактМЧД");
	
	Результат = Новый Структура("ОтветныйТитул");
	
	Если МетодКлиента("Модуль_Клиент", "ЭтоФормализованныйДокумент", DocumentType) Тогда
		Результат.ОтветныйТитул = ОтветныйТитул();
	КонецЕсли;
	
	Результат.Вставить("КонтрактМЧД", КонтрактМЧД);
	
	Закрыть(Результат);
	
КонецПроцедуры	

&НаКлиенте
Процедура НастроитьМЧД(Команда)
	
	МетодКлиента("Модуль_Клиент", "ОткрытьФормуСпискаДоверенностей", BoxId, ЭтотОбъект);
		
КонецПроцедуры

&НаКлиенте
Функция ОтветныйТитул()
	
	Результат = Новый Структура;
	
	СтруктураФИО = МетодКлиента("Модуль_Клиент", "СтруктураФИО", ФИОПодписанта);
	
	Если DocumentType = "XmlTorg12" Тогда
		
		Результат.Вставить("ShipmentReceiptDate", ДатаПолученияГруза);
		Результат.Вставить("Receiver"			, Official(СтруктураФИО));
		
	Иначе
		
		Результат.Вставить("SignatureDate", ДатаПолученияГруза);
		Результат.Вставить("Official"	  , Official(СтруктураФИО));
		
	КонецЕсли;
	
	Результат.Вставить("Signer", Signer(СтруктураФИО));
	
	Возврат Результат;
	
КонецФункции


&НаКлиенте
Функция Official(СтруктураФИО)
	
	Результат = Новый Структура;
	Результат.Вставить("Surname"   , СтруктураФИО.Фамилия);
	Результат.Вставить("FirstName" , СтруктураФИО.Имя);
	Результат.Вставить("Patronymic", СтруктураФИО.Отчество);
	Результат.Вставить("JobTitle"  , ДолжностьПодписанта);
	
	Возврат Результат;
	
КонецФункции 

&НаКлиенте
Функция Signer(СтруктураФИО)
	
	ПодписантИП = (СтрДлина(ИНН) = 12);
	
	Результат = Новый Структура;
	Результат.Вставить("Surname"   , СтруктураФИО.Фамилия);
	Результат.Вставить("FirstName" , СтруктураФИО.Имя);
	Результат.Вставить("Patronymic", СтруктураФИО.Отчество);
	Результат.Вставить("JobTitle"  , ДолжностьПодписанта);
	Результат.Вставить("INN"	   , ИНН);
	Результат.Вставить("IsSoleProprietor", ПодписантИП);
	
	Возврат Результат;
	
КонецФункции
