&НаКлиенте
Перем ЭДОбъект Экспорт;
&НаКлиенте
Перем Организация Экспорт;

#Область ПЕРМЕННЫЕ_ПЛАТФОРМЫ

&НаКлиенте
Перем Платформа Экспорт;

&НаСервере
Перем ОбработкаОбъект;

#КонецОбласти

#Область ПРОЦЕДУРЫ_И_ФУНКЦИИ_ПЛАТФОРМЫ

&НаКлиенте
Функция МетодКлиента(ИмяМодуля= "", ИмяМетода, 
		Параметр0= NULL, Параметр1= NULL, Параметр2= NULL, Параметр3= NULL, Параметр4= NULL,
		Параметр5= NULL, Параметр6= NULL, Параметр7= NULL, Параметр8= NULL, Параметр9= NULL) Экспорт
	
	Возврат  Платформа.МетодКлиента(ИмяМодуля, ИмяМетода, 
	Параметр0, Параметр1, Параметр2, Параметр3, Параметр4,
	Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	
КонецФункции

&НаКлиенте
Функция МетодСервераБезКонтекста(ИмяМодуля= "", ИмяМетода,
		Параметр0= NULL, Параметр1= NULL, Параметр2= NULL, Параметр3= NULL, Параметр4= NULL, 
		Параметр5= NULL, Параметр6= NULL, Параметр7= NULL, Параметр8= NULL, Параметр9= NULL) Экспорт
	
	Возврат Платформа.МетодСервераБезКонтекста(ИмяМодуля, ИмяМетода,
	Параметр0, Параметр1, Параметр2, Параметр3, Параметр4,
	Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	
КонецФункции

&НаСервере
Функция МетодСервера(Знач ИмяМодуля= "", Знач ИмяМетода,
		Параметр0= NULL, Параметр1= NULL, Параметр2= NULL, Параметр3= NULL, Параметр4= NULL, 
		Параметр5= NULL, Параметр6= NULL, Параметр7= NULL, Параметр8= NULL, Параметр9= NULL) Экспорт
	
	Возврат ОбработкаОбъект().МетодСервера(ИмяМодуля, ИмяМетода, 
	Параметр0, Параметр1, Параметр2, Параметр3, Параметр4,
	Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	
КонецФункции

&НаСервере
Функция ОбработкаОбъект() Экспорт
	
	Если ОбработкаОбъект = Неопределено Тогда
		
		СтруктураОбработки= ПолучитьИзВременногоХранилища(Объект.ПараметрыКлиентСервер.ВременноеХранилище.АдресОбработкаОбъект);
		
		Если СтруктураОбработки <> Неопределено Тогда
			ОбработкаОбъект= СтруктураОбработки.ОбработкаОбъект;
		КонецЕсли;
		
		Если ОбработкаОбъект = Неопределено Тогда
			
			ОбработкаОбъект= РеквизитФормыВЗначение("Объект");
			
			Попытка
				ПоместитьВоВременноеХранилище(Новый Структура("ОбработкаОбъект", ОбработкаОбъект), Объект.ПараметрыКлиентСервер.ВременноеХранилище.АдресОбработкаОбъект);
			Исключение КонецПопытки;
		
		Иначе
			ОбработкаОбъект.ПараметрыКлиентСервер= Объект.ПараметрыКлиентСервер;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ОбработкаОбъект;
	
КонецФункции

&НаКлиенте
Функция ОсновнаяФорма(ТекущийВладелецФормы)
	
	Если ТекущийВладелецФормы = Неопределено Тогда
		Возврат Неопределено
	ИначеЕсли Прав(ТекущийВладелецФормы.ИмяФормы, 14) = "Форма_Основная" Тогда
		Возврат ТекущийВладелецФормы;
	Иначе
		Возврат ОсновнаяФорма(ТекущийВладелецФормы.ВладелецФормы);
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ПлатформаПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ОбъектПараметрыКлиентСервер", Объект.ПараметрыКлиентСервер);
	
КонецПроцедуры

&НаКлиенте
Процедура ПлатформаПриОткрытии(Отказ)
	
	ОсновнаяФорма= ОсновнаяФорма(ВладелецФормы);
	
	Если ОсновнаяФорма <> Неопределено Тогда
		Платформа= ОсновнаяФорма.Платформа;
	КонецЕсли;
		
	Платформа.ПриОткрытииФормыОбработки(ЭтаФорма, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПлатформаПриЗакрытии()
	
	Платформа.ПриЗакрытииФормыОбработки(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ПлатформаПриСозданииНаСервере(Отказ, СтандартнаяОбработка);
	
	HTMLДокумент = Параметры.HTMLДокумент;
	
	Если Параметры.Свойство("ЗаголовокФормы") Тогда
		Заголовок = Параметры.ЗаголовокФормы;
	КонецЕсли;
	
	Если Параметры.Свойство("ПоказатьКоманду_ОбновитьНастройки") Тогда
		Элементы.ФормаУстановитьРекомендуемыеНастройкиОтправки.Видимость = Истина;
	КонецЕсли;
	
	Если Параметры.Свойство("ТекстДляКопирования") Тогда
		ТекстДляКопирования = Параметры.ТекстДляКопирования;
	КонецЕсли;
	
	Если Параметры.Свойство("ПоказатьКнопкуСкопировать") Тогда
	
		Элементы.СкопироватьСодержимоеПоля.Видимость = Истина; 
		
		НовыйЗаголовокКнопкиСкопировать = Неопределено;
		
		Если Параметры.Свойство("ЗаголовокКнопкиСкопировать", НовыйЗаголовокКнопкиСкопировать) 
			И ЗначениеЗаполнено(НовыйЗаголовокКнопкиСкопировать) Тогда
			
			Элементы.СкопироватьСодержимоеПоля.Заголовок = НовыйЗаголовокКнопкиСкопировать;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ПлатформаПриОткрытии(Отказ);

КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	ПлатформаПриЗакрытии();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура HTMLДокументПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	СтандартнаяОбработка 	= Ложь;
	АдресСсылки 			= Неопределено;
	
	ДанныеСобытия.Свойство("href", АдресСсылки);
	
	Если ЗначениеЗаполнено(АдресСсылки) Тогда
		ОповеститьИлиПерейтиПоСсылке(АдресСсылки);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УстановитьРекомендуемыеНастройкиОтправки(Команда)
	
	ДобавитьСтатистику_УстановитьРекомендуемыеНастройкиОтправки();
	
	УстановитьРекомендуемыеНастройкиОтправкиНаСервере();
	
	ОбработкаОповещения = Новый ОписаниеОповещения("ПослеОбновленияНастроекОтправки", ЭтаФорма);
	
	ПоказатьПредупреждение(ОбработкаОповещения
		, НСтр("ru = 'Формат отправки документов обновлен'")
		,
		, Платформа.ПараметрыКлиент.СловарьWL.НаименованиеСистемы);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьРекомендуемыеНастройкиОтправкиНаСервере()
	
	УстревшиеНастройки = МетодСервера(,"ОрганизацииИКонтрагентыСУтаревшимиНастройкамиОтправки");
	
	МетодСервера(
	, "ВыполнитьУстановкуРекомендуемыхНастроекОтправки"
	, УстревшиеНастройки.ОрганизацииИБ
	, УстревшиеНастройки.КонтрагентыИБ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ДобавитьСтатистику_УстановитьРекомендуемыеНастройкиОтправки()
	
	Категории = МетодКлиента("Модуль_Клиент", "Метрика_Категории");
	
	НазваниеФормы 		= "Уведомление о смене формата";
	НазваниеКатегории 	= Категории.УведомлениеОСменеФормата;
	НазваниеДействия 	= "Обновить формат отправки документов";
	
	МетодКлиента("Модуль_Клиент"
		, "Метрика_ДобавитьПоведение_НажатиеКнопки"
		, НазваниеФормы
		, НазваниеКатегории
		, НазваниеДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеОбновленияНастроекОтправки(ДополнительныеПараметры) Экспорт
	
	Результат = "ИзмененыНастройкиОтправки";
	Оповестить(Результат);
	Закрыть(Результат);
	
КонецПроцедуры

&НаКлиенте
Функция СопоставленныеОрганизации()
	
	ТолькоАктивные = Ложь;
	Результат = МетодКлиента("Модуль_Клиент", "СопоставленныеОрганизации", ТолькоАктивные);
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция СопоставленныеКонтрагенты()
	
	Результат = МетодКлиента("Модуль_Клиент", "СопоставленныеКонтрагенты");
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ОповеститьИлиПерейтиПоСсылке(Знач АдресСсылки)
	
	Если ЭтоОповещение(АдресСсылки) Тогда
		
		ВыполнитьОповещение(АдресСсылки);
		
	ИначеЕсли ЭтоАдресСсылки(АдресСсылки) Тогда
		
		ПерейтиПоСсылке(АдресСсылки);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ЭтоОповещение(Знач АдресСсылки)
	
	АдресСсылки = НРег(АдресСсылки);
	
	Результат = Найти(АдресСсылки, "оповещение:") > 0;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция ЭтоАдресСсылки(Знач АдресСсылки)
	
	АдресСсылки = НРег(АдресСсылки);
	
	Результат = Ложь
		ИЛИ Найти(АдресСсылки, "e1cib/")	 = 1
		ИЛИ Найти(АдресСсылки, "http:")		 = 1
		ИЛИ Найти(АдресСсылки, "https:")	 = 1
		ИЛИ Найти(АдресСсылки, "e1c:")		 = 1
		ИЛИ Найти(АдресСсылки, "v8help:")	 = 1
		ИЛИ Найти(АдресСсылки, "mailto:")	 = 1
		ИЛИ Найти(АдресСсылки, "tel:")		 = 1
		ИЛИ Найти(АдресСсылки, "skype:")	 = 1;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ВыполнитьОповещение(АдресСсылки)
		
	ПараметрыОповещения 	= МетодКлиента("Модуль_Клиент", "ПараметрыОповещенияИзСтрокиHTMLСообщения", АдресСсылки); 
	ОбработчикОповещения	= ПараметрыОповещения.ОбработчикОповещения;
	РезультатОповещения		= ПараметрыОповещения.РезультатОповещения;
	ЗакрыватьФормуСообщения	= ПараметрыОповещения.ЗакрыватьФормуСообщения;
	
	ОписаниеОповещения = Новый ОписаниеОповещения(ОбработчикОповещения, Платформа.ВладелецФормы, Параметры.ДополнительныеПараметры);
			
	ВыполнитьОбработкуОповещения(ОписаниеОповещения, РезультатОповещения);
	
	Если ЗакрыватьФормуСообщения Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиПоСсылке(АдресСсылки)
	
	ПерейтиПоНавигационнойСсылке(АдресСсылки);
		
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьСодержимоеПоля(Команда)
	
	Успех = ПоместитьТекстВБуферОбмена(ТекстДляКопирования);
	
	Если Успех Тогда
		ТекстПредупреждения = ТекстПредупрежденияОбУспешномКопированииВБуфер();
	Иначе
		ТекстПредупреждения = ТекстПредупрежденияОбОшибкеКопированияБуфер();
	КонецЕсли;
	
	ПоказатьПростоеПредупреждение(ТекстПредупреждения);
	
КонецПроцедуры

&НаКлиенте
Функция ПоместитьТекстВБуферОбмена(Текст)
	
	htmlfile = Новый COMОбъект("htmlfile");
	Результат = htmlfile.ParentWindow.ClipboardData.Setdata("Text", Текст);
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция ТекстПредупрежденияОбУспешномКопированииВБуфер()
	
	Подстроки = Новый Массив;
	Подстроки.Добавить(НСтр("ru = 'Информация по доверенности скопирована.'; en = 'Информация по доверенности скопирована.'"));
	Подстроки.Добавить(НСтр("ru = 'Вставьте данные с помощью клавиш Ctrl + V.'; en = 'Вставьте данные с помощью клавиш Ctrl + V.'"));
	
	Результат = СтрСоединить(Подстроки, Символы.ПС);
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция ТекстПредупрежденияОбОшибкеКопированияБуфер()
	
	Результат = НСтр("ru = 'Скопируйте данные вручную'; en = 'Скопируйте данные вручную'");
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ПоказатьПростоеПредупреждение(ТекстПредупреждения, Таймаут = 120)
	
	МетодКлиента("Модуль_Клиент", "ПоказатьПростоеПредупреждение", ТекстПредупреждения, Таймаут);
	
КонецПроцедуры


#КонецОбласти
