
#Область ПЕРМЕННЫЕ_ПЛАТФОРМЫ

&НаКлиенте
Перем Платформа Экспорт;

&НаСервере
Перем ОбработкаОбъект;

#КонецОбласти

#Область ПРОЦЕДУРЫ_И_ФУНКЦИИ_ПЛАТФОРМЫ

&НаКлиенте
Функция МетодКлиента(ИмяМодуля= "", ИмяМетода, 
		Параметр0= NULL, Параметр1= NULL, Параметр2= NULL, Параметр3= NULL, Параметр4= NULL,
		Параметр5= NULL, Параметр6= NULL, Параметр7= NULL, Параметр8= NULL, Параметр9= NULL) Экспорт
	
	Возврат  Платформа.МетодКлиента(ИмяМодуля, ИмяМетода, 
	Параметр0, Параметр1, Параметр2, Параметр3, Параметр4,
	Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	
КонецФункции

&НаКлиенте
Функция МетодСервераБезКонтекста(ИмяМодуля= "", ИмяМетода,
		Параметр0= NULL, Параметр1= NULL, Параметр2= NULL, Параметр3= NULL, Параметр4= NULL, 
		Параметр5= NULL, Параметр6= NULL, Параметр7= NULL, Параметр8= NULL, Параметр9= NULL) Экспорт
	
	Возврат Платформа.МетодСервераБезКонтекста(ИмяМодуля, ИмяМетода,
	Параметр0, Параметр1, Параметр2, Параметр3, Параметр4,
	Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	
КонецФункции

&НаСервере
Функция МетодСервера(Знач ИмяМодуля= "", Знач ИмяМетода,
		Параметр0= NULL, Параметр1= NULL, Параметр2= NULL, Параметр3= NULL, Параметр4= NULL, 
		Параметр5= NULL, Параметр6= NULL, Параметр7= NULL, Параметр8= NULL, Параметр9= NULL) Экспорт
	
	Возврат ОбработкаОбъект().МетодСервера(ИмяМодуля, ИмяМетода, 
	Параметр0, Параметр1, Параметр2, Параметр3, Параметр4,
	Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	
КонецФункции

&НаСервере
Функция ОбработкаОбъект() Экспорт
	
	Если ОбработкаОбъект = Неопределено Тогда
		
		СтруктураОбработки= ПолучитьИзВременногоХранилища(Объект.ПараметрыКлиентСервер.ВременноеХранилище.АдресОбработкаОбъект);
		
		Если СтруктураОбработки <> Неопределено Тогда
			ОбработкаОбъект= СтруктураОбработки.ОбработкаОбъект;
		КонецЕсли;
		
		Если ОбработкаОбъект = Неопределено Тогда
			
			ОбработкаОбъект= РеквизитФормыВЗначение("Объект");
			
			Попытка
				ПоместитьВоВременноеХранилище(Новый Структура("ОбработкаОбъект", ОбработкаОбъект), Объект.ПараметрыКлиентСервер.ВременноеХранилище.АдресОбработкаОбъект);
			Исключение КонецПопытки;
		
		Иначе
			ОбработкаОбъект.ПараметрыКлиентСервер= Объект.ПараметрыКлиентСервер;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ОбработкаОбъект;
	
КонецФункции

&НаКлиенте
Функция ОсновнаяФорма(ТекущийВладелецФормы)
	
	Если ТекущийВладелецФормы = Неопределено Тогда
		Возврат Неопределено
	ИначеЕсли Прав(ТекущийВладелецФормы.ИмяФормы, 14) = "Форма_Основная" Тогда
		Возврат ТекущийВладелецФормы;
	Иначе
		Возврат ОсновнаяФорма(ТекущийВладелецФормы.ВладелецФормы);
	КонецЕсли;
	
КонецФункции


&НаСервере
Процедура ПлатформаПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ОбъектПараметрыКлиентСервер", Объект.ПараметрыКлиентСервер);
	
КонецПроцедуры

&НаКлиенте
Процедура ПлатформаПриОткрытии(Отказ)
	
	ОсновнаяФорма= ОсновнаяФорма(ВладелецФормы);
	
	Если ОсновнаяФорма <> Неопределено Тогда
		Платформа= ОсновнаяФорма.Платформа;
	КонецЕсли;
		
	Платформа.ПриОткрытииФормыОбработки(ЭтаФорма, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПлатформаПриЗакрытии()
	
	Платформа.ПриЗакрытииФормыОбработки(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область СОБЫТИЯ_ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ПлатформаПриСозданииНаСервере(Отказ, СтандартнаяОбработка);
	
	ЗаполнитьРеквизитыФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ПлатформаПриОткрытии(Отказ);
	
	ЗаполнитьСписокВыбораВариантИспользованияПроксиСервера();
	
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	ПлатформаПриЗакрытии();
	
КонецПроцедуры

#КонецОбласти

#Область СОБЫТИЯ_ЭЛЕМЕНТОВ_ФОРМЫ

&НаКлиенте
Процедура ВариантИспользованияПроксиСервераПриИзменении(Элемент)
	
	УправлениеФормой();
	
КонецПроцедуры

#КонецОбласти

#Область КОМАНДЫ

&НаКлиенте
Процедура Ок(Команда)
	
	Если НЕ Модифицированность Тогда
		
		Закрыть();
		
		Возврат;
		
	КонецЕсли;
	
	ЗаполнитьНастройкиПроксиДаннымиФормы();
	
	МетодКлиента("Модуль_Клиент", "СохранитьНастройкиПрокси", НастройкиПрокси);
	
	Закрыть(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Этаформа.Закрыть(Ложь);

КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПараметрыПодключения(Команда)
	
	НаименованиеСистемы = Платформа.ПараметрыКлиент.СловарьWL.НаименованиеСистемы;
	
	Если ПроверитьПодключение() Тогда
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Подключение к серверу %1 прошло успешно'"), НаименованиеСистемы);
	Иначе
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Не удалось подключиться к серверу %1'"), НаименованиеСистемы);
	КонецЕсли;
	
	ПоказатьПредупреждение(, ТекстСообщения, , НаименованиеСистемы);
	
КонецПроцедуры

#КонецОбласти

#Область УПРАВЛЕНИЕ_ФОРМОЙ

&НаКлиенте
Процедура УправлениеФормой()
	
	Элементы.АдресПроксиСервера.Доступность		= ВариантИспользованияПроксиСервера = "ИспользоватьПроксиСервер";
	Элементы.ПортПроксиСервера.Доступность		= Элементы.АдресПроксиСервера.Доступность;
	Элементы.ЛогинПроксиСервера.Доступность		= Элементы.АдресПроксиСервера.Доступность;
	Элементы.ПарольПроксиСервера.Доступность	= Элементы.АдресПроксиСервера.Доступность;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСписокВыбораВариантИспользованияПроксиСервера()
	
	ВариантыИспользованияПроксиСервера = МетодКлиента("Модуль_Клиент", "ВариантыИспользованияПроксиСервера");
	
	Для Каждого ЭлементСписка Из ВариантыИспользованияПроксиСервера Цикл
		Элементы.ВариантИспользованияПроксиСервера.СписокВыбора.Добавить(ЭлементСписка.Значение, ЭлементСписка.Представление);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область РАБОТА_С_НАСТРОЙКАМИ

&НаКлиенте
Функция ПроверитьПодключение()
	
	ЗаполнитьНастройкиПроксиДаннымиФормы();
	
	Результат = МетодКлиента("Модуль_Клиент", "ПроверитьИнтернетПодключение", НастройкиПрокси);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СЛУЖЕБНЫЕ

&НаСервере
Процедура ЗаполнитьРеквизитыФормы()
	
	НастройкиПрокси = МетодСервера(, "НастройкиПроксиСервера");
	
	ВариантИспользованияПроксиСервера = НастройкиПрокси.ВариантИспользования;
	АдресПроксиСервера	 = НастройкиПрокси.Адрес;
	ПортПроксиСервера	 = НастройкиПрокси.Порт;
	ЛогинПроксиСервера	 = НастройкиПрокси.Логин;
	ПарольПроксиСервера	 = НастройкиПрокси.Пароль;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНастройкиПроксиДаннымиФормы()
	
	Если ЗначениеЗаполнено(ПортПроксиСервера) Тогда
		АдресПорт = АдресПроксиСервера + ":" + ПортПроксиСервера;
	Иначе
		АдресПорт = АдресПроксиСервера;
	КонецЕсли;
	
	НастройкиПрокси.ВариантИспользования = ВариантИспользованияПроксиСервера;
	НастройкиПрокси.АдресПорт = АдресПорт;
	НастройкиПрокси.Адрес	 = АдресПроксиСервера;
	НастройкиПрокси.Порт	 = ПортПроксиСервера;
	НастройкиПрокси.Логин	 = ЛогинПроксиСервера;
	НастройкиПрокси.Пароль	 = ПарольПроксиСервера;
	
КонецПроцедуры

#КонецОбласти
