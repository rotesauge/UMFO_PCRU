
&НаКлиенте
Перем ОсновнаяФорма;


// Сервисные методы

&НаКлиенте
Функция Модуль_ЯдроНаКлиенте()
	
	Результат = ОсновнаяФорма().Модуль_ЯдроНаКлиенте();
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция ОсновнаяФорма() Экспорт

	Если ОсновнаяФорма = Неопределено Тогда
		ОсновнаяФорма = ВладелецФормы.ОсновнаяФорма();
	КонецЕсли;	
	
	Возврат ОсновнаяФорма;
	
КонецФункции

// Сервисные методы


// Обработчики событий формы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТекущееСостояние = Состояние_ДействиеНеВыбрано();
	
	УведомлениеПользователя = Параметры.СписокУведомлений[0];
	
	ЗаголовокУведомления = УведомлениеПользователя.ЗаголовокУведомления;
	ТекстУведомления = УведомлениеПользователя.ТекстУведомления;
	
	Если ЗначениеЗаполнено(УведомлениеПользователя.ЗаголовокКнопки) Тогда
		Элементы.КнопкаУведомления.Заголовок = УведомлениеПользователя.ЗаголовокКнопки;
		АдресРесурса = УведомлениеПользователя.АдресРесурса;
	КонецЕсли;
	
	УстановитьВидимостьЭлементов();
	УстановитьСвойстваФормыТакси();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы = Ложь)
	
	Если Не ЗавершениеРаботы Тогда
		ОбработатьТекущееСостояниеФормы();
	КонецЕсли;
	
КонецПроцедуры

// Обработчики событий формы


// Служебные процедуры и функции

&НаСервере
Процедура УстановитьВидимостьЭлементов()
	
	Элементы.КнопкаУведомления.Видимость = ЗначениеЗаполнено(Элементы.КнопкаУведомления.Заголовок);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСвойстваФормыТакси()
	
	СвойствоАвтоМаксимальнаяШирина = Новый Структура("АвтоМаксимальнаяШирина", Ложь);
	
	ЗаполнитьЗначенияСвойств(Элементы.ЗаголовокУведомления,	СвойствоАвтоМаксимальнаяШирина);
	ЗаполнитьЗначенияСвойств(Элементы.ТекстУведомления,		СвойствоАвтоМаксимальнаяШирина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьТекущееСостояниеФормы()
	
	Если ТекущееСостояние = Состояние_ДействиеНеВыбрано() Тогда
		
		Метрика_НажатиеКнопкиФормы("Закрыть");
		
	ИначеЕсли ТекущееСостояние = Состояние_НажатиеКнопкиУведомления() Тогда
		
		Метрика_НажатиеКнопкиФормы("Нажали кнопку");
		
		ОсновнаяФорма().ОткрытьХостВIE(АдресРесурса);
		
	ИначеЕсли ТекущееСостояние = Состояние_ЗадатьВопросОнлайнКонсультанту() Тогда
		
		Метрика_НажатиеКнопкиФормы("Задать вопрос онлайн-консультанту");
		
		ОсновнаяФорма().ОткрытьОнлайнЧатПродолжение();
		
	ИначеЕсли ТекущееСостояние = Состояние_НаписатьПисьмоВТехподдержку() Тогда
		
		Метрика_НажатиеКнопкиФормы("Написать письмо в техподдержку");
		
		ОсновнаяФорма().ОтправитьEmailПродолжение();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция Состояние_ДействиеНеВыбрано()
	
	Возврат "Действие не выбрано";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция Состояние_НажатиеКнопкиУведомления()
	
	Возврат "Нажатие кнопки уведомления";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция Состояние_ЗадатьВопросОнлайнКонсультанту()
	
	Возврат "Задать вопрос онлайн-консультанту";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция Состояние_НаписатьПисьмоВТехподдержку()
	
	Возврат "Написать письмо в техподдержку";
	
КонецФункции

// Служебные процедуры и функции


// Обработчики событий элементов формы

&НаКлиенте
Процедура КнопкаУведомления(Команда)
	
	ТекущееСостояние = Состояние_НажатиеКнопкиУведомления();
	
	ОбработатьТекущееСостояниеФормы();
	
	ТекущееСостояние = Состояние_ДействиеНеВыбрано();
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьОнлайнКонсультантНажатие(Элемент)
	
	ТекущееСостояние = Состояние_ЗадатьВопросОнлайнКонсультанту();
	
	ОбработатьТекущееСостояниеФормы();
	
	ТекущееСостояние = Состояние_ДействиеНеВыбрано();
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьПисьмоВТехподдержкуНажатие(Элемент)
	
	ТекущееСостояние = Состояние_НаписатьПисьмоВТехподдержку();
	
	ОбработатьТекущееСостояниеФормы();
	
	ТекущееСостояние = Состояние_ДействиеНеВыбрано();
	
КонецПроцедуры

// Обработчики событий элементов формы


// Метрики

&НаКлиенте
Процедура Метрика_НажатиеКнопкиФормы(НазваниеКнопки)
	
	НазваниеФормы = "Форма экстренного уведомления";
	НазваниеКатегории = ОсновнаяФорма().Метрика_НазваниеКатегории().ЭкстренноеУведомление;
	
	Модуль_ЯдроНаКлиенте().Метрика_ДобавитьПоведение_НажатиеКнопки(НазваниеФормы, НазваниеКатегории, НазваниеКнопки);
	
КонецПроцедуры

// Метрики
