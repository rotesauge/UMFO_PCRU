
#Область ПЕРМЕННЫЕ_ПЛАТФОРМЫ

&НаКлиенте
Перем Платформа Экспорт;

&НаСервере
Перем ОбработкаОбъект;

#КонецОбласти

#Область ПеременныеМодуля

&НаКлиенте
Перем ДанныеСертификата;

&НаКлиенте
Перем ДанныеПодписанта;

&НаКлиенте
Перем ПодписантИП;

&НаКлиенте
Перем КнопкаЗаполнитьНажата;

#КонецОбласти

#Область ПРОЦЕДУРЫ_И_ФУНКЦИИ_ПЛАТФОРМЫ

&НаКлиенте
Функция МетодКлиента(ИмяМодуля= "", ИмяМетода, 
		Параметр0= NULL, Параметр1= NULL, Параметр2= NULL, Параметр3= NULL, Параметр4= NULL,
		Параметр5= NULL, Параметр6= NULL, Параметр7= NULL, Параметр8= NULL, Параметр9= NULL) Экспорт
	
	Возврат  Платформа.МетодКлиента(ИмяМодуля, ИмяМетода, 
	Параметр0, Параметр1, Параметр2, Параметр3, Параметр4,
	Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	
КонецФункции

&НаКлиенте
Функция МетодСервераБезКонтекста(ИмяМодуля= "", ИмяМетода,
		Параметр0= NULL, Параметр1= NULL, Параметр2= NULL, Параметр3= NULL, Параметр4= NULL, 
		Параметр5= NULL, Параметр6= NULL, Параметр7= NULL, Параметр8= NULL, Параметр9= NULL) Экспорт
	
	Возврат Платформа.МетодСервераБезКонтекста(ИмяМодуля, ИмяМетода,
	Параметр0, Параметр1, Параметр2, Параметр3, Параметр4,
	Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	
КонецФункции

&НаСервере
Функция МетодСервера(Знач ИмяМодуля= "", Знач ИмяМетода,
		Параметр0= NULL, Параметр1= NULL, Параметр2= NULL, Параметр3= NULL, Параметр4= NULL, 
		Параметр5= NULL, Параметр6= NULL, Параметр7= NULL, Параметр8= NULL, Параметр9= NULL) Экспорт
	
	Возврат ОбработкаОбъект().МетодСервера(ИмяМодуля, ИмяМетода, 
	Параметр0, Параметр1, Параметр2, Параметр3, Параметр4,
	Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	
КонецФункции

&НаСервере
Функция ОбработкаОбъект() Экспорт
	
	Если ОбработкаОбъект = Неопределено Тогда
		
		СтруктураОбработки= ПолучитьИзВременногоХранилища(Объект.ПараметрыКлиентСервер.ВременноеХранилище.АдресОбработкаОбъект);
		
		Если СтруктураОбработки <> Неопределено Тогда
			ОбработкаОбъект= СтруктураОбработки.ОбработкаОбъект;
		КонецЕсли;
		
		Если ОбработкаОбъект = Неопределено Тогда
			
			ОбработкаОбъект= РеквизитФормыВЗначение("Объект");
			
			Попытка
				ПоместитьВоВременноеХранилище(Новый Структура("ОбработкаОбъект", ОбработкаОбъект), Объект.ПараметрыКлиентСервер.ВременноеХранилище.АдресОбработкаОбъект);
			Исключение КонецПопытки;
		
		Иначе
			ОбработкаОбъект.ПараметрыКлиентСервер= Объект.ПараметрыКлиентСервер;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ОбработкаОбъект;
	
КонецФункции

&НаКлиенте
Функция ОсновнаяФорма(ТекущийВладелецФормы)
	
	Если ТекущийВладелецФормы = Неопределено Тогда
		Возврат Неопределено
	ИначеЕсли Прав(ТекущийВладелецФормы.ИмяФормы, 14) = "Форма_Основная" Тогда
		Возврат ТекущийВладелецФормы;
	Иначе
		Возврат ОсновнаяФорма(ТекущийВладелецФормы.ВладелецФормы);
	КонецЕсли;
	
КонецФункции


&НаСервере
Процедура ПлатформаПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ОбъектПараметрыКлиентСервер", Объект.ПараметрыКлиентСервер);
	
КонецПроцедуры

&НаКлиенте
Процедура ПлатформаПриОткрытии(Отказ)
	
	ОсновнаяФорма= ОсновнаяФорма(ВладелецФормы);
	
	Если ОсновнаяФорма <> Неопределено Тогда
		Платформа= ОсновнаяФорма.Платформа;
	КонецЕсли;
		
	Платформа.ПриОткрытииФормыОбработки(ЭтаФорма, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПлатформаПриЗакрытии()
	
	Платформа.ПриЗакрытииФормыОбработки(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция БазовыеФорматыНаКлиенте()
	
	Результат = МетодКлиента("Модуль_Клиент", "БазовыеФорматы");
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция ТипыКонтентаНаКлиенте()
	
	Результат = МетодКлиента("Модуль_Клиент", "ТипыКонтента");
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция БазовыеФорматыНаСервере()
	
	Результат = МетодСервера(, "БазовыеФорматы");
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ТипыКонтентаНаСервере()
	
	Результат = МетодСервера(, "ТипыКонтента");
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ПлатформаПриСозданииНаСервере(Отказ, СтандартнаяОбработка);
	
	УстановитьОбязательныеСвойстваЭлементов();
	
	BoxId			  = Параметры.BoxId;
	AttachmentVersion = Параметры.AttachmentVersion;
	
	УправлениеФормойНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ПлатформаПриОткрытии(Отказ);
	
	КнопкаЗаполнитьНажата_ПолучитьЗначение();
	ПолучитьДанныеСертификатаИПодписанта();
	КнопкаРедактироватьПолномочия_УстановитьДоступность();
	ПрочитатьНастройкиПоУмолчанию();
	ЗаполнитьСтрокуПодписант();
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	ПлатформаПриЗакрытии();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	КнопкаЗаполнитьНажата_СохранитьЗначение();
	
КонецПроцедуры


&НаКлиенте
Процедура Подписать(Команда)
	
	Результат = Новый Структура;
	Результат.Вставить("ОтветныйТитул", ОтветныйТитул());
	
	Закрыть(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаЗаполнитьНажатие(Команда)
	
	КнопкаЗаполнитьНажата = НЕ КнопкаЗаполнитьНажата;
	
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьПолномочия(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("BoxId", BoxId);
	ПараметрыФормы.Вставить("AttachmentVersion", AttachmentVersion);
	ПараметрыФормы.Вставить("ДанныеПодписанта" , ДанныеПодписанта);
	
	МетодКлиента(,"ОткрытьФормуОбработкиМодально", "НастройкаПодписиУПД", ПараметрыФормы, ЭтаФорма, "НастроитьПолномочияЗавершение");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРаботникаДаннымиПодписанта(Команда)
	
	Если Не ЗначениеЗаполнено(ДанныеПодписанта) Тогда 
		Возврат;
	КонецЕсли;
	
	РаботникИмя		 = ДанныеПодписанта.FirstName;
	РаботникФамилия  = ДанныеПодписанта.Surname;
	РаботникОтчество = ДанныеПодписанта.Patronymic;
	
	РаботникДолжность			= ДанныеПодписанта.JobTitle;
	РаботникОснованиеПолномочий = ДанныеПодписанта.PowersBase;
	РаботникИныеСведения		= ДанныеПодписанта.SignerInfo;
	
	КнопкаПодписать_УстановитьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриемкиПриИзменении(Элемент)
	
	КнопкаПодписать_УстановитьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура СодержаниеОперацииПриИзменении(Элемент)
	
	КнопкаПодписать_УстановитьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура РаботникДолжностьПриИзменении(Элемент)
	
	КнопкаПодписать_УстановитьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура РаботникФамилияПриИзменении(Элемент)
	
	КнопкаПодписать_УстановитьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура РаботникИмяПриИзменении(Элемент)
	
	КнопкаПодписать_УстановитьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура РаботникОснованиеПолномочийПриИзменении(Элемент)
	
	КнопкаПодписать_УстановитьДоступность();
	
КонецПроцедуры


&НаСервере
Процедура УправлениеФормойНаСервере()
	
	БазовыеФорматы = БазовыеФорматыНаСервере();
	
	Элементы.ПредставлениеДокумента.Заголовок = Параметры.ПредставлениеДокумента;
	
	Если AttachmentVersion = БазовыеФорматы.ucd Тогда
		
		Элементы.ВидОперации.Видимость 			 = Ложь;
		Элементы.ГруппаЗаполнить.Видимость		 = Ложь;
		Элементы.ГруппаКнопкиЗаполнить.Видимость = Ложь;
		
	КонецЕсли;
	
	Если AttachmentVersion <> БазовыеФорматы.rezru Тогда
		Элементы.СодержаниеОперации.ОграничениеТипа = Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(255));
	КонецЕсли;
	
	Форма_УстановитьЗаголовок();
	НадписьЗаполнить_УстановитьЗаголовок();
	
КонецПроцедуры

&НаСервере
Процедура Форма_УстановитьЗаголовок()
	
	БазовыеФорматы = БазовыеФорматыНаСервере();
	
	НовыйЗаголовок = "Подписание ";
	
	Если AttachmentVersion = БазовыеФорматы.utd820
		Или AttachmentVersion = БазовыеФорматы.utd Тогда
		
		НовыйЗаголовок = НовыйЗаголовок + "УПД";
		
	ИначеЕсли AttachmentVersion = БазовыеФорматы.ucd Тогда
		
		НовыйЗаголовок = НовыйЗаголовок + "УКД";
		
	ИначеЕсли AttachmentVersion = БазовыеФорматы.tovtorg Тогда
		
		НовыйЗаголовок = НовыйЗаголовок + "накладной";
		
	ИначеЕсли AttachmentVersion = БазовыеФорматы.rezru Тогда
		
		НовыйЗаголовок = НовыйЗаголовок + "акта";
		
	КонецЕсли;
	
	ОбновитьСвойствоЭлементаФормы(ЭтаФорма, "Заголовок", НовыйЗаголовок);
	
КонецПроцедуры

&НаСервере
Процедура НадписьЗаполнить_УстановитьЗаголовок()
	
	Если Не Элементы.ГруппаКнопкиЗаполнить.Видимость Тогда
		Возврат;
	КонецЕсли;
	
	БазовыеФорматы = БазовыеФорматыНаСервере();
	
	Если AttachmentVersion = БазовыеФорматы.rezru Тогда
		НовыйЗаголовок = "Сведения по договору подряда";
	Иначе
		НовыйЗаголовок = "Груз принял (получил)";
	КонецЕсли;
	
	ОбновитьСвойствоЭлементаФормы(Элементы.НадписьЗаполнить, "Заголовок", НовыйЗаголовок);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОбязательныеСвойстваЭлементов()
	
	// Устанавливаем свойства программно, на случай если обработку сохранят платформой младше 8.3.7
	
	СвойствоАвтоМаксимальнаяШирина = Новый Структура("АвтоМаксимальнаяШирина", Ложь);
	ЗаполнитьЗначенияСвойств(Элементы.СтрокаПодписант, СвойствоАвтоМаксимальнаяШирина);
	
КонецПроцедуры


&НаКлиенте
Процедура УправлениеФормой()
	
	ГруппаЗаполнить_УстановитьТекущуюСтраницу();
	КнопкаЗаполнить_УстановитьЗаголовок();
	КнопкаЗаполнитьРаботника_УстановитьВидимость();
	КнопкаПодписать_УстановитьДоступность();
	КартинкаСертификат_УстановитьВидимость();
	НадписьНеЗаполненыПолномочия_УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппаЗаполнить_УстановитьТекущуюСтраницу()
	
	Если НЕ Элементы.ГруппаЗаполнить.Видимость Тогда
		Возврат;
	КонецЕсли;
	
	БазовыеФорматы = БазовыеФорматыНаКлиенте();
	
	Если КнопкаЗаполнитьНажата Тогда
		
		Если AttachmentVersion = БазовыеФорматы.rezru Тогда
			Элементы.ГруппаЗаполнить.ТекущаяСтраница = Элементы.ГруппаЗаполнитьДоговор;
		Иначе
			Элементы.ГруппаЗаполнить.ТекущаяСтраница = Элементы.ГруппаЗаполнитьРаботника;
		КонецЕсли;
		
	Иначе
		Элементы.ГруппаЗаполнить.ТекущаяСтраница = Элементы.ГруппаЗаполнитьПустая;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаЗаполнить_УстановитьЗаголовок()
	
	Если Элементы.ГруппаКнопкиЗаполнить.Видимость Тогда
		
		НовыйЗаголовок = ?(КнопкаЗаполнитьНажата, "Отменить заполнение", "Заполнить");
		ОбновитьСвойствоЭлементаФормы(Элементы.КнопкаЗаполнить, "Заголовок", НовыйЗаголовок);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаЗаполнитьРаботника_УстановитьВидимость()
	
	БазовыеФорматы = БазовыеФорматыНаКлиенте();
	
	ВидимостьЭлемента = Элементы.ГруппаКнопкиЗаполнить.Видимость
						И КнопкаЗаполнитьНажата
						И ЗначениеЗаполнено(ДанныеПодписанта)
						И AttachmentVersion <> БазовыеФорматы.rezru;
	
	ОбновитьСвойствоЭлементаФормы(Элементы.КнопкаЗаполнитьРаботника, "Видимость", ВидимостьЭлемента)
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаПодписать_УстановитьДоступность()
	
	БазовыеФорматы = БазовыеФорматыНаКлиенте();
	
	Если AttachmentVersion = БазовыеФорматы.rezru Тогда
		
		Элементы.КнопкаПодписать.Доступность =
		
		ЗначениеЗаполнено(ДанныеСертификата)
		И ЗначениеЗаполнено(ДанныеПодписанта)
		И ЗначениеЗаполнено(СодержаниеОперации);
		
	Иначе
		
		Элементы.КнопкаПодписать.Доступность =
		
		ЗначениеЗаполнено(ДанныеСертификата)
		И ЗначениеЗаполнено(ДанныеПодписанта)
		И ЗначениеЗаполнено(ДатаПриемки)
		И ЗначениеЗаполнено(СодержаниеОперации)
		И (НЕ КнопкаЗаполнитьНажата
			ИЛИ (ЗначениеЗаполнено(РаботникДолжность) 
				 И ЗначениеЗаполнено(РаботникФамилия)
				 И ЗначениеЗаполнено(РаботникИмя)  
				 И ЗначениеЗаполнено(РаботникОснованиеПолномочий)));
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаРедактироватьПолномочия_УстановитьДоступность()
	
	Элементы.КнопкаРедактироватьПолномочия.Доступность = ЗначениеЗаполнено(ДанныеСертификата);
	
КонецПроцедуры

&НаКлиенте
Процедура КартинкаСертификат_УстановитьВидимость()
	
	ВидимостьЭлемента = ЗначениеЗаполнено(ДанныеСертификата);
	
	ОбновитьСвойствоЭлементаФормы(Элементы.КартинкаСертификат, "Видимость", ВидимостьЭлемента);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьНеЗаполненыПолномочия_УстановитьВидимость()
	
	ВидимостьЭлемента = НЕ ЗначениеЗаполнено(ДанныеПодписанта);
	
	ОбновитьСвойствоЭлементаФормы(Элементы.НадписьНеЗаполненыПолномочия, "Видимость", ВидимостьЭлемента);
	
КонецПроцедуры


&НаКлиенте
Процедура ПолучитьДанныеСертификатаИПодписанта()
	
	БазовыеФорматы = БазовыеФорматыНаКлиенте();
	
	ДанныеСертификата = МетодКлиента("Модуль_РаботаССерверомДиадок", "ДанныеКонтекстаДиадок", BoxId, "ДанныеОрганизации").Certificate;
	ДанныеПодписанта  = МетодКлиента("Модуль_РаботаССерверомДиадок", "ПрочитатьДанныеПодписанта", BoxId, AttachmentVersion, Ложь);
	
	// ДанныеПодписанта для TovTorg и Act552 пересекаются с UniversalTransferDocument, пробуем их получить.
	Если НЕ ЗначениеЗаполнено(ДанныеПодписанта) И (AttachmentVersion = БазовыеФорматы.tovtorg ИЛИ AttachmentVersion = БазовыеФорматы.rezru) Тогда
		ДанныеПодписанта = МетодКлиента("Модуль_РаботаССерверомДиадок", "ПрочитатьДанныеПодписанта", BoxId, БазовыеФорматы.utd, Ложь);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеПодписанта) И НЕ ЗначениеЗаполнено(ДанныеПодписанта.PowersBase) Тогда
		ДанныеПодписанта.PowersBase = "Должностные обязанности" // Значение по умлочанию
	КонецЕсли; 
	
	ПодписантИП = ЗначениеЗаполнено(ДанныеСертификата) И СтрДлина(ДанныеСертификата.INN) = 12;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСтрокуПодписант()
	
	Если ЗначениеЗаполнено(ДанныеСертификата) Тогда
		Элементы.СтрокаПодписант.Заголовок = ДанныеСертификата.OrganizationName + ", " + ДанныеСертификата.Name;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьНастройкиПоУмолчанию()
	
	СодержаниеОперации = СодержаниеОперацииПоУмолчанию();
	
	ДатаПриемки = ТекущаяДата();
	
	Если НЕ ЗначениеЗаполнено(РаботникОснованиеПолномочий) Тогда
		РаботникОснованиеПолномочий = "Должностные обязанности";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция СодержаниеОперацииПоУмолчанию()
	
	БазовыеФорматы = БазовыеФорматыНаКлиенте();
	
	Результат = "";
	
	Если AttachmentVersion = БазовыеФорматы.utd820
		Или AttachmentVersion = БазовыеФорматы.utd Тогда
		
		Результат = "Товары и услуги получены, работы приняты";
		
	ИначеЕсли AttachmentVersion = БазовыеФорматы.ucd Тогда
		
		Результат = "С изменением стоимости согласен";
		
	ИначеЕсли AttachmentVersion = БазовыеФорматы.tovtorg Тогда
		
		Результат = "Перечисленные в документе ценности переданы";
		
	ИначеЕсли AttachmentVersion = БазовыеФорматы.rezru Тогда
		
		Результат = "Результаты работ переданы (услуги оказаны)";
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура НастроитьПолномочияЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(РезультатЗакрытия) Тогда
		ДанныеПодписанта = РезультатЗакрытия;
		НадписьНеЗаполненыПолномочия_УстановитьВидимость();
		КнопкаПодписать_УстановитьДоступность();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаЗаполнитьНажата_ПолучитьЗначение()
	
	БазовыеФорматы = БазовыеФорматыНаКлиенте();
	
	Если AttachmentVersion = БазовыеФорматы.rezru Тогда
		КнопкаЗаполнитьНажата = ЗаполнитьДоговор;
	ИначеЕсли AttachmentVersion = БазовыеФорматы.ucd Тогда
		КнопкаЗаполнитьНажата = Ложь;
	Иначе
		КнопкаЗаполнитьНажата = ЗаполнитьРаботника;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаЗаполнитьНажата_СохранитьЗначение()
	
	БазовыеФорматы = БазовыеФорматыНаКлиенте();
	
	Если AttachmentVersion = БазовыеФорматы.rezru Тогда
		ЗаполнитьДоговор   = КнопкаЗаполнитьНажата;
	ИначеЕсли AttachmentVersion <> БазовыеФорматы.ucd Тогда
		ЗаполнитьРаботника = КнопкаЗаполнитьНажата;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьСвойствоЭлементаФормы(Элемент, СвойствоЭлемента, ЗначениеСвойства)
	
	Если Элемент[СвойствоЭлемента] <> ЗначениеСвойства Тогда
		Элемент[СвойствоЭлемента] = ЗначениеСвойства;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ОтветныйТитул()
	
	БазовыеФорматы = БазовыеФорматыНаКлиенте();
	
	Результат = Неопределено;
	
	Если AttachmentVersion = БазовыеФорматы.utd820 Тогда
		
		Результат = Utd820BuyerContent();
		
	ИначеЕсли AttachmentVersion = БазовыеФорматы.rezru Тогда
		
		Результат = Act552BuyerContent();
	
	ИначеЕсли AttachmentVersion = БазовыеФорматы.tovtorg Тогда
	
		Результат = TovTorgBuyerContent();
		
	Иначе
		Результат = UtdBuyerContent();
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция Act552BuyerContent()
	
	Результат = Новый Структура;
	
	Результат.Вставить("DocumentCreator", DocumentCreator());
	
	Если ЗначениеЗаполнено(ДанныеПодписанта.OrganizationPowersBase) Тогда
		Результат.Вставить("DocumentCreatorBase", Лев(ДанныеПодписанта.OrganizationPowersBase, 120));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДатаПриемки) Тогда
		Результат.Вставить("AcceptanceDate", ДатаПриемки);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВидОперации) Тогда
		Результат.Вставить("OperationType", ВидОперации);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СодержаниеОперации) Тогда
		Результат.Вставить("OperationContent", СодержаниеОперации);
	КонецЕсли;
	
	Если КнопкаЗаполнитьНажата Тогда
		
		Если ЗначениеЗаполнено(ДатаПолучения) Тогда
			Результат.Вставить("CreatedThingAcceptDate", ДатаПолучения);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СведенияОПолучении) Тогда
			Результат.Вставить("CreatedThingInfo", СведенияОПолучении);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеПодписанта) Тогда
		Результат.Вставить("Signers", Новый Массив);
		Результат.Signers.Добавить(Новый Структура("SignerDetails", ДанныеПодписанта));
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция TovTorgBuyerContent()
	
	Результат = Новый Структура;
	
	Результат.Вставить("DocumentCreator", DocumentCreator());
	
	Если ЗначениеЗаполнено(ДанныеПодписанта.OrganizationPowersBase) Тогда
		Результат.Вставить("DocumentCreatorBase", Лев(ДанныеПодписанта.OrganizationPowersBase, 120));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДатаПриемки) Тогда
		Результат.Вставить("AcceptanceDate", ДатаПриемки);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВидОперации) Тогда
		Результат.Вставить("OperationCode", ВидОперации);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СодержаниеОперации) Тогда
		Результат.Вставить("OperationContent", СодержаниеОперации);
	КонецЕсли;
	
	Если КнопкаЗаполнитьНажата Тогда
		
		Результат.Вставить("Employee", Новый Структура);
		
		Результат.Employee.Вставить("FirstName", РаботникИмя);
		Результат.Employee.Вставить("Surname"  , РаботникФамилия);
		
		Если ЗначениеЗаполнено(РаботникОтчество) Тогда
			Результат.Employee.Вставить("Patronymic", РаботникОтчество);
		КонецЕсли;
		
		Результат.Employee.Вставить("EmployeePosition", РаботникДолжность);
		
		Если ЗначениеЗаполнено(РаботникОснованиеПолномочий) Тогда
			Результат.Employee.Вставить("EmployeeBase", РаботникОснованиеПолномочий);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(РаботникИныеСведения) Тогда
			Результат.Employee.Вставить("EmployeeInfo", РаботникИныеСведения);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеПодписанта) Тогда
		Результат.Вставить("Signers", Новый Массив);
		Результат.Signers.Добавить(Новый Структура("SignerDetails", ДанныеПодписанта));
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция UtdBuyerContent()
	
	Результат = Новый Структура;
	
	Результат.Вставить("Creator", DocumentCreator());
	
	Если ЗначениеЗаполнено(ДанныеПодписанта.OrganizationPowersBase) Тогда
		Результат.Вставить("CreatorBase", Лев(ДанныеПодписанта.OrganizationPowersBase, 120));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДатаПриемки) Тогда
		Результат.Вставить("AcceptanceDate", ДатаПриемки);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВидОперации) Тогда
		Результат.Вставить("OperationCode", ВидОперации);
	КонецЕсли;
	
	Результат.Вставить("OperationContent", СодержаниеОперации);
	
	Если КнопкаЗаполнитьНажата Тогда
		
		Результат.Вставить("Employee", Новый Структура);
		
		Результат.Employee.Вставить("FirstName", РаботникИмя);
		Результат.Employee.Вставить("Surname"  , РаботникФамилия);
		
		Если ЗначениеЗаполнено(РаботникОтчество) Тогда
			Результат.Employee.Вставить("Patronymic", РаботникОтчество);
		КонецЕсли;
		
		Результат.Employee.Вставить("EmployeePosition", РаботникДолжность);
		Результат.Employee.Вставить("EmployeeBase"	  , РаботникОснованиеПолномочий);
		
		Если ЗначениеЗаполнено(РаботникИныеСведения) Тогда
			Результат.Employee.Вставить("EmployeeInfo", РаботникИныеСведения);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеПодписанта) Тогда
		Результат.Вставить("Signers", Новый Массив);
		Результат.Signers.Добавить(Новый Структура("SignerDetails", ДанныеПодписанта));
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция Utd820BuyerContent()
	
	Результат = Новый Структура;
	
	Результат.Вставить("DocumentCreator", DocumentCreator());
	
	Если ЗначениеЗаполнено(ДанныеПодписанта.OrganizationPowersBase) Тогда
		Результат.Вставить("DocumentCreatorBase", Лев(ДанныеПодписанта.OrganizationPowersBase, 120));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДатаПриемки) Тогда
		Результат.Вставить("AcceptanceDate", ДатаПриемки);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВидОперации) Тогда
		Результат.Вставить("OperationCode", ВидОперации);
	КонецЕсли;
	
	Результат.Вставить("OperationContent", СодержаниеОперации);
	
	Если КнопкаЗаполнитьНажата Тогда
		
		Результат.Вставить("Employee", Новый Структура);
		
		Результат.Employee.Вставить("FirstName", РаботникИмя);
		Результат.Employee.Вставить("Surname"  , РаботникФамилия);
		
		Если ЗначениеЗаполнено(РаботникОтчество) Тогда
			Результат.Employee.Вставить("Patronymic", РаботникОтчество);
		КонецЕсли;
		
		Результат.Employee.Вставить("EmployeePosition", РаботникДолжность);
		Результат.Employee.Вставить("EmployeeBase"	  , РаботникОснованиеПолномочий);
		
		Если ЗначениеЗаполнено(РаботникИныеСведения) Тогда
			Результат.Employee.Вставить("EmployeeInfo", РаботникИныеСведения);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеПодписанта) Тогда
		Результат.Вставить("Signers", Новый Массив);
		Результат.Signers.Добавить(Новый Структура("SignerDetails", ДанныеПодписанта));
	КонецЕсли;
	
	//Результат.Вставить("BuyerInfoCircumPublicProc", );
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция DocumentCreator() 
	
	Результат = "";
	
	Если ПодписантИП Тогда
		Результат = "ИП " + ДанныеПодписанта.Surname + " " + ДанныеПодписанта.FirstName + ?(ЗначениеЗаполнено(ДанныеПодписанта.Patronymic), " " + ДанныеПодписанта.Patronymic, "");
	Иначе
		Результат = ДанныеСертификата.OrganizationName;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции
